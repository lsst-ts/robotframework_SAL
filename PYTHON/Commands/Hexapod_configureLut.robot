*** Settings ***
Documentation    Hexapod_configureLut commander/controller tests.
Force Tags    python    
Suite Setup    Run Keywords    Log Many    ${Host}    ${subSystem}    ${component}    ${timeout}
...    AND    Create Session    Commander    AND    Create Session    Controller
Suite Teardown    Close All Connections
Library    SSHLibrary
Library    String
Resource    ../../Global_Vars.robot
Resource    ../../common.robot

*** Variables ***
${subSystem}    hexapod
${component}    configureLut
${timeout}    30s

*** Test Cases ***
Verify Component Commander and Controller
    [Tags]    smoke
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Commander_${component}.py
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Controller_${component}.py

Start Commander - Verify Missing Inputs Error
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain    ${output}   ERROR : Invalid or missing arguments :

Start Commander - Verify Timeout without Controller
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 10.3646 2.1833 78.3711 96.0846 46.174 46.7835 29.4799 52.5872 91.3752 51.476 90.5134 99.9729 48.8982 97.2348 99.8836 26.1254 7.4107 36.7875 68.2809 4.4284 42.8432 99.0974 37.5596 20.4825 61.6095 65.5966 96.5001 37.8659 79.6195 60.2206 41.7323 10.9455 17.4426 24.1221 97.1857 69.4188 4.4354 2.729 9.6216 55.9922 17.2776 43.6961 8.606 15.2258 87.1474 20.7602 40.0815 88.6484 42.3785 33.3583 23.5658 81.3546 98.9449 53.873 65.8309 10.2507 56.5236 12.145 69.2069 42.6736 73.7416 61.4849 96.7756 42.0143 77.396 20.0278 25.7634 72.406 42.4533 65.6557 75.7337 80.3138 98.5678 12.4074 98.6668 91.048 22.4048 63.8711 32.5879 48.4925 67.5433 53.4192 28.9356 9.4787 21.6899 17.9452 3.8197 69.2662 90.3762 32.9303 66.5743 64.9939 22.4075 8.457 41.0689 39.0877 15.2771 59.211 33.4319 13.7464 94.6223 2.8108 65.2427 49.2455 27.4711 66.2326 1.4863 12.2451 72.3096 42.1311 82.2299 32.5199 9.7777 69.8965 16.4706 15.0412 69.5668 61.1407 24.0361 93.4282 38.084 5.5455 88.2721 81.9241 25.5661 10.6278 87.2119 67.3345 76.4396 23.0776 42.7745 94.729 58.5483 93.3794 8.0043 3.488 66.0147 70.0929 31.7474 68.8462 83.9584 24.2327 92.3403 91.7744 72.4744 3.1277 83.843 43.1607 14.1459 79.4917 97.644 18.2372 38.6987 14.7375 9.7748 98.3442 64.6945 96.0961 32.324 58.0812 45.2134 75.6716 89.709 54.0044 24.6392 2.1029 27.0026 98.4104 57.4686 5.0965 99.4068 99.3151 68.7696 41.264 13.6329 60.2319 70.9666 56.8553 16.6599 25.8404 0.5966 64.356 91.6761 54.8391 10.1676 73.0816 22.2991 64.3982 56.2845 57.3258 77.4454 42.3643 62.5556 34.7534 35.1908 91.7958 43.333 10.8204 17.3816 76.8456 28.1947 14.9025 45.8398 95.0702 93.6391 31.8315 53.0809 57.431 88.3508 12.3829 34.2108 62.3343 99.0424 78.9084 23.893 76.7749 31.5673 79.9985 26.682 78.4428 78.3791 10.6275 83.5863 65.3139 51.567 45.5947 42.7568 94.8253 58.5585 6.0962 60.7837 93.685 94.9715 74.1532 65.4048 10.2665 97.0201 9.1957 49.3264 11.2401 28.1806 20.5299 53.1012 98.891 9.997 66.4478 31.5035 90.9635 25.6827 97.2731 32.9036 64.3038 98.5671 96.5363 85.5726 32.3414 54.523 74.6179 78.294 1.6498 9.8198 97.3708 28.7327 39.3729 98.1649 63.8303 18.7635 55.8952 70.8599 10.3132 20.2539 72.2007 43.1731 69.1273 26.3927 97.7122 49.0664 17.8437 57.6451 72.6718 40.4606 83.7049 6.6201 81.6369 27.976 89.1689 64.5751 69.5934 79.9605 15.8877 86.8035 17.174 91.1755 68.8943 56.2996 91.7039 88.0774 82.5111 26.6447 81.9013 4.193 99.5158 14.2527 61.8712 18.4992 47.1395 59.8855 61.0821 27.5614 64.2777 81.3369 52.409 19.1191 12.3953 70.5693 26.4891 65.3027 70.5693 28.9762 13.2992 56.7986 98.5232 41.8946 86.5336 48.6421 39.5576 16.6661 1.224 78.542 76.1144 20.2403 50.0669 68.2833 86.6568 97.6295 89.2188 55.3998 2.5551 85.6002 79.7869 97.8822 88.52 53.4336 94.1386 88.0858 90.8166 8.0937 17.3679 86.7506 93.5406 88.9518 45.3258 92.9513 61.2753 99.5513 80.802 16.1638 80.7932 78.2145 32.0133 94.6521 9.3947 8.0069 89.4406 46.6981 4.8662 6.5146 14.4812 57.1933 86.5895 4.0233 3.4441 41.0289 81.6605 39.4765 31.1269 96.6111 67.8145 80.7643 57.3749 18.1599 85.2102 63.7992 82.6953 0.7924 23.4759 40.2263 20.5847 97.3382 29.5719 45.7666 14.8879 66.2953 80.9773 57.1747 63.2448 54.3222 62.9735 14.1444 99.7854 60.3727 20.5422 91.9733 40.9002 37.9923 66.6047 55.6808 9.7292 81.2224 70.0153 56.6273 70.9324 81.9563 48.2808 4.3073 0.0595 34.4033 62.7798 62.2764 87.7445 64.3946 96.5939 52.623 17.9923 98.862 87.6634 19.353 22.3428 88.1323 19.711 27.4048 86.2177 80.1029 34.7978 83.9631 75.6822 24.2552 62.2003 64.5091 63.9119 64.5063 66.5546 58.9116 26.0318 71.6423 72.4167 84.1719 65.1322 7.4141 63.7064 67.5171 67.798 56.2371 65.0999 12.5716 73.7138 12.8815 36.5466 97.7193 12.5386 75.0703 15.0288 24.4373 40.3544 79.9347 55.1838 66.1956 33.3744 63.0481 11.682 24.6326 14.2409 64.0981 72.514 42.3897 15.0213 98.4482 1.5731 51.3423 18.7651 13.2133 65.6194 22.2737 85.1715 6.6904 62.6264 19.2674 61.4058 10.9617 65.6668 40.5028 93.5215 41.3474 54.8486 6.433 40.0135 76.8762 76.5089 64.6703 60.4874 22.3544 86.2426 81.7418 51.6586 39.651 60.2231 64.6219 48.4603 84.3796 99.2528 56.6422 23.2947 81.3099 27.1894 52.5647 83.3705 41.1009 57.3418 0.4869 31.5349 43.9259 81.6129 63.3178 79.4998 70.8003 54.7458 18.9249 92.8954 83.8717 85.7225 90.2463 83.278 11.9019 61.2051 31.1378 85.3552 44.7808 4.9067 7.2453 17.5373
    ${output}=    Read Until Prompt
    Log    ${output}
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( timed out :)

Start Controller
    [Tags]    functional
    Switch Connection    Controller
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Controller.
    ${input}=    Write    python ${subSystem}_Controller_${component}.py
    ${output}=    Read Until    controller ready
    Log    ${output}
    Should Contain    ${output}    ${subSystem}_${component} controller ready

Start Commander
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 10.3646 2.1833 78.3711 96.0846 46.174 46.7835 29.4799 52.5872 91.3752 51.476 90.5134 99.9729 48.8982 97.2348 99.8836 26.1254 7.4107 36.7875 68.2809 4.4284 42.8432 99.0974 37.5596 20.4825 61.6095 65.5966 96.5001 37.8659 79.6195 60.2206 41.7323 10.9455 17.4426 24.1221 97.1857 69.4188 4.4354 2.729 9.6216 55.9922 17.2776 43.6961 8.606 15.2258 87.1474 20.7602 40.0815 88.6484 42.3785 33.3583 23.5658 81.3546 98.9449 53.873 65.8309 10.2507 56.5236 12.145 69.2069 42.6736 73.7416 61.4849 96.7756 42.0143 77.396 20.0278 25.7634 72.406 42.4533 65.6557 75.7337 80.3138 98.5678 12.4074 98.6668 91.048 22.4048 63.8711 32.5879 48.4925 67.5433 53.4192 28.9356 9.4787 21.6899 17.9452 3.8197 69.2662 90.3762 32.9303 66.5743 64.9939 22.4075 8.457 41.0689 39.0877 15.2771 59.211 33.4319 13.7464 94.6223 2.8108 65.2427 49.2455 27.4711 66.2326 1.4863 12.2451 72.3096 42.1311 82.2299 32.5199 9.7777 69.8965 16.4706 15.0412 69.5668 61.1407 24.0361 93.4282 38.084 5.5455 88.2721 81.9241 25.5661 10.6278 87.2119 67.3345 76.4396 23.0776 42.7745 94.729 58.5483 93.3794 8.0043 3.488 66.0147 70.0929 31.7474 68.8462 83.9584 24.2327 92.3403 91.7744 72.4744 3.1277 83.843 43.1607 14.1459 79.4917 97.644 18.2372 38.6987 14.7375 9.7748 98.3442 64.6945 96.0961 32.324 58.0812 45.2134 75.6716 89.709 54.0044 24.6392 2.1029 27.0026 98.4104 57.4686 5.0965 99.4068 99.3151 68.7696 41.264 13.6329 60.2319 70.9666 56.8553 16.6599 25.8404 0.5966 64.356 91.6761 54.8391 10.1676 73.0816 22.2991 64.3982 56.2845 57.3258 77.4454 42.3643 62.5556 34.7534 35.1908 91.7958 43.333 10.8204 17.3816 76.8456 28.1947 14.9025 45.8398 95.0702 93.6391 31.8315 53.0809 57.431 88.3508 12.3829 34.2108 62.3343 99.0424 78.9084 23.893 76.7749 31.5673 79.9985 26.682 78.4428 78.3791 10.6275 83.5863 65.3139 51.567 45.5947 42.7568 94.8253 58.5585 6.0962 60.7837 93.685 94.9715 74.1532 65.4048 10.2665 97.0201 9.1957 49.3264 11.2401 28.1806 20.5299 53.1012 98.891 9.997 66.4478 31.5035 90.9635 25.6827 97.2731 32.9036 64.3038 98.5671 96.5363 85.5726 32.3414 54.523 74.6179 78.294 1.6498 9.8198 97.3708 28.7327 39.3729 98.1649 63.8303 18.7635 55.8952 70.8599 10.3132 20.2539 72.2007 43.1731 69.1273 26.3927 97.7122 49.0664 17.8437 57.6451 72.6718 40.4606 83.7049 6.6201 81.6369 27.976 89.1689 64.5751 69.5934 79.9605 15.8877 86.8035 17.174 91.1755 68.8943 56.2996 91.7039 88.0774 82.5111 26.6447 81.9013 4.193 99.5158 14.2527 61.8712 18.4992 47.1395 59.8855 61.0821 27.5614 64.2777 81.3369 52.409 19.1191 12.3953 70.5693 26.4891 65.3027 70.5693 28.9762 13.2992 56.7986 98.5232 41.8946 86.5336 48.6421 39.5576 16.6661 1.224 78.542 76.1144 20.2403 50.0669 68.2833 86.6568 97.6295 89.2188 55.3998 2.5551 85.6002 79.7869 97.8822 88.52 53.4336 94.1386 88.0858 90.8166 8.0937 17.3679 86.7506 93.5406 88.9518 45.3258 92.9513 61.2753 99.5513 80.802 16.1638 80.7932 78.2145 32.0133 94.6521 9.3947 8.0069 89.4406 46.6981 4.8662 6.5146 14.4812 57.1933 86.5895 4.0233 3.4441 41.0289 81.6605 39.4765 31.1269 96.6111 67.8145 80.7643 57.3749 18.1599 85.2102 63.7992 82.6953 0.7924 23.4759 40.2263 20.5847 97.3382 29.5719 45.7666 14.8879 66.2953 80.9773 57.1747 63.2448 54.3222 62.9735 14.1444 99.7854 60.3727 20.5422 91.9733 40.9002 37.9923 66.6047 55.6808 9.7292 81.2224 70.0153 56.6273 70.9324 81.9563 48.2808 4.3073 0.0595 34.4033 62.7798 62.2764 87.7445 64.3946 96.5939 52.623 17.9923 98.862 87.6634 19.353 22.3428 88.1323 19.711 27.4048 86.2177 80.1029 34.7978 83.9631 75.6822 24.2552 62.2003 64.5091 63.9119 64.5063 66.5546 58.9116 26.0318 71.6423 72.4167 84.1719 65.1322 7.4141 63.7064 67.5171 67.798 56.2371 65.0999 12.5716 73.7138 12.8815 36.5466 97.7193 12.5386 75.0703 15.0288 24.4373 40.3544 79.9347 55.1838 66.1956 33.3744 63.0481 11.682 24.6326 14.2409 64.0981 72.514 42.3897 15.0213 98.4482 1.5731 51.3423 18.7651 13.2133 65.6194 22.2737 85.1715 6.6904 62.6264 19.2674 61.4058 10.9617 65.6668 40.5028 93.5215 41.3474 54.8486 6.433 40.0135 76.8762 76.5089 64.6703 60.4874 22.3544 86.2426 81.7418 51.6586 39.651 60.2231 64.6219 48.4603 84.3796 99.2528 56.6422 23.2947 81.3099 27.1894 52.5647 83.3705 41.1009 57.3418 0.4869 31.5349 43.9259 81.6129 63.3178 79.4998 70.8003 54.7458 18.9249 92.8954 83.8717 85.7225 90.2463 83.278 11.9019 61.2051 31.1378 85.3552 44.7808 4.9067 7.2453 17.5373
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain X Times    ${output}    === [issueCommand_${component}] writing a command containing :    1
    Should Contain X Times    ${output}    device :    1
    Should Contain X Times    ${output}    property :    1
    Should Contain X Times    ${output}    action :    1
    Should Contain X Times    ${output}    value :    1
    Should Contain X Times    ${output}    xlut : 10.3646    1
    Should Contain X Times    ${output}    ylut : 66.5743    1
    Should Contain X Times    ${output}    zlut : 0.5966    1
    Should Contain X Times    ${output}    ulut : 20.2539    1
    Should Contain X Times    ${output}    vlut : 94.6521    1
    Should Contain X Times    ${output}    wlut : 67.5171    1
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( completed ok :)

Read Controller
    [Tags]    functional
    Switch Connection    Controller
    ${output}=    Read Until    result \ \ : Done : OK
    Log    ${output}
    Should Contain X Times    ${output}    xlut(90) = [10.3646, 2.1833, 78.3711, 96.0846, 46.174, 46.7835, 29.4799, 52.5872, 91.3752, 51.476, 90.5134, 99.9729, 48.8982, 97.2348, 99.8836, 26.1254, 7.4107, 36.7875, 68.2809, 4.4284, 42.8432, 99.0974, 37.5596, 20.4825, 61.6095, 65.5966, 96.5001, 37.8659, 79.6195, 60.2206, 41.7323, 10.9455, 17.4426, 24.1221, 97.1857, 69.4188, 4.4354, 2.729, 9.6216, 55.9922, 17.2776, 43.6961, 8.606, 15.2258, 87.1474, 20.7602, 40.0815, 88.6484, 42.3785, 33.3583, 23.5658, 81.3546, 98.9449, 53.873, 65.8309, 10.2507, 56.5236, 12.145, 69.2069, 42.6736, 73.7416, 61.4849, 96.7756, 42.0143, 77.396, 20.0278, 25.7634, 72.406, 42.4533, 65.6557, 75.7337, 80.3138, 98.5678, 12.4074, 98.6668, 91.048, 22.4048, 63.8711, 32.5879, 48.4925, 67.5433, 53.4192, 28.9356, 9.4787, 21.6899, 17.9452, 3.8197, 69.2662, 90.3762, 32.9303]    1
    Should Contain X Times    ${output}    ylut(90) = [66.5743, 64.9939, 22.4075, 8.457, 41.0689, 39.0877, 15.2771, 59.211, 33.4319, 13.7464, 94.6223, 2.8108, 65.2427, 49.2455, 27.4711, 66.2326, 1.4863, 12.2451, 72.3096, 42.1311, 82.2299, 32.5199, 9.7777, 69.8965, 16.4706, 15.0412, 69.5668, 61.1407, 24.0361, 93.4282, 38.084, 5.5455, 88.2721, 81.9241, 25.5661, 10.6278, 87.2119, 67.3345, 76.4396, 23.0776, 42.7745, 94.729, 58.5483, 93.3794, 8.0043, 3.488, 66.0147, 70.0929, 31.7474, 68.8462, 83.9584, 24.2327, 92.3403, 91.7744, 72.4744, 3.1277, 83.843, 43.1607, 14.1459, 79.4917, 97.644, 18.2372, 38.6987, 14.7375, 9.7748, 98.3442, 64.6945, 96.0961, 32.324, 58.0812, 45.2134, 75.6716, 89.709, 54.0044, 24.6392, 2.1029, 27.0026, 98.4104, 57.4686, 5.0965, 99.4068, 99.3151, 68.7696, 41.264, 13.6329, 60.2319, 70.9666, 56.8553, 16.6599, 25.8404]    1
    Should Contain X Times    ${output}    zlut(90) = [0.5966, 64.356, 91.6761, 54.8391, 10.1676, 73.0816, 22.2991, 64.3982, 56.2845, 57.3258, 77.4454, 42.3643, 62.5556, 34.7534, 35.1908, 91.7958, 43.333, 10.8204, 17.3816, 76.8456, 28.1947, 14.9025, 45.8398, 95.0702, 93.6391, 31.8315, 53.0809, 57.431, 88.3508, 12.3829, 34.2108, 62.3343, 99.0424, 78.9084, 23.893, 76.7749, 31.5673, 79.9985, 26.682, 78.4428, 78.3791, 10.6275, 83.5863, 65.3139, 51.567, 45.5947, 42.7568, 94.8253, 58.5585, 6.0962, 60.7837, 93.685, 94.9715, 74.1532, 65.4048, 10.2665, 97.0201, 9.1957, 49.3264, 11.2401, 28.1806, 20.5299, 53.1012, 98.891, 9.997, 66.4478, 31.5035, 90.9635, 25.6827, 97.2731, 32.9036, 64.3038, 98.5671, 96.5363, 85.5726, 32.3414, 54.523, 74.6179, 78.294, 1.6498, 9.8198, 97.3708, 28.7327, 39.3729, 98.1649, 63.8303, 18.7635, 55.8952, 70.8599, 10.3132]    1
    Should Contain X Times    ${output}    ulut(90) = [20.2539, 72.2007, 43.1731, 69.1273, 26.3927, 97.7122, 49.0664, 17.8437, 57.6451, 72.6718, 40.4606, 83.7049, 6.6201, 81.6369, 27.976, 89.1689, 64.5751, 69.5934, 79.9605, 15.8877, 86.8035, 17.174, 91.1755, 68.8943, 56.2996, 91.7039, 88.0774, 82.5111, 26.6447, 81.9013, 4.193, 99.5158, 14.2527, 61.8712, 18.4992, 47.1395, 59.8855, 61.0821, 27.5614, 64.2777, 81.3369, 52.409, 19.1191, 12.3953, 70.5693, 26.4891, 65.3027, 70.5693, 28.9762, 13.2992, 56.7986, 98.5232, 41.8946, 86.5336, 48.6421, 39.5576, 16.6661, 1.224, 78.542, 76.1144, 20.2403, 50.0669, 68.2833, 86.6568, 97.6295, 89.2188, 55.3998, 2.5551, 85.6002, 79.7869, 97.8822, 88.52, 53.4336, 94.1386, 88.0858, 90.8166, 8.0937, 17.3679, 86.7506, 93.5406, 88.9518, 45.3258, 92.9513, 61.2753, 99.5513, 80.802, 16.1638, 80.7932, 78.2145, 32.0133]    1
    Should Contain X Times    ${output}    vlut(90) = [94.6521, 9.3947, 8.0069, 89.4406, 46.6981, 4.8662, 6.5146, 14.4812, 57.1933, 86.5895, 4.0233, 3.4441, 41.0289, 81.6605, 39.4765, 31.1269, 96.6111, 67.8145, 80.7643, 57.3749, 18.1599, 85.2102, 63.7992, 82.6953, 0.7924, 23.4759, 40.2263, 20.5847, 97.3382, 29.5719, 45.7666, 14.8879, 66.2953, 80.9773, 57.1747, 63.2448, 54.3222, 62.9735, 14.1444, 99.7854, 60.3727, 20.5422, 91.9733, 40.9002, 37.9923, 66.6047, 55.6808, 9.7292, 81.2224, 70.0153, 56.6273, 70.9324, 81.9563, 48.2808, 4.3073, 0.0595, 34.4033, 62.7798, 62.2764, 87.7445, 64.3946, 96.5939, 52.623, 17.9923, 98.862, 87.6634, 19.353, 22.3428, 88.1323, 19.711, 27.4048, 86.2177, 80.1029, 34.7978, 83.9631, 75.6822, 24.2552, 62.2003, 64.5091, 63.9119, 64.5063, 66.5546, 58.9116, 26.0318, 71.6423, 72.4167, 84.1719, 65.1322, 7.4141, 63.7064]    1
    Should Contain X Times    ${output}    wlut(90) = [67.5171, 67.798, 56.2371, 65.0999, 12.5716, 73.7138, 12.8815, 36.5466, 97.7193, 12.5386, 75.0703, 15.0288, 24.4373, 40.3544, 79.9347, 55.1838, 66.1956, 33.3744, 63.0481, 11.682, 24.6326, 14.2409, 64.0981, 72.514, 42.3897, 15.0213, 98.4482, 1.5731, 51.3423, 18.7651, 13.2133, 65.6194, 22.2737, 85.1715, 6.6904, 62.6264, 19.2674, 61.4058, 10.9617, 65.6668, 40.5028, 93.5215, 41.3474, 54.8486, 6.433, 40.0135, 76.8762, 76.5089, 64.6703, 60.4874, 22.3544, 86.2426, 81.7418, 51.6586, 39.651, 60.2231, 64.6219, 48.4603, 84.3796, 99.2528, 56.6422, 23.2947, 81.3099, 27.1894, 52.5647, 83.3705, 41.1009, 57.3418, 0.4869, 31.5349, 43.9259, 81.6129, 63.3178, 79.4998, 70.8003, 54.7458, 18.9249, 92.8954, 83.8717, 85.7225, 90.2463, 83.278, 11.9019, 61.2051, 31.1378, 85.3552, 44.7808, 4.9067, 7.2453, 17.5373]    1
    Should Contain X Times    ${output}    === [ackCommand_configureLut] acknowledging a command with :    1
    Should Contain    ${output}    seqNum   :
    Should Contain    ${output}    ack      : 301
    Should Contain X Times    ${output}    error \ \ \ : 0    1
    Should Contain    ${output}    result   : Ack : OK
    Should Contain    ${output}    ack      : 303
    Should Contain    ${output}    result   : Done : OK
