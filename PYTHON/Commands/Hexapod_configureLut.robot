*** Settings ***
Documentation    Hexapod_configureLut commander/controller tests.
Force Tags    python
Suite Setup    Log Many    ${Host}    ${subSystem}    ${component}    ${timeout}
Suite Teardown    Close All Connections
Library    SSHLibrary
Library    String
Resource    ../../Global_Vars.robot

*** Variables ***
${subSystem}    hexapod
${component}    configureLut
${timeout}    30s

*** Test Cases ***
Create Commander Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Commander    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}

Create Controller Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Controller    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}

Verify Component Commander and Controller
    [Tags]    smoke
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Commander_${component}.py
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Controller_${component}.py

Start Commander - Verify Missing Inputs Error
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain    ${output}   ERROR : Invalid or missing arguments :

Start Commander - Verify Timeout without Controller
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 13.1479 51.4336 79.6929 68.6702 74.1489 9.0116 57.7919 36.9033 32.1363 49.3726 29.2186 62.1683 72.6812 57.1582 97.0216 26.8824 83.1671 49.6167 55.8126 53.8172 17.5623 53.8702 93.2939 84.1326 47.4293 10.5898 89.5263 27.9676 6.591 87.8638 31.6443 0.4691 72.6967 51.2901 61.9453 41.186 4.7733 24.406 46.8162 70.0954 47.8037 59.6389 15.6439 51.4899 8.6518 17.1547 60.6803 68.257 77.1303 61.5029 28.8215 82.2167 67.3676 0.4977 34.9945 76.1762 98.5439 82.6059 42.9387 80.756 66.9586 4.1329 2.73 21.6548 51.6845 52.0603 77.4624 1.7795 24.5773 46.9766 31.955 33.7458 33.0943 63.3779 7.8921 53.9869 57.6269 66.9437 48.0842 42.3872 76.0017 11.8115 71.425 77.7337 8.5341 43.9215 89.0164 23.7418 72.814 13.5013 98.898 70.7679 56.3575 28.226 16.9635 55.0008 61.2478 31.7526 39.3758 47.1736 8.3411 72.8303 8.2097 27.0005 33.414 59.9627 59.593 24.8783 87.0883 49.6374 11.5511 18.4043 79.1128 73.5384 83.8068 29.459 63.3259 61.9439 89.8815 63.9914 49.2059 16.0339 20.0332 56.9905 61.0567 25.3094 78.0958 31.6204 41.5658 0.7614 79.2624 79.0891 17.0365 40.678 92.9193 0.0653 89.4709 92.3277 91.7134 58.003 40.9376 19.8616 38.4147 95.3344 64.8533 49.7345 93.2636 46.7024 47.107 86.6811 45.066 85.8512 39.6382 93.642 85.6137 26.1127 37.0501 44.6868 75.1479 76.5729 52.3778 89.1515 70.9828 71.5155 5.7475 88.4836 57.0759 61.4679 27.6709 8.8766 33.3511 1.8474 50.1306 40.2716 14.38 53.8001 23.0839 86.9246 41.3871 81.236 73.2326 17.2941 77.6813 62.3913 62.4575 61.025 77.5488 58.1026 27.4545 43.252 28.1932 14.7351 80.0081 75.4796 69.9051 77.4698 15.0336 47.1878 64.9954 3.8297 79.4197 74.3496 97.7127 52.6451 21.2198 69.8564 54.357 80.4072 83.2342 97.925 11.9608 64.9332 69.2966 94.2752 33.4208 89.523 16.9648 11.3255 84.4495 75.9705 78.2222 11.3455 90.1912 44.4404 79.8838 3.5203 46.4972 30.4358 12.1051 68.8669 53.3301 64.7195 67.1981 86.7066 63.4807 66.4656 67.7903 14.5979 92.0198 3.8195 27.7386 93.0501 32.3275 96.1213 51.495 40.5908 42.6911 69.8588 20.3735 43.7125 2.6154 60.975 86.8254 63.1202 72.763 67.9655 49.3938 62.524 48.4798 89.462 78.4142 12.8151 61.906 71.641 92.1524 84.6161 89.4387 50.506 77.9003 22.306 26.7639 26.7002 93.3158 48.245 23.4378 75.0024 88.7697 92.7148 0.5925 74.5887 3.4137 45.9009 73.5748 54.2783 59.0834 6.4606 11.0917 59.7727 83.7579 13.0635 0.023 75.098 14.9279 79.0507 5.6314 45.8796 26.7453 81.3307 30.8511 34.9843 11.3674 34.6026 13.7257 27.0728 36.9604 50.2082 87.9667 62.7473 52.1818 1.4378 50.6276 93.0148 30.4653 94.5535 43.1469 66.6164 0.3328 61.2657 70.6086 85.4816 28.8326 86.3226 41.6072 97.3327 61.6292 4.9832 11.7748 56.9858 86.3408 3.5013 94.4198 59.3864 89.9662 17.4006 58.081 18.2717 55.4303 28.247 44.2394 57.3195 40.4393 82.2191 22.919 93.5511 66.1723 23.5348 20.7945 47.129 57.6117 67.2911 66.3992 28.1691 14.1279 25.7049 29.427 93.0684 76.4525 39.9687 15.6106 78.0321 40.4795 89.9691 70.0321 18.9362 29.93 11.2482 33.2352 59.6848 27.8986 25.1879 47.1115 73.834 95.5273 55.5061 39.5379 86.4109 41.3505 53.2128 23.3936 38.6053 47.9632 96.7567 51.6257 96.0849 8.2556 29.1645 25.2002 94.5571 93.4833 36.9799 26.9663 52.1347 45.177 36.8777 34.8698 47.2921 69.9141 33.2491 30.5255 2.084 80.3469 21.1261 1.5027 74.8065 30.3377 79.4673 71.3531 93.2646 46.9669 36.3959 78.2551 12.0105 80.5463 7.0974 10.13 61.1707 50.5288 69.9855 63.7577 41.3161 24.3928 50.2622 89.3391 23.6027 87.2064 62.1896 16.9349 40.0433 33.0342 63.8023 43.9743 43.647 50.3666 76.1819 5.1075 88.9335 54.3955 81.5143 48.95 8.4024 52.9052 26.9799 12.7675 57.9577 13.4497 29.1137 74.2352 16.1554 43.1433 2.9263 22.7382 82.4334 20.7736 31.628 23.8922 24.3772 58.9402 57.8664 83.9047 47.096 54.0697 38.5049 18.1423 53.7717 61.6617 68.6213 64.9432 33.3473 94.3899 88.9538 50.8142 36.1432 15.0377 87.9091 2.9386 40.5366 4.7321 46.9439 48.5535 34.473 24.7118 76.5574 31.6441 28.0603 10.8315 35.7236 29.2165 51.7164 59.7353 10.8572 42.2424 37.1882 22.9909 28.7554 32.7342 4.6732 70.0039 34.8619 24.7805 91.2038 8.8764 43.27 44.4937 88.9124 82.3271 40.0437 53.9397 70.7738 69.2734 73.6044 26.6586 29.3543 80.0116 91.4136 35.6846 47.9015 54.9506 66.149 44.2788 74.4086 37.413 43.6199 45.8326 40.2244 51.7143 70.3994 45.1451 51.3109 24.3383 27.7152 24.1473 82.4318 42.9456 2.6345 28.6398 92.7059 40.3473 50.0352 9.7888 89.8362
    ${output}=    Read Until Prompt
    Log    ${output}
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( timed out :)

Start Controller
    [Tags]    functional
    Switch Connection    Controller
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Controller.
    ${input}=    Write    python ${subSystem}_Controller_${component}.py
    ${output}=    Read Until    controller ready
    Log    ${output}
    Should Contain    ${output}    ${subSystem}_${component} controller ready

Start Commander
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 13.1479 51.4336 79.6929 68.6702 74.1489 9.0116 57.7919 36.9033 32.1363 49.3726 29.2186 62.1683 72.6812 57.1582 97.0216 26.8824 83.1671 49.6167 55.8126 53.8172 17.5623 53.8702 93.2939 84.1326 47.4293 10.5898 89.5263 27.9676 6.591 87.8638 31.6443 0.4691 72.6967 51.2901 61.9453 41.186 4.7733 24.406 46.8162 70.0954 47.8037 59.6389 15.6439 51.4899 8.6518 17.1547 60.6803 68.257 77.1303 61.5029 28.8215 82.2167 67.3676 0.4977 34.9945 76.1762 98.5439 82.6059 42.9387 80.756 66.9586 4.1329 2.73 21.6548 51.6845 52.0603 77.4624 1.7795 24.5773 46.9766 31.955 33.7458 33.0943 63.3779 7.8921 53.9869 57.6269 66.9437 48.0842 42.3872 76.0017 11.8115 71.425 77.7337 8.5341 43.9215 89.0164 23.7418 72.814 13.5013 98.898 70.7679 56.3575 28.226 16.9635 55.0008 61.2478 31.7526 39.3758 47.1736 8.3411 72.8303 8.2097 27.0005 33.414 59.9627 59.593 24.8783 87.0883 49.6374 11.5511 18.4043 79.1128 73.5384 83.8068 29.459 63.3259 61.9439 89.8815 63.9914 49.2059 16.0339 20.0332 56.9905 61.0567 25.3094 78.0958 31.6204 41.5658 0.7614 79.2624 79.0891 17.0365 40.678 92.9193 0.0653 89.4709 92.3277 91.7134 58.003 40.9376 19.8616 38.4147 95.3344 64.8533 49.7345 93.2636 46.7024 47.107 86.6811 45.066 85.8512 39.6382 93.642 85.6137 26.1127 37.0501 44.6868 75.1479 76.5729 52.3778 89.1515 70.9828 71.5155 5.7475 88.4836 57.0759 61.4679 27.6709 8.8766 33.3511 1.8474 50.1306 40.2716 14.38 53.8001 23.0839 86.9246 41.3871 81.236 73.2326 17.2941 77.6813 62.3913 62.4575 61.025 77.5488 58.1026 27.4545 43.252 28.1932 14.7351 80.0081 75.4796 69.9051 77.4698 15.0336 47.1878 64.9954 3.8297 79.4197 74.3496 97.7127 52.6451 21.2198 69.8564 54.357 80.4072 83.2342 97.925 11.9608 64.9332 69.2966 94.2752 33.4208 89.523 16.9648 11.3255 84.4495 75.9705 78.2222 11.3455 90.1912 44.4404 79.8838 3.5203 46.4972 30.4358 12.1051 68.8669 53.3301 64.7195 67.1981 86.7066 63.4807 66.4656 67.7903 14.5979 92.0198 3.8195 27.7386 93.0501 32.3275 96.1213 51.495 40.5908 42.6911 69.8588 20.3735 43.7125 2.6154 60.975 86.8254 63.1202 72.763 67.9655 49.3938 62.524 48.4798 89.462 78.4142 12.8151 61.906 71.641 92.1524 84.6161 89.4387 50.506 77.9003 22.306 26.7639 26.7002 93.3158 48.245 23.4378 75.0024 88.7697 92.7148 0.5925 74.5887 3.4137 45.9009 73.5748 54.2783 59.0834 6.4606 11.0917 59.7727 83.7579 13.0635 0.023 75.098 14.9279 79.0507 5.6314 45.8796 26.7453 81.3307 30.8511 34.9843 11.3674 34.6026 13.7257 27.0728 36.9604 50.2082 87.9667 62.7473 52.1818 1.4378 50.6276 93.0148 30.4653 94.5535 43.1469 66.6164 0.3328 61.2657 70.6086 85.4816 28.8326 86.3226 41.6072 97.3327 61.6292 4.9832 11.7748 56.9858 86.3408 3.5013 94.4198 59.3864 89.9662 17.4006 58.081 18.2717 55.4303 28.247 44.2394 57.3195 40.4393 82.2191 22.919 93.5511 66.1723 23.5348 20.7945 47.129 57.6117 67.2911 66.3992 28.1691 14.1279 25.7049 29.427 93.0684 76.4525 39.9687 15.6106 78.0321 40.4795 89.9691 70.0321 18.9362 29.93 11.2482 33.2352 59.6848 27.8986 25.1879 47.1115 73.834 95.5273 55.5061 39.5379 86.4109 41.3505 53.2128 23.3936 38.6053 47.9632 96.7567 51.6257 96.0849 8.2556 29.1645 25.2002 94.5571 93.4833 36.9799 26.9663 52.1347 45.177 36.8777 34.8698 47.2921 69.9141 33.2491 30.5255 2.084 80.3469 21.1261 1.5027 74.8065 30.3377 79.4673 71.3531 93.2646 46.9669 36.3959 78.2551 12.0105 80.5463 7.0974 10.13 61.1707 50.5288 69.9855 63.7577 41.3161 24.3928 50.2622 89.3391 23.6027 87.2064 62.1896 16.9349 40.0433 33.0342 63.8023 43.9743 43.647 50.3666 76.1819 5.1075 88.9335 54.3955 81.5143 48.95 8.4024 52.9052 26.9799 12.7675 57.9577 13.4497 29.1137 74.2352 16.1554 43.1433 2.9263 22.7382 82.4334 20.7736 31.628 23.8922 24.3772 58.9402 57.8664 83.9047 47.096 54.0697 38.5049 18.1423 53.7717 61.6617 68.6213 64.9432 33.3473 94.3899 88.9538 50.8142 36.1432 15.0377 87.9091 2.9386 40.5366 4.7321 46.9439 48.5535 34.473 24.7118 76.5574 31.6441 28.0603 10.8315 35.7236 29.2165 51.7164 59.7353 10.8572 42.2424 37.1882 22.9909 28.7554 32.7342 4.6732 70.0039 34.8619 24.7805 91.2038 8.8764 43.27 44.4937 88.9124 82.3271 40.0437 53.9397 70.7738 69.2734 73.6044 26.6586 29.3543 80.0116 91.4136 35.6846 47.9015 54.9506 66.149 44.2788 74.4086 37.413 43.6199 45.8326 40.2244 51.7143 70.3994 45.1451 51.3109 24.3383 27.7152 24.1473 82.4318 42.9456 2.6345 28.6398 92.7059 40.3473 50.0352 9.7888 89.8362
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain X Times    ${output}    === [issueCommand_${component}] writing a command containing :    1
    Should Contain X Times    ${output}    device :    1
    Should Contain X Times    ${output}    property :    1
    Should Contain X Times    ${output}    action :    1
    Should Contain X Times    ${output}    value :    1
    Should Contain X Times    ${output}    xlut : 13.1479    1
    Should Contain X Times    ${output}    ylut : 98.898    1
    Should Contain X Times    ${output}    zlut : 73.2326    1
    Should Contain X Times    ${output}    ulut : 26.7639    1
    Should Contain X Times    ${output}    vlut : 40.4795    1
    Should Contain X Times    ${output}    wlut : 22.7382    1
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( completed ok :)

Read Controller
    [Tags]    functional
    Switch Connection    Controller
    ${output}=    Read Until    result \ \ : Done : OK
    Log    ${output}
    Should Contain X Times    ${output}    xlut(90) = [13.1479, 51.4336, 79.6929, 68.6702, 74.1489, 9.0116, 57.7919, 36.9033, 32.1363, 49.3726, 29.2186, 62.1683, 72.6812, 57.1582, 97.0216, 26.8824, 83.1671, 49.6167, 55.8126, 53.8172, 17.5623, 53.8702, 93.2939, 84.1326, 47.4293, 10.5898, 89.5263, 27.9676, 6.591, 87.8638, 31.6443, 0.4691, 72.6967, 51.2901, 61.9453, 41.186, 4.7733, 24.406, 46.8162, 70.0954, 47.8037, 59.6389, 15.6439, 51.4899, 8.6518, 17.1547, 60.6803, 68.257, 77.1303, 61.5029, 28.8215, 82.2167, 67.3676, 0.4977, 34.9945, 76.1762, 98.5439, 82.6059, 42.9387, 80.756, 66.9586, 4.1329, 2.73, 21.6548, 51.6845, 52.0603, 77.4624, 1.7795, 24.5773, 46.9766, 31.955, 33.7458, 33.0943, 63.3779, 7.8921, 53.9869, 57.6269, 66.9437, 48.0842, 42.3872, 76.0017, 11.8115, 71.425, 77.7337, 8.5341, 43.9215, 89.0164, 23.7418, 72.814, 13.5013]    1
    Should Contain X Times    ${output}    ylut(90) = [98.898, 70.7679, 56.3575, 28.226, 16.9635, 55.0008, 61.2478, 31.7526, 39.3758, 47.1736, 8.3411, 72.8303, 8.2097, 27.0005, 33.414, 59.9627, 59.593, 24.8783, 87.0883, 49.6374, 11.5511, 18.4043, 79.1128, 73.5384, 83.8068, 29.459, 63.3259, 61.9439, 89.8815, 63.9914, 49.2059, 16.0339, 20.0332, 56.9905, 61.0567, 25.3094, 78.0958, 31.6204, 41.5658, 0.7614, 79.2624, 79.0891, 17.0365, 40.678, 92.9193, 0.0653, 89.4709, 92.3277, 91.7134, 58.003, 40.9376, 19.8616, 38.4147, 95.3344, 64.8533, 49.7345, 93.2636, 46.7024, 47.107, 86.6811, 45.066, 85.8512, 39.6382, 93.642, 85.6137, 26.1127, 37.0501, 44.6868, 75.1479, 76.5729, 52.3778, 89.1515, 70.9828, 71.5155, 5.7475, 88.4836, 57.0759, 61.4679, 27.6709, 8.8766, 33.3511, 1.8474, 50.1306, 40.2716, 14.38, 53.8001, 23.0839, 86.9246, 41.3871, 81.236]    1
    Should Contain X Times    ${output}    zlut(90) = [73.2326, 17.2941, 77.6813, 62.3913, 62.4575, 61.025, 77.5488, 58.1026, 27.4545, 43.252, 28.1932, 14.7351, 80.0081, 75.4796, 69.9051, 77.4698, 15.0336, 47.1878, 64.9954, 3.8297, 79.4197, 74.3496, 97.7127, 52.6451, 21.2198, 69.8564, 54.357, 80.4072, 83.2342, 97.925, 11.9608, 64.9332, 69.2966, 94.2752, 33.4208, 89.523, 16.9648, 11.3255, 84.4495, 75.9705, 78.2222, 11.3455, 90.1912, 44.4404, 79.8838, 3.5203, 46.4972, 30.4358, 12.1051, 68.8669, 53.3301, 64.7195, 67.1981, 86.7066, 63.4807, 66.4656, 67.7903, 14.5979, 92.0198, 3.8195, 27.7386, 93.0501, 32.3275, 96.1213, 51.495, 40.5908, 42.6911, 69.8588, 20.3735, 43.7125, 2.6154, 60.975, 86.8254, 63.1202, 72.763, 67.9655, 49.3938, 62.524, 48.4798, 89.462, 78.4142, 12.8151, 61.906, 71.641, 92.1524, 84.6161, 89.4387, 50.506, 77.9003, 22.306]    1
    Should Contain X Times    ${output}    ulut(90) = [26.7639, 26.7002, 93.3158, 48.245, 23.4378, 75.0024, 88.7697, 92.7148, 0.5925, 74.5887, 3.4137, 45.9009, 73.5748, 54.2783, 59.0834, 6.4606, 11.0917, 59.7727, 83.7579, 13.0635, 0.023, 75.098, 14.9279, 79.0507, 5.6314, 45.8796, 26.7453, 81.3307, 30.8511, 34.9843, 11.3674, 34.6026, 13.7257, 27.0728, 36.9604, 50.2082, 87.9667, 62.7473, 52.1818, 1.4378, 50.6276, 93.0148, 30.4653, 94.5535, 43.1469, 66.6164, 0.3328, 61.2657, 70.6086, 85.4816, 28.8326, 86.3226, 41.6072, 97.3327, 61.6292, 4.9832, 11.7748, 56.9858, 86.3408, 3.5013, 94.4198, 59.3864, 89.9662, 17.4006, 58.081, 18.2717, 55.4303, 28.247, 44.2394, 57.3195, 40.4393, 82.2191, 22.919, 93.5511, 66.1723, 23.5348, 20.7945, 47.129, 57.6117, 67.2911, 66.3992, 28.1691, 14.1279, 25.7049, 29.427, 93.0684, 76.4525, 39.9687, 15.6106, 78.0321]    1
    Should Contain X Times    ${output}    vlut(90) = [40.4795, 89.9691, 70.0321, 18.9362, 29.93, 11.2482, 33.2352, 59.6848, 27.8986, 25.1879, 47.1115, 73.834, 95.5273, 55.5061, 39.5379, 86.4109, 41.3505, 53.2128, 23.3936, 38.6053, 47.9632, 96.7567, 51.6257, 96.0849, 8.2556, 29.1645, 25.2002, 94.5571, 93.4833, 36.9799, 26.9663, 52.1347, 45.177, 36.8777, 34.8698, 47.2921, 69.9141, 33.2491, 30.5255, 2.084, 80.3469, 21.1261, 1.5027, 74.8065, 30.3377, 79.4673, 71.3531, 93.2646, 46.9669, 36.3959, 78.2551, 12.0105, 80.5463, 7.0974, 10.13, 61.1707, 50.5288, 69.9855, 63.7577, 41.3161, 24.3928, 50.2622, 89.3391, 23.6027, 87.2064, 62.1896, 16.9349, 40.0433, 33.0342, 63.8023, 43.9743, 43.647, 50.3666, 76.1819, 5.1075, 88.9335, 54.3955, 81.5143, 48.95, 8.4024, 52.9052, 26.9799, 12.7675, 57.9577, 13.4497, 29.1137, 74.2352, 16.1554, 43.1433, 2.9263]    1
    Should Contain X Times    ${output}    wlut(90) = [22.7382, 82.4334, 20.7736, 31.628, 23.8922, 24.3772, 58.9402, 57.8664, 83.9047, 47.096, 54.0697, 38.5049, 18.1423, 53.7717, 61.6617, 68.6213, 64.9432, 33.3473, 94.3899, 88.9538, 50.8142, 36.1432, 15.0377, 87.9091, 2.9386, 40.5366, 4.7321, 46.9439, 48.5535, 34.473, 24.7118, 76.5574, 31.6441, 28.0603, 10.8315, 35.7236, 29.2165, 51.7164, 59.7353, 10.8572, 42.2424, 37.1882, 22.9909, 28.7554, 32.7342, 4.6732, 70.0039, 34.8619, 24.7805, 91.2038, 8.8764, 43.27, 44.4937, 88.9124, 82.3271, 40.0437, 53.9397, 70.7738, 69.2734, 73.6044, 26.6586, 29.3543, 80.0116, 91.4136, 35.6846, 47.9015, 54.9506, 66.149, 44.2788, 74.4086, 37.413, 43.6199, 45.8326, 40.2244, 51.7143, 70.3994, 45.1451, 51.3109, 24.3383, 27.7152, 24.1473, 82.4318, 42.9456, 2.6345, 28.6398, 92.7059, 40.3473, 50.0352, 9.7888, 89.8362]    1
    Should Contain X Times    ${output}    === [ackCommand_configureLut] acknowledging a command with :    1
    Should Contain    ${output}    seqNum   :
    Should Contain    ${output}    ack      : 301
    Should Contain X Times    ${output}    error \ \ \ : 0    1
    Should Contain    ${output}    result   : Ack : OK
    Should Contain    ${output}    ack      : 303
    Should Contain    ${output}    result   : Done : OK
