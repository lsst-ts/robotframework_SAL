*** Settings ***
Documentation    Hexapod_configureLut commander/controller tests.
Suite Setup    Log Many    ${Host}    ${subSystem}    ${component}    ${timeout}
Suite Teardown    Close All Connections
Library    SSHLibrary
Library    String
Resource    ../../Global_Vars.robot

*** Variables ***
${subSystem}    hexapod
${component}    configureLut
${timeout}    30s

*** Test Cases ***
Create Commander Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Commander    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Run Keyword If    "${ContInt}"=="false"    Login    ${UserName}    ${PassWord}
    Run Keyword If    "${ContInt}"=="true"    Login With Public Key    ${UserName}    keyfile=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}
    Directory Should Exist    ${SALWorkDir}/${subSystem}

Create Controller Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Controller    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Run Keyword If    "${ContInt}"=="false"    Login    ${UserName}    ${PassWord}
    Run Keyword If    "${ContInt}"=="true"    Login With Public Key    ${UserName}    keyfile=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}
    Directory Should Exist    ${SALWorkDir}/${subSystem}

Verify Component Commander and Controller
    [Tags]    smoke
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Commander_${component}.py
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Controller_${component}.py

Start Commander - Verify Missing Inputs Error
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain    ${output}   ERROR : Invalid or missing arguments :

Start Commander - Verify Timeout without Controller
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 71.7451 49.368 86.3925 99.8723 85.6774 60.0785 89.3408 53.3656 56.02 22.1552 17.7174 19.4311 35.7042 2.433 72.5784 35.2927 64.8806 66.6182 76.8838 63.8302 98.1667 12.7614 22.6513 74.7454 17.1719 61.1224 86.4138 36.84 53.0116 7.5281 52.3424 37.9417 14.3971 77.5695 90.9195 64.61 16.101 71.4305 19.4786 18.7919 19.3926 85.8808 70.729 74.3187 55.7482 65.6782 47.0105 52.7121 31.4473 63.5042 92.8015 76.8116 22.8582 79.1985 0.9142 26.9375 99.0963 14.5337 3.7969 32.3047 66.6857 26.8041 21.354 83.9914 29.082 37.8691 66.1257 31.5369 68.3385 7.5323 18.6528 39.9712 39.22 90.1244 90.7998 60.2771 54.4284 48.2004 10.0697 60.7921 71.7439 61.549 41.8183 15.0161 4.575 58.8346 73.67 36.1923 55.1227 54.2917 36.8471 75.9434 25.4105 74.6734 99.8931 57.6414 62.9341 79.1565 28.5259 89.3511 96.6339 42.1507 34.3156 51.1909 30.1496 3.7187 7.0446 94.9505 58.7382 24.6143 28.1742 40.3396 95.3359 67.8159 31.9116 25.4051 15.9257 53.2387 43.6697 42.0299 99.3557 55.033 84.7367 55.5968 44.3477 9.7467 53.4533 87.3989 18.7691 4.8938 30.2913 92.9056 74.5621 68.4649 95.7534 13.7156 81.5614 73.4236 16.946 14.8923 97.6297 66.4472 60.5497 20.5506 37.2566 2.1683 76.1508 20.5316 77.6626 88.4144 89.9512 97.5144 43.6914 99.7078 3.1429 8.5743 15.6036 65.1433 29.8604 95.4012 91.0767 72.7163 93.8736 15.5324 90.3217 31.9953 55.088 92.2535 55.3877 20.1354 34.3397 28.1767 17.9484 80.3721 41.7794 51.4095 42.673 60.167 2.4727 29.5611 8.364 46.5835 39.2201 30.8137 91.5893 97.5173 3.8547 46.7236 34.2224 7.815 39.7984 41.7886 42.2811 9.2388 96.1398 99.6075 74.0813 3.5303 53.63 58.3919 38.1087 15.7887 74.536 90.1688 24.2713 88.8893 35.4066 74.19 83.3453 38.9656 34.9486 89.9889 94.3095 67.3949 24.2624 88.3685 86.1582 4.7622 50.6943 67.9789 9.296 69.908 37.0322 51.759 90.2156 87.2154 49.0368 1.861 65.9565 56.7884 65.3074 17.2162 43.0588 77.3408 8.1939 68.629 45.9927 9.0422 52.9246 80.6416 30.6508 14.205 9.4176 39.2438 25.1439 61.3462 10.7647 8.4152 28.6459 84.4334 94.1517 51.7073 37.7039 23.8725 2.8155 77.2274 10.285 92.8634 55.355 44.6257 99.9509 88.6296 20.3378 53.3722 58.2464 78.3 98.4649 28.7662 98.6277 64.0695 3.9814 33.6256 13.2935 58.7874 51.0997 82.2188 94.7322 46.2493 38.7115 82.2108 24.9698 84.9967 59.1185 20.0246 51.7041 73.8736 81.4554 62.2345 89.0124 62.2546 2.8357 14.9379 40.0566 50.0513 31.7746 70.3128 29.4315 27.8487 52.6653 89.3997 16.4602 16.3087 71.2038 62.5982 60.4309 48.7003 71.6262 13.1585 89.4055 83.0386 27.0552 55.3921 80.1562 62.8685 94.4742 80.3015 45.7424 91.2872 0.4199 27.993 13.5628 79.9492 13.6682 5.6782 0.5555 17.6984 87.1837 97.0926 10.3554 16.8895 55.521 49.0422 74.3357 65.303 83.9888 4.4721 48.3164 12.0865 45.4431 15.91 86.0386 96.0567 75.5968 28.5225 32.8421 16.3748 82.985 24.4874 54.9948 58.0761 64.0913 99.0632 38.1598 8.0139 49.778 16.2625 83.384 47.0832 2.0216 53.7705 49.2206 5.021 53.9185 40.4228 33.5043 60.121 28.3136 10.368 16.3523 41.9382 31.619 39.1109 45.9185 86.6513 53.1992 15.4276 22.1251 37.1946 79.6108 48.777 59.6686 94.1838 7.0635 11.2936 69.6127 14.6289 94.2288 62.832 71.1725 60.0564 6.0191 38.1736 80.9097 1.3304 91.9807 30.2911 36.2174 87.2204 10.1177 43.2487 87.7894 66.6042 93.3672 43.8502 1.6864 68.325 30.2081 57.9129 44.8929 21.9828 11.4351 41.0417 38.4005 81.5462 28.1149 32.6335 53.2562 67.8496 68.3587 15.0239 40.9246 87.7651 41.3887 72.02 2.1159 63.2321 97.4538 68.8899 38.5252 1.4625 85.4475 39.4353 93.4061 11.3114 22.4609 39.9608 96.0588 17.2475 96.3832 77.8154 36.6228 56.0756 72.1517 6.5035 59.645 51.6906 32.0035 34.6541 2.5161 47.4945 2.195 89.4443 40.4989 47.03 95.683 17.6498 28.9831 53.3228 89.9035 54.8632 93.8348 34.9495 45.9436 80.4353 93.0246 65.2669 89.5006 21.4757 34.4509 47.7555 84.6421 41.4568 29.7233 42.9311 50.9866 84.1044 69.8606 43.0667 71.1836 65.8747 30.1935 1.0906 72.5784 47.9619 67.8723 86.6285 98.2357 62.34 39.8867 24.9275 85.9362 66.6338 77.4392 84.6791 42.4895 75.6261 72.9465 9.0452 54.4352 57.7934 11.0468 49.5159 99.7948 32.4734 34.4272 22.1991 50.4921 94.7931 35.133 30.4676 67.5726 84.7986 99.0359 0.8679 92.6317 97.0509 70.8463 9.6332 61.3171 31.0141 74.4393 97.3938 45.9272 97.9971 36.2309 46.3381 46.0541 83.056 18.887 87.9956 43.8101 91.8376 41.3091 45.7212 92.5063 30.4614 83.6867 37.2143 77.992 80.1785
    ${output}=    Read Until Prompt
    Log    ${output}
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( timed out :)

Start Controller
    [Tags]    functional
    Switch Connection    Controller
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Controller.
    ${input}=    Write    python ${subSystem}_Controller_${component}.py
    ${output}=    Read Until    controller ready
    Log    ${output}
    Should Contain    ${output}    ${subSystem}_${component} controller ready

Start Commander
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 71.7451 49.368 86.3925 99.8723 85.6774 60.0785 89.3408 53.3656 56.02 22.1552 17.7174 19.4311 35.7042 2.433 72.5784 35.2927 64.8806 66.6182 76.8838 63.8302 98.1667 12.7614 22.6513 74.7454 17.1719 61.1224 86.4138 36.84 53.0116 7.5281 52.3424 37.9417 14.3971 77.5695 90.9195 64.61 16.101 71.4305 19.4786 18.7919 19.3926 85.8808 70.729 74.3187 55.7482 65.6782 47.0105 52.7121 31.4473 63.5042 92.8015 76.8116 22.8582 79.1985 0.9142 26.9375 99.0963 14.5337 3.7969 32.3047 66.6857 26.8041 21.354 83.9914 29.082 37.8691 66.1257 31.5369 68.3385 7.5323 18.6528 39.9712 39.22 90.1244 90.7998 60.2771 54.4284 48.2004 10.0697 60.7921 71.7439 61.549 41.8183 15.0161 4.575 58.8346 73.67 36.1923 55.1227 54.2917 36.8471 75.9434 25.4105 74.6734 99.8931 57.6414 62.9341 79.1565 28.5259 89.3511 96.6339 42.1507 34.3156 51.1909 30.1496 3.7187 7.0446 94.9505 58.7382 24.6143 28.1742 40.3396 95.3359 67.8159 31.9116 25.4051 15.9257 53.2387 43.6697 42.0299 99.3557 55.033 84.7367 55.5968 44.3477 9.7467 53.4533 87.3989 18.7691 4.8938 30.2913 92.9056 74.5621 68.4649 95.7534 13.7156 81.5614 73.4236 16.946 14.8923 97.6297 66.4472 60.5497 20.5506 37.2566 2.1683 76.1508 20.5316 77.6626 88.4144 89.9512 97.5144 43.6914 99.7078 3.1429 8.5743 15.6036 65.1433 29.8604 95.4012 91.0767 72.7163 93.8736 15.5324 90.3217 31.9953 55.088 92.2535 55.3877 20.1354 34.3397 28.1767 17.9484 80.3721 41.7794 51.4095 42.673 60.167 2.4727 29.5611 8.364 46.5835 39.2201 30.8137 91.5893 97.5173 3.8547 46.7236 34.2224 7.815 39.7984 41.7886 42.2811 9.2388 96.1398 99.6075 74.0813 3.5303 53.63 58.3919 38.1087 15.7887 74.536 90.1688 24.2713 88.8893 35.4066 74.19 83.3453 38.9656 34.9486 89.9889 94.3095 67.3949 24.2624 88.3685 86.1582 4.7622 50.6943 67.9789 9.296 69.908 37.0322 51.759 90.2156 87.2154 49.0368 1.861 65.9565 56.7884 65.3074 17.2162 43.0588 77.3408 8.1939 68.629 45.9927 9.0422 52.9246 80.6416 30.6508 14.205 9.4176 39.2438 25.1439 61.3462 10.7647 8.4152 28.6459 84.4334 94.1517 51.7073 37.7039 23.8725 2.8155 77.2274 10.285 92.8634 55.355 44.6257 99.9509 88.6296 20.3378 53.3722 58.2464 78.3 98.4649 28.7662 98.6277 64.0695 3.9814 33.6256 13.2935 58.7874 51.0997 82.2188 94.7322 46.2493 38.7115 82.2108 24.9698 84.9967 59.1185 20.0246 51.7041 73.8736 81.4554 62.2345 89.0124 62.2546 2.8357 14.9379 40.0566 50.0513 31.7746 70.3128 29.4315 27.8487 52.6653 89.3997 16.4602 16.3087 71.2038 62.5982 60.4309 48.7003 71.6262 13.1585 89.4055 83.0386 27.0552 55.3921 80.1562 62.8685 94.4742 80.3015 45.7424 91.2872 0.4199 27.993 13.5628 79.9492 13.6682 5.6782 0.5555 17.6984 87.1837 97.0926 10.3554 16.8895 55.521 49.0422 74.3357 65.303 83.9888 4.4721 48.3164 12.0865 45.4431 15.91 86.0386 96.0567 75.5968 28.5225 32.8421 16.3748 82.985 24.4874 54.9948 58.0761 64.0913 99.0632 38.1598 8.0139 49.778 16.2625 83.384 47.0832 2.0216 53.7705 49.2206 5.021 53.9185 40.4228 33.5043 60.121 28.3136 10.368 16.3523 41.9382 31.619 39.1109 45.9185 86.6513 53.1992 15.4276 22.1251 37.1946 79.6108 48.777 59.6686 94.1838 7.0635 11.2936 69.6127 14.6289 94.2288 62.832 71.1725 60.0564 6.0191 38.1736 80.9097 1.3304 91.9807 30.2911 36.2174 87.2204 10.1177 43.2487 87.7894 66.6042 93.3672 43.8502 1.6864 68.325 30.2081 57.9129 44.8929 21.9828 11.4351 41.0417 38.4005 81.5462 28.1149 32.6335 53.2562 67.8496 68.3587 15.0239 40.9246 87.7651 41.3887 72.02 2.1159 63.2321 97.4538 68.8899 38.5252 1.4625 85.4475 39.4353 93.4061 11.3114 22.4609 39.9608 96.0588 17.2475 96.3832 77.8154 36.6228 56.0756 72.1517 6.5035 59.645 51.6906 32.0035 34.6541 2.5161 47.4945 2.195 89.4443 40.4989 47.03 95.683 17.6498 28.9831 53.3228 89.9035 54.8632 93.8348 34.9495 45.9436 80.4353 93.0246 65.2669 89.5006 21.4757 34.4509 47.7555 84.6421 41.4568 29.7233 42.9311 50.9866 84.1044 69.8606 43.0667 71.1836 65.8747 30.1935 1.0906 72.5784 47.9619 67.8723 86.6285 98.2357 62.34 39.8867 24.9275 85.9362 66.6338 77.4392 84.6791 42.4895 75.6261 72.9465 9.0452 54.4352 57.7934 11.0468 49.5159 99.7948 32.4734 34.4272 22.1991 50.4921 94.7931 35.133 30.4676 67.5726 84.7986 99.0359 0.8679 92.6317 97.0509 70.8463 9.6332 61.3171 31.0141 74.4393 97.3938 45.9272 97.9971 36.2309 46.3381 46.0541 83.056 18.887 87.9956 43.8101 91.8376 41.3091 45.7212 92.5063 30.4614 83.6867 37.2143 77.992 80.1785
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain X Times    ${output}    === [issueCommand_${component}] writing a command containing :    1
    Should Contain X Times    ${output}    device :    1
    Should Contain X Times    ${output}    property :    1
    Should Contain X Times    ${output}    action :    1
    Should Contain X Times    ${output}    value :    1
    Should Contain X Times    ${output}    xlut : 71.7451    1
    Should Contain X Times    ${output}    ylut : 36.8471    1
    Should Contain X Times    ${output}    zlut : 8.364    1
    Should Contain X Times    ${output}    ulut : 3.9814    1
    Should Contain X Times    ${output}    vlut : 49.2206    1
    Should Contain X Times    ${output}    wlut : 2.195    1
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( completed ok :)

Read Controller
    [Tags]    functional
    Switch Connection    Controller
    ${output}=    Read Until    result \ \ : Done : OK
    Log    ${output}
    Should Contain X Times    ${output}    xlut(90) = [71.7451, 49.368, 86.3925, 99.8723, 85.6774, 60.0785, 89.3408, 53.3656, 56.02, 22.1552, 17.7174, 19.4311, 35.7042, 2.433, 72.5784, 35.2927, 64.8806, 66.6182, 76.8838, 63.8302, 98.1667, 12.7614, 22.6513, 74.7454, 17.1719, 61.1224, 86.4138, 36.84, 53.0116, 7.5281, 52.3424, 37.9417, 14.3971, 77.5695, 90.9195, 64.61, 16.101, 71.4305, 19.4786, 18.7919, 19.3926, 85.8808, 70.729, 74.3187, 55.7482, 65.6782, 47.0105, 52.7121, 31.4473, 63.5042, 92.8015, 76.8116, 22.8582, 79.1985, 0.9142, 26.9375, 99.0963, 14.5337, 3.7969, 32.3047, 66.6857, 26.8041, 21.354, 83.9914, 29.082, 37.8691, 66.1257, 31.5369, 68.3385, 7.5323, 18.6528, 39.9712, 39.22, 90.1244, 90.7998, 60.2771, 54.4284, 48.2004, 10.0697, 60.7921, 71.7439, 61.549, 41.8183, 15.0161, 4.575, 58.8346, 73.67, 36.1923, 55.1227, 54.2917]    1
    Should Contain X Times    ${output}    ylut(90) = [36.8471, 75.9434, 25.4105, 74.6734, 99.8931, 57.6414, 62.9341, 79.1565, 28.5259, 89.3511, 96.6339, 42.1507, 34.3156, 51.1909, 30.1496, 3.7187, 7.0446, 94.9505, 58.7382, 24.6143, 28.1742, 40.3396, 95.3359, 67.8159, 31.9116, 25.4051, 15.9257, 53.2387, 43.6697, 42.0299, 99.3557, 55.033, 84.7367, 55.5968, 44.3477, 9.7467, 53.4533, 87.3989, 18.7691, 4.8938, 30.2913, 92.9056, 74.5621, 68.4649, 95.7534, 13.7156, 81.5614, 73.4236, 16.946, 14.8923, 97.6297, 66.4472, 60.5497, 20.5506, 37.2566, 2.1683, 76.1508, 20.5316, 77.6626, 88.4144, 89.9512, 97.5144, 43.6914, 99.7078, 3.1429, 8.5743, 15.6036, 65.1433, 29.8604, 95.4012, 91.0767, 72.7163, 93.8736, 15.5324, 90.3217, 31.9953, 55.088, 92.2535, 55.3877, 20.1354, 34.3397, 28.1767, 17.9484, 80.3721, 41.7794, 51.4095, 42.673, 60.167, 2.4727, 29.5611]    1
    Should Contain X Times    ${output}    zlut(90) = [8.364, 46.5835, 39.2201, 30.8137, 91.5893, 97.5173, 3.8547, 46.7236, 34.2224, 7.815, 39.7984, 41.7886, 42.2811, 9.2388, 96.1398, 99.6075, 74.0813, 3.5303, 53.63, 58.3919, 38.1087, 15.7887, 74.536, 90.1688, 24.2713, 88.8893, 35.4066, 74.19, 83.3453, 38.9656, 34.9486, 89.9889, 94.3095, 67.3949, 24.2624, 88.3685, 86.1582, 4.7622, 50.6943, 67.9789, 9.296, 69.908, 37.0322, 51.759, 90.2156, 87.2154, 49.0368, 1.861, 65.9565, 56.7884, 65.3074, 17.2162, 43.0588, 77.3408, 8.1939, 68.629, 45.9927, 9.0422, 52.9246, 80.6416, 30.6508, 14.205, 9.4176, 39.2438, 25.1439, 61.3462, 10.7647, 8.4152, 28.6459, 84.4334, 94.1517, 51.7073, 37.7039, 23.8725, 2.8155, 77.2274, 10.285, 92.8634, 55.355, 44.6257, 99.9509, 88.6296, 20.3378, 53.3722, 58.2464, 78.3, 98.4649, 28.7662, 98.6277, 64.0695]    1
    Should Contain X Times    ${output}    ulut(90) = [3.9814, 33.6256, 13.2935, 58.7874, 51.0997, 82.2188, 94.7322, 46.2493, 38.7115, 82.2108, 24.9698, 84.9967, 59.1185, 20.0246, 51.7041, 73.8736, 81.4554, 62.2345, 89.0124, 62.2546, 2.8357, 14.9379, 40.0566, 50.0513, 31.7746, 70.3128, 29.4315, 27.8487, 52.6653, 89.3997, 16.4602, 16.3087, 71.2038, 62.5982, 60.4309, 48.7003, 71.6262, 13.1585, 89.4055, 83.0386, 27.0552, 55.3921, 80.1562, 62.8685, 94.4742, 80.3015, 45.7424, 91.2872, 0.4199, 27.993, 13.5628, 79.9492, 13.6682, 5.6782, 0.5555, 17.6984, 87.1837, 97.0926, 10.3554, 16.8895, 55.521, 49.0422, 74.3357, 65.303, 83.9888, 4.4721, 48.3164, 12.0865, 45.4431, 15.91, 86.0386, 96.0567, 75.5968, 28.5225, 32.8421, 16.3748, 82.985, 24.4874, 54.9948, 58.0761, 64.0913, 99.0632, 38.1598, 8.0139, 49.778, 16.2625, 83.384, 47.0832, 2.0216, 53.7705]    1
    Should Contain X Times    ${output}    vlut(90) = [49.2206, 5.021, 53.9185, 40.4228, 33.5043, 60.121, 28.3136, 10.368, 16.3523, 41.9382, 31.619, 39.1109, 45.9185, 86.6513, 53.1992, 15.4276, 22.1251, 37.1946, 79.6108, 48.777, 59.6686, 94.1838, 7.0635, 11.2936, 69.6127, 14.6289, 94.2288, 62.832, 71.1725, 60.0564, 6.0191, 38.1736, 80.9097, 1.3304, 91.9807, 30.2911, 36.2174, 87.2204, 10.1177, 43.2487, 87.7894, 66.6042, 93.3672, 43.8502, 1.6864, 68.325, 30.2081, 57.9129, 44.8929, 21.9828, 11.4351, 41.0417, 38.4005, 81.5462, 28.1149, 32.6335, 53.2562, 67.8496, 68.3587, 15.0239, 40.9246, 87.7651, 41.3887, 72.02, 2.1159, 63.2321, 97.4538, 68.8899, 38.5252, 1.4625, 85.4475, 39.4353, 93.4061, 11.3114, 22.4609, 39.9608, 96.0588, 17.2475, 96.3832, 77.8154, 36.6228, 56.0756, 72.1517, 6.5035, 59.645, 51.6906, 32.0035, 34.6541, 2.5161, 47.4945]    1
    Should Contain X Times    ${output}    wlut(90) = [2.195, 89.4443, 40.4989, 47.03, 95.683, 17.6498, 28.9831, 53.3228, 89.9035, 54.8632, 93.8348, 34.9495, 45.9436, 80.4353, 93.0246, 65.2669, 89.5006, 21.4757, 34.4509, 47.7555, 84.6421, 41.4568, 29.7233, 42.9311, 50.9866, 84.1044, 69.8606, 43.0667, 71.1836, 65.8747, 30.1935, 1.0906, 72.5784, 47.9619, 67.8723, 86.6285, 98.2357, 62.34, 39.8867, 24.9275, 85.9362, 66.6338, 77.4392, 84.6791, 42.4895, 75.6261, 72.9465, 9.0452, 54.4352, 57.7934, 11.0468, 49.5159, 99.7948, 32.4734, 34.4272, 22.1991, 50.4921, 94.7931, 35.133, 30.4676, 67.5726, 84.7986, 99.0359, 0.8679, 92.6317, 97.0509, 70.8463, 9.6332, 61.3171, 31.0141, 74.4393, 97.3938, 45.9272, 97.9971, 36.2309, 46.3381, 46.0541, 83.056, 18.887, 87.9956, 43.8101, 91.8376, 41.3091, 45.7212, 92.5063, 30.4614, 83.6867, 37.2143, 77.992, 80.1785]    1
    Should Contain X Times    ${output}    === [ackCommand_configureLut] acknowledging a command with :    1
    Should Contain    ${output}    seqNum   :
    Should Contain    ${output}    ack      : 301
    Should Contain X Times    ${output}    error \ \ \ : 0    1
    Should Contain    ${output}    result   : Ack : OK
    Should Contain    ${output}    ack      : 303
    Should Contain    ${output}    result   : Done : OK
