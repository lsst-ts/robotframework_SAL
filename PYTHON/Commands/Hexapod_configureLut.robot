*** Settings ***
Documentation    Hexapod_configureLut commander/controller tests.
Force Tags    python
Suite Setup    Log Many    ${Host}    ${subSystem}    ${component}    ${timeout}
Suite Teardown    Close All Connections
Library    SSHLibrary
Library    String
Resource    ../../Global_Vars.robot

*** Variables ***
${subSystem}    hexapod
${component}    configureLut
${timeout}    30s

*** Test Cases ***
Create Commander Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Commander    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}

Create Controller Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Controller    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}

Verify Component Commander and Controller
    [Tags]    smoke
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Commander_${component}.py
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Controller_${component}.py

Start Commander - Verify Missing Inputs Error
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain    ${output}   ERROR : Invalid or missing arguments :

Start Commander - Verify Timeout without Controller
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 94.0753 57.0582 71.6463 7.4691 1.4329 62.9734 39.8145 1.7142 46.8395 93.795 67.521 91.652 58.9562 2.952 19.7717 16.4052 20.4355 97.8891 32.2676 10.1198 75.0427 79.5744 20.9794 42.9603 69.508 18.6715 21.2202 56.0289 68.4131 99.5054 44.7727 68.1735 56.2488 19.932 53.9317 1.4091 49.5893 8.4246 41.6668 12.7049 87.4188 95.7998 77.6407 10.3877 98.6395 99.4449 98.6471 69.6443 87.7907 41.6473 24.2713 35.3838 68.4265 88.7564 27.1455 68.3526 66.2765 23.0624 24.2926 71.2565 36.6892 20.687 82.4388 46.6779 47.5531 15.3243 88.9182 8.039 47.9526 42.5572 16.6356 55.1021 45.335 11.6865 98.4549 64.3401 54.774 56.508 30.4382 2.5379 43.4158 23.1426 97.4119 54.6686 36.8602 57.0266 27.8687 17.1587 28.2655 65.9151 79.9524 63.518 73.5989 47.494 88.306 20.8364 88.4765 17.0923 39.4895 93.9052 61.7114 2.2872 94.1728 5.0746 36.819 39.8462 32.8249 77.0913 53.7291 34.8759 20.0781 39.9985 29.0959 35.9093 20.6865 10.0754 45.904 8.9622 18.6209 72.8292 25.8517 73.411 16.5183 23.3728 75.053 19.0673 68.6912 57.4414 69.6822 66.6048 47.6488 4.0903 96.362 67.7286 51.4377 13.7381 70.6556 51.1695 20.7993 14.5066 38.9309 83.1021 77.4275 33.6675 47.4965 91.2399 3.3346 78.2896 54.9769 1.9583 20.4693 66.8466 64.5536 53.5431 24.604 80.1227 95.5057 5.0992 81.0578 85.3493 96.5663 78.8004 10.1603 22.858 4.3112 57.9509 76.8338 53.4245 76.6043 27.8707 64.8165 72.6336 47.2491 56.2284 85.7861 45.3067 68.2701 77.1358 49.226 15.1891 0.1447 43.7825 79.6941 78.5589 39.1744 77.8628 68.1412 55.6275 22.4382 55.9137 50.6875 15.2482 78.6423 20.3696 37.9048 35.1242 1.4597 96.8089 0.0641 33.4405 84.945 7.8157 98.4719 83.2841 0.3202 55.4554 39.8542 1.1648 43.0194 1.4915 64.9186 16.4445 18.7154 77.5632 12.8333 57.6211 47.956 71.125 49.7261 75.5963 51.444 37.7143 28.4191 99.679 33.7097 32.6412 51.7238 0.0488 43.3289 26.3335 35.1163 34.5697 25.1056 72.985 87.3335 97.3136 20.9213 23.8323 77.544 95.9814 93.3468 76.576 47.9733 59.0475 43.4895 70.9165 82.6208 72.3936 34.4719 26.1765 33.7681 76.342 72.3991 79.2126 70.0422 60.5975 30.4073 44.9679 79.9906 79.8613 98.0776 0.1168 32.3399 13.6286 8.0342 2.5259 42.079 81.9134 85.5448 60.9915 80.1113 33.6932 80.0599 41.4158 26.9328 41.0993 81.5384 67.2061 31.0995 34.5279 96.394 64.3728 13.4941 89.5627 86.501 93.2984 83.7828 29.1399 75.5145 36.8187 94.4611 58.7888 53.0565 19.466 71.8155 98.0348 98.009 14.5822 16.3221 51.8884 71.4141 80.977 15.5451 85.8793 65.4035 87.2958 56.281 4.5551 12.9012 96.376 52.6582 52.3475 43.401 44.2715 65.1542 30.6631 37.085 91.5533 93.4792 88.3471 74.5125 89.6619 5.9676 82.6732 44.506 75.4597 70.5571 90.4823 70.1483 17.9161 79.0099 92.3501 68.5716 96.6384 11.8223 71.5208 86.9758 55.8973 74.0733 45.2985 43.8968 45.1215 45.7335 54.9645 70.099 48.3691 46.653 93.7674 2.6774 55.9278 12.6606 53.3831 56.6449 17.9204 16.0775 81.2344 46.4447 6.8873 83.9985 26.2112 83.0367 29.0092 69.5504 49.6683 84.4583 55.7455 21.84 13.3613 90.4298 76.0528 18.4525 40.3502 72.2562 9.4281 67.2953 65.1495 34.5798 70.9486 29.8608 96.9378 76.4478 57.0408 58.8196 72.065 5.3305 26.8353 15.917 99.5791 46.1707 82.0093 83.4187 82.6717 52.0169 11.0881 66.9814 80.5444 66.5394 64.9447 16.4488 3.6765 25.8232 18.1722 18.4352 27.9504 43.4606 20.8793 67.3513 23.3623 32.219 25.3394 43.1663 23.6459 27.9719 56.4074 57.491 50.668 17.2392 53.7139 48.4616 65.3136 33.7039 56.1445 81.5427 31.0694 40.507 64.9858 82.3752 78.1212 66.2763 0.3802 15.612 38.1745 40.5528 61.1624 67.5082 10.8012 51.0822 44.8847 5.1997 84.8478 72.1445 9.6406 45.7726 68.5371 71.7163 72.1549 47.4854 39.4321 12.956 38.5448 77.3078 11.3613 90.377 68.2967 58.1681 69.5702 58.127 19.0441 15.9095 61.0135 76.6538 67.969 84.3272 73.0809 1.7649 4.9909 20.8647 93.5169 23.1472 99.9371 0.6061 83.3334 83.3283 11.7689 14.5602 99.2143 15.5629 37.3434 98.1374 46.3695 44.7189 48.7016 87.1974 88.9644 13.2814 6.202 58.5826 96.4264 30.4921 97.2858 87.032 5.7183 41.8024 1.7643 64.2912 86.6131 27.1252 93.2561 95.4207 57.9085 97.5998 76.5048 93.0299 71.9953 11.5346 99.4676 14.9152 63.3987 71.3144 64.737 13.602 75.4503 22.8439 4.7406 70.1056 48.3426 7.0115 88.9681 86.5367 25.9969 41.9914 61.2793 74.4516 27.1113 34.9595 26.6993 39.4497 69.2781 10.9354 56.1399 32.1682 56.0091 73.8478 17.0319 21.2212 75.4468 17.9611 81.1252 97.8339 17.5731
    ${output}=    Read Until Prompt
    Log    ${output}
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( timed out :)

Start Controller
    [Tags]    functional
    Switch Connection    Controller
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Controller.
    ${input}=    Write    python ${subSystem}_Controller_${component}.py
    ${output}=    Read Until    controller ready
    Log    ${output}
    Should Contain    ${output}    ${subSystem}_${component} controller ready

Start Commander
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 94.0753 57.0582 71.6463 7.4691 1.4329 62.9734 39.8145 1.7142 46.8395 93.795 67.521 91.652 58.9562 2.952 19.7717 16.4052 20.4355 97.8891 32.2676 10.1198 75.0427 79.5744 20.9794 42.9603 69.508 18.6715 21.2202 56.0289 68.4131 99.5054 44.7727 68.1735 56.2488 19.932 53.9317 1.4091 49.5893 8.4246 41.6668 12.7049 87.4188 95.7998 77.6407 10.3877 98.6395 99.4449 98.6471 69.6443 87.7907 41.6473 24.2713 35.3838 68.4265 88.7564 27.1455 68.3526 66.2765 23.0624 24.2926 71.2565 36.6892 20.687 82.4388 46.6779 47.5531 15.3243 88.9182 8.039 47.9526 42.5572 16.6356 55.1021 45.335 11.6865 98.4549 64.3401 54.774 56.508 30.4382 2.5379 43.4158 23.1426 97.4119 54.6686 36.8602 57.0266 27.8687 17.1587 28.2655 65.9151 79.9524 63.518 73.5989 47.494 88.306 20.8364 88.4765 17.0923 39.4895 93.9052 61.7114 2.2872 94.1728 5.0746 36.819 39.8462 32.8249 77.0913 53.7291 34.8759 20.0781 39.9985 29.0959 35.9093 20.6865 10.0754 45.904 8.9622 18.6209 72.8292 25.8517 73.411 16.5183 23.3728 75.053 19.0673 68.6912 57.4414 69.6822 66.6048 47.6488 4.0903 96.362 67.7286 51.4377 13.7381 70.6556 51.1695 20.7993 14.5066 38.9309 83.1021 77.4275 33.6675 47.4965 91.2399 3.3346 78.2896 54.9769 1.9583 20.4693 66.8466 64.5536 53.5431 24.604 80.1227 95.5057 5.0992 81.0578 85.3493 96.5663 78.8004 10.1603 22.858 4.3112 57.9509 76.8338 53.4245 76.6043 27.8707 64.8165 72.6336 47.2491 56.2284 85.7861 45.3067 68.2701 77.1358 49.226 15.1891 0.1447 43.7825 79.6941 78.5589 39.1744 77.8628 68.1412 55.6275 22.4382 55.9137 50.6875 15.2482 78.6423 20.3696 37.9048 35.1242 1.4597 96.8089 0.0641 33.4405 84.945 7.8157 98.4719 83.2841 0.3202 55.4554 39.8542 1.1648 43.0194 1.4915 64.9186 16.4445 18.7154 77.5632 12.8333 57.6211 47.956 71.125 49.7261 75.5963 51.444 37.7143 28.4191 99.679 33.7097 32.6412 51.7238 0.0488 43.3289 26.3335 35.1163 34.5697 25.1056 72.985 87.3335 97.3136 20.9213 23.8323 77.544 95.9814 93.3468 76.576 47.9733 59.0475 43.4895 70.9165 82.6208 72.3936 34.4719 26.1765 33.7681 76.342 72.3991 79.2126 70.0422 60.5975 30.4073 44.9679 79.9906 79.8613 98.0776 0.1168 32.3399 13.6286 8.0342 2.5259 42.079 81.9134 85.5448 60.9915 80.1113 33.6932 80.0599 41.4158 26.9328 41.0993 81.5384 67.2061 31.0995 34.5279 96.394 64.3728 13.4941 89.5627 86.501 93.2984 83.7828 29.1399 75.5145 36.8187 94.4611 58.7888 53.0565 19.466 71.8155 98.0348 98.009 14.5822 16.3221 51.8884 71.4141 80.977 15.5451 85.8793 65.4035 87.2958 56.281 4.5551 12.9012 96.376 52.6582 52.3475 43.401 44.2715 65.1542 30.6631 37.085 91.5533 93.4792 88.3471 74.5125 89.6619 5.9676 82.6732 44.506 75.4597 70.5571 90.4823 70.1483 17.9161 79.0099 92.3501 68.5716 96.6384 11.8223 71.5208 86.9758 55.8973 74.0733 45.2985 43.8968 45.1215 45.7335 54.9645 70.099 48.3691 46.653 93.7674 2.6774 55.9278 12.6606 53.3831 56.6449 17.9204 16.0775 81.2344 46.4447 6.8873 83.9985 26.2112 83.0367 29.0092 69.5504 49.6683 84.4583 55.7455 21.84 13.3613 90.4298 76.0528 18.4525 40.3502 72.2562 9.4281 67.2953 65.1495 34.5798 70.9486 29.8608 96.9378 76.4478 57.0408 58.8196 72.065 5.3305 26.8353 15.917 99.5791 46.1707 82.0093 83.4187 82.6717 52.0169 11.0881 66.9814 80.5444 66.5394 64.9447 16.4488 3.6765 25.8232 18.1722 18.4352 27.9504 43.4606 20.8793 67.3513 23.3623 32.219 25.3394 43.1663 23.6459 27.9719 56.4074 57.491 50.668 17.2392 53.7139 48.4616 65.3136 33.7039 56.1445 81.5427 31.0694 40.507 64.9858 82.3752 78.1212 66.2763 0.3802 15.612 38.1745 40.5528 61.1624 67.5082 10.8012 51.0822 44.8847 5.1997 84.8478 72.1445 9.6406 45.7726 68.5371 71.7163 72.1549 47.4854 39.4321 12.956 38.5448 77.3078 11.3613 90.377 68.2967 58.1681 69.5702 58.127 19.0441 15.9095 61.0135 76.6538 67.969 84.3272 73.0809 1.7649 4.9909 20.8647 93.5169 23.1472 99.9371 0.6061 83.3334 83.3283 11.7689 14.5602 99.2143 15.5629 37.3434 98.1374 46.3695 44.7189 48.7016 87.1974 88.9644 13.2814 6.202 58.5826 96.4264 30.4921 97.2858 87.032 5.7183 41.8024 1.7643 64.2912 86.6131 27.1252 93.2561 95.4207 57.9085 97.5998 76.5048 93.0299 71.9953 11.5346 99.4676 14.9152 63.3987 71.3144 64.737 13.602 75.4503 22.8439 4.7406 70.1056 48.3426 7.0115 88.9681 86.5367 25.9969 41.9914 61.2793 74.4516 27.1113 34.9595 26.6993 39.4497 69.2781 10.9354 56.1399 32.1682 56.0091 73.8478 17.0319 21.2212 75.4468 17.9611 81.1252 97.8339 17.5731
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain X Times    ${output}    === [issueCommand_${component}] writing a command containing :    1
    Should Contain X Times    ${output}    device :    1
    Should Contain X Times    ${output}    property :    1
    Should Contain X Times    ${output}    action :    1
    Should Contain X Times    ${output}    value :    1
    Should Contain X Times    ${output}    xlut : 94.0753    1
    Should Contain X Times    ${output}    ylut : 79.9524    1
    Should Contain X Times    ${output}    zlut : 0.1447    1
    Should Contain X Times    ${output}    ulut : 80.1113    1
    Should Contain X Times    ${output}    vlut : 83.0367    1
    Should Contain X Times    ${output}    wlut : 77.3078    1
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( completed ok :)

Read Controller
    [Tags]    functional
    Switch Connection    Controller
    ${output}=    Read Until    result \ \ : Done : OK
    Log    ${output}
    Should Contain X Times    ${output}    xlut(90) = [94.0753, 57.0582, 71.6463, 7.4691, 1.4329, 62.9734, 39.8145, 1.7142, 46.8395, 93.795, 67.521, 91.652, 58.9562, 2.952, 19.7717, 16.4052, 20.4355, 97.8891, 32.2676, 10.1198, 75.0427, 79.5744, 20.9794, 42.9603, 69.508, 18.6715, 21.2202, 56.0289, 68.4131, 99.5054, 44.7727, 68.1735, 56.2488, 19.932, 53.9317, 1.4091, 49.5893, 8.4246, 41.6668, 12.7049, 87.4188, 95.7998, 77.6407, 10.3877, 98.6395, 99.4449, 98.6471, 69.6443, 87.7907, 41.6473, 24.2713, 35.3838, 68.4265, 88.7564, 27.1455, 68.3526, 66.2765, 23.0624, 24.2926, 71.2565, 36.6892, 20.687, 82.4388, 46.6779, 47.5531, 15.3243, 88.9182, 8.039, 47.9526, 42.5572, 16.6356, 55.1021, 45.335, 11.6865, 98.4549, 64.3401, 54.774, 56.508, 30.4382, 2.5379, 43.4158, 23.1426, 97.4119, 54.6686, 36.8602, 57.0266, 27.8687, 17.1587, 28.2655, 65.9151]    1
    Should Contain X Times    ${output}    ylut(90) = [79.9524, 63.518, 73.5989, 47.494, 88.306, 20.8364, 88.4765, 17.0923, 39.4895, 93.9052, 61.7114, 2.2872, 94.1728, 5.0746, 36.819, 39.8462, 32.8249, 77.0913, 53.7291, 34.8759, 20.0781, 39.9985, 29.0959, 35.9093, 20.6865, 10.0754, 45.904, 8.9622, 18.6209, 72.8292, 25.8517, 73.411, 16.5183, 23.3728, 75.053, 19.0673, 68.6912, 57.4414, 69.6822, 66.6048, 47.6488, 4.0903, 96.362, 67.7286, 51.4377, 13.7381, 70.6556, 51.1695, 20.7993, 14.5066, 38.9309, 83.1021, 77.4275, 33.6675, 47.4965, 91.2399, 3.3346, 78.2896, 54.9769, 1.9583, 20.4693, 66.8466, 64.5536, 53.5431, 24.604, 80.1227, 95.5057, 5.0992, 81.0578, 85.3493, 96.5663, 78.8004, 10.1603, 22.858, 4.3112, 57.9509, 76.8338, 53.4245, 76.6043, 27.8707, 64.8165, 72.6336, 47.2491, 56.2284, 85.7861, 45.3067, 68.2701, 77.1358, 49.226, 15.1891]    1
    Should Contain X Times    ${output}    zlut(90) = [0.1447, 43.7825, 79.6941, 78.5589, 39.1744, 77.8628, 68.1412, 55.6275, 22.4382, 55.9137, 50.6875, 15.2482, 78.6423, 20.3696, 37.9048, 35.1242, 1.4597, 96.8089, 0.0641, 33.4405, 84.945, 7.8157, 98.4719, 83.2841, 0.3202, 55.4554, 39.8542, 1.1648, 43.0194, 1.4915, 64.9186, 16.4445, 18.7154, 77.5632, 12.8333, 57.6211, 47.956, 71.125, 49.7261, 75.5963, 51.444, 37.7143, 28.4191, 99.679, 33.7097, 32.6412, 51.7238, 0.0488, 43.3289, 26.3335, 35.1163, 34.5697, 25.1056, 72.985, 87.3335, 97.3136, 20.9213, 23.8323, 77.544, 95.9814, 93.3468, 76.576, 47.9733, 59.0475, 43.4895, 70.9165, 82.6208, 72.3936, 34.4719, 26.1765, 33.7681, 76.342, 72.3991, 79.2126, 70.0422, 60.5975, 30.4073, 44.9679, 79.9906, 79.8613, 98.0776, 0.1168, 32.3399, 13.6286, 8.0342, 2.5259, 42.079, 81.9134, 85.5448, 60.9915]    1
    Should Contain X Times    ${output}    ulut(90) = [80.1113, 33.6932, 80.0599, 41.4158, 26.9328, 41.0993, 81.5384, 67.2061, 31.0995, 34.5279, 96.394, 64.3728, 13.4941, 89.5627, 86.501, 93.2984, 83.7828, 29.1399, 75.5145, 36.8187, 94.4611, 58.7888, 53.0565, 19.466, 71.8155, 98.0348, 98.009, 14.5822, 16.3221, 51.8884, 71.4141, 80.977, 15.5451, 85.8793, 65.4035, 87.2958, 56.281, 4.5551, 12.9012, 96.376, 52.6582, 52.3475, 43.401, 44.2715, 65.1542, 30.6631, 37.085, 91.5533, 93.4792, 88.3471, 74.5125, 89.6619, 5.9676, 82.6732, 44.506, 75.4597, 70.5571, 90.4823, 70.1483, 17.9161, 79.0099, 92.3501, 68.5716, 96.6384, 11.8223, 71.5208, 86.9758, 55.8973, 74.0733, 45.2985, 43.8968, 45.1215, 45.7335, 54.9645, 70.099, 48.3691, 46.653, 93.7674, 2.6774, 55.9278, 12.6606, 53.3831, 56.6449, 17.9204, 16.0775, 81.2344, 46.4447, 6.8873, 83.9985, 26.2112]    1
    Should Contain X Times    ${output}    vlut(90) = [83.0367, 29.0092, 69.5504, 49.6683, 84.4583, 55.7455, 21.84, 13.3613, 90.4298, 76.0528, 18.4525, 40.3502, 72.2562, 9.4281, 67.2953, 65.1495, 34.5798, 70.9486, 29.8608, 96.9378, 76.4478, 57.0408, 58.8196, 72.065, 5.3305, 26.8353, 15.917, 99.5791, 46.1707, 82.0093, 83.4187, 82.6717, 52.0169, 11.0881, 66.9814, 80.5444, 66.5394, 64.9447, 16.4488, 3.6765, 25.8232, 18.1722, 18.4352, 27.9504, 43.4606, 20.8793, 67.3513, 23.3623, 32.219, 25.3394, 43.1663, 23.6459, 27.9719, 56.4074, 57.491, 50.668, 17.2392, 53.7139, 48.4616, 65.3136, 33.7039, 56.1445, 81.5427, 31.0694, 40.507, 64.9858, 82.3752, 78.1212, 66.2763, 0.3802, 15.612, 38.1745, 40.5528, 61.1624, 67.5082, 10.8012, 51.0822, 44.8847, 5.1997, 84.8478, 72.1445, 9.6406, 45.7726, 68.5371, 71.7163, 72.1549, 47.4854, 39.4321, 12.956, 38.5448]    1
    Should Contain X Times    ${output}    wlut(90) = [77.3078, 11.3613, 90.377, 68.2967, 58.1681, 69.5702, 58.127, 19.0441, 15.9095, 61.0135, 76.6538, 67.969, 84.3272, 73.0809, 1.7649, 4.9909, 20.8647, 93.5169, 23.1472, 99.9371, 0.6061, 83.3334, 83.3283, 11.7689, 14.5602, 99.2143, 15.5629, 37.3434, 98.1374, 46.3695, 44.7189, 48.7016, 87.1974, 88.9644, 13.2814, 6.202, 58.5826, 96.4264, 30.4921, 97.2858, 87.032, 5.7183, 41.8024, 1.7643, 64.2912, 86.6131, 27.1252, 93.2561, 95.4207, 57.9085, 97.5998, 76.5048, 93.0299, 71.9953, 11.5346, 99.4676, 14.9152, 63.3987, 71.3144, 64.737, 13.602, 75.4503, 22.8439, 4.7406, 70.1056, 48.3426, 7.0115, 88.9681, 86.5367, 25.9969, 41.9914, 61.2793, 74.4516, 27.1113, 34.9595, 26.6993, 39.4497, 69.2781, 10.9354, 56.1399, 32.1682, 56.0091, 73.8478, 17.0319, 21.2212, 75.4468, 17.9611, 81.1252, 97.8339, 17.5731]    1
    Should Contain X Times    ${output}    === [ackCommand_configureLut] acknowledging a command with :    1
    Should Contain    ${output}    seqNum   :
    Should Contain    ${output}    ack      : 301
    Should Contain X Times    ${output}    error \ \ \ : 0    1
    Should Contain    ${output}    result   : Ack : OK
    Should Contain    ${output}    ack      : 303
    Should Contain    ${output}    result   : Done : OK
