*** Settings ***
Documentation    Hexapod_configureLut commander/controller tests.
Force Tags    python
Suite Setup    Log Many    ${Host}    ${subSystem}    ${component}    ${timeout}
Suite Teardown    Close All Connections
Library    SSHLibrary
Library    String
Resource    ../../Global_Vars.robot

*** Variables ***
${subSystem}    hexapod
${component}    configureLut
${timeout}    30s

*** Test Cases ***
Create Commander Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Commander    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}

Create Controller Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Controller    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}

Verify Component Commander and Controller
    [Tags]    smoke
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Commander_${component}.py
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Controller_${component}.py

Start Commander - Verify Missing Inputs Error
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain    ${output}   ERROR : Invalid or missing arguments :

Start Commander - Verify Timeout without Controller
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 17.3208 83.2398 72.9175 55.3121 24.7585 86.7123 14.1629 81.0499 49.0885 86.4419 89.3004 23.894 38.578 83.7043 33.2152 64.9236 16.0999 84.2307 99.2604 70.5959 51.7603 50.4012 92.6203 82.0985 69.8193 95.4247 77.5473 12.0915 46.8266 77.8183 71.2668 45.8211 15.031 66.7607 76.6744 38.4482 48.395 78.2866 4.6906 19.4667 74.9143 8.5138 62.1653 70.2846 59.5139 64.5083 61.6873 99.9321 23.476 65.6669 43.6496 60.6963 70.0741 51.8392 2.1613 79.0846 31.842 30.3122 64.5468 80.4238 59.6703 78.8151 37.3341 17.0807 4.3616 88.6601 70.2765 56.9168 20.2613 14.1686 5.998 32.4589 29.4466 32.3024 26.4043 98.5576 6.1194 41.486 37.9866 87.6864 30.7945 85.8349 74.1335 62.7471 12.7181 85.6033 39.5029 80.896 58.5655 23.0016 9.1015 41.4493 33.1217 17.5881 61.7295 53.497 23.0508 6.1769 18.1974 3.4576 33.0948 41.7244 82.2768 69.5558 26.0059 47.921 97.8371 14.212 48.3568 87.2718 18.2938 97.6663 65.6437 23.3094 89.1216 17.7987 21.2614 13.9578 87.4225 76.1962 41.6554 8.019 91.3139 38.4989 88.1757 92.977 86.7484 67.8801 71.0754 55.9533 96.7166 16.761 21.5198 6.0938 67.3635 24.0243 73.926 5.125 64.2894 51.8167 4.0459 76.6161 18.3266 79.9687 35.4042 93.9913 21.2177 72.4315 20.5644 60.8482 65.4255 21.1701 14.5248 62.3643 16.1426 57.288 3.7898 22.9982 48.7506 4.9501 10.3984 32.2204 25.4646 69.4331 38.9477 66.241 32.3401 4.5926 40.466 42.6498 81.9762 17.3365 45.7402 83.8477 41.9948 30.5056 10.2127 24.2315 23.2272 50.6822 64.1322 91.9496 56.8962 83.0025 51.0786 67.5558 53.4237 45.795 71.1132 21.6937 7.298 28.8998 63.8132 93.0446 44.6001 76.2074 61.0658 54.6476 40.6381 54.1075 92.312 44.7615 99.8655 65.8634 70.0536 26.2586 2.5431 81.9947 30.4397 80.4902 51.0074 84.6075 73.0077 7.0748 94.8996 22.6282 77.187 78.5007 46.72 4.5606 44.5991 33.6768 30.0227 19.3958 26.6379 99.9207 12.6944 4.2396 91.763 83.807 5.1941 94.8253 80.1405 83.6332 81.0413 48.4516 32.0128 11.3979 20.205 20.7022 62.3557 58.8262 12.8885 81.0228 55.0163 37.5168 66.2885 46.7993 58.6948 77.027 14.8919 3.038 52.7 59.7284 16.7577 76.403 74.4721 72.7741 12.9291 88.8075 37.3101 85.2829 27.7929 96.2468 75.5151 85.5607 89.4921 63.0129 79.8519 28.9232 29.8469 10.0774 82.4123 72.3727 56.4051 89.1134 49.0665 48.5761 89.0119 74.6715 63.1997 56.9252 96.5292 36.8493 6.2564 19.5197 26.2824 42.29 18.5262 30.352 95.0519 65.01 69.4895 32.8706 54.6481 7.4289 42.3235 38.3157 88.7878 55.8906 89.7134 12.4947 62.8058 33.9006 89.1509 94.7884 42.854 38.4498 46.3445 71.0165 86.5892 32.4992 21.9342 64.4515 99.1563 76.5911 35.3934 49.3859 69.7214 52.4367 81.2376 99.7008 39.1503 36.8138 21.8613 93.4291 72.2616 20.3986 79.482 56.9804 63.7603 79.2265 14.3871 26.4199 62.5144 61.0995 64.6661 92.858 80.6407 22.7011 10.1915 69.9967 5.3636 65.4472 35.3839 11.3506 33.0847 59.0305 62.0443 9.9214 43.6878 19.9543 30.7665 70.9138 69.9048 6.9724 76.9151 41.0922 97.4236 98.0835 28.0441 66.2028 42.7886 49.1945 48.7756 96.2155 87.0852 65.1957 9.0668 16.4902 92.39 95.0336 22.4826 41.8453 27.7139 45.1545 76.9103 60.854 6.0884 67.7157 3.6288 24.5066 93.516 61.173 45.8662 15.2814 99.588 83.3636 3.874 92.4276 71.203 23.3549 70.1452 94.5624 68.4973 46.2688 13.333 6.232 65.956 99.9364 52.1887 67.0631 28.8014 59.8692 92.1239 20.5998 50.8113 27.4304 66.6469 29.4532 61.584 74.2868 13.6657 23.8294 39.8276 16.5523 12.4079 15.5013 65.2082 74.0466 22.3757 25.9634 24.9143 20.0223 84.5605 64.2608 79.3655 23.6664 56.0853 40.1715 50.7561 75.215 47.7294 48.758 37.1457 90.9588 28.2059 10.0773 40.0168 40.9718 51.5201 42.5227 8.9957 46.3285 54.8874 91.1657 63.808 70.0342 66.2275 0.4295 17.7068 0.2415 14.592 43.2115 77.2684 95.1302 84.7693 63.0461 53.2843 27.769 6.6732 58.2537 91.2777 68.3111 60.5872 32.4369 70.0215 26.8982 88.827 14.8456 33.7817 28.803 48.6724 83.4158 93.3006 51.3494 79.1186 36.0734 95.3595 72.8627 41.0571 16.4152 46.2477 60.3591 23.7218 24.7688 72.1834 3.3363 44.885 36.5851 54.5724 1.792 38.4945 35.0872 11.2808 67.6383 60.0546 13.0828 53.7359 52.202 82.706 26.4587 71.6335 85.6881 38.131 87.7087 97.9941 59.4303 38.6421 74.7664 50.7104 34.7694 26.2724 89.903 55.1797 53.6892 89.28 35.689 92.9712 97.6745 21.407 69.0114 43.5744 42.8478 68.3336 78.0844 32.3721 8.5403 49.1008 9.9658 43.0494 5.6269 40.892 8.9056 56.2587 73.1499 65.9498 26.6879 5.7624 50.7424
    ${output}=    Read Until Prompt
    Log    ${output}
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( timed out :)

Start Controller
    [Tags]    functional
    Switch Connection    Controller
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Controller.
    ${input}=    Write    python ${subSystem}_Controller_${component}.py
    ${output}=    Read Until    controller ready
    Log    ${output}
    Should Contain    ${output}    ${subSystem}_${component} controller ready

Start Commander
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 17.3208 83.2398 72.9175 55.3121 24.7585 86.7123 14.1629 81.0499 49.0885 86.4419 89.3004 23.894 38.578 83.7043 33.2152 64.9236 16.0999 84.2307 99.2604 70.5959 51.7603 50.4012 92.6203 82.0985 69.8193 95.4247 77.5473 12.0915 46.8266 77.8183 71.2668 45.8211 15.031 66.7607 76.6744 38.4482 48.395 78.2866 4.6906 19.4667 74.9143 8.5138 62.1653 70.2846 59.5139 64.5083 61.6873 99.9321 23.476 65.6669 43.6496 60.6963 70.0741 51.8392 2.1613 79.0846 31.842 30.3122 64.5468 80.4238 59.6703 78.8151 37.3341 17.0807 4.3616 88.6601 70.2765 56.9168 20.2613 14.1686 5.998 32.4589 29.4466 32.3024 26.4043 98.5576 6.1194 41.486 37.9866 87.6864 30.7945 85.8349 74.1335 62.7471 12.7181 85.6033 39.5029 80.896 58.5655 23.0016 9.1015 41.4493 33.1217 17.5881 61.7295 53.497 23.0508 6.1769 18.1974 3.4576 33.0948 41.7244 82.2768 69.5558 26.0059 47.921 97.8371 14.212 48.3568 87.2718 18.2938 97.6663 65.6437 23.3094 89.1216 17.7987 21.2614 13.9578 87.4225 76.1962 41.6554 8.019 91.3139 38.4989 88.1757 92.977 86.7484 67.8801 71.0754 55.9533 96.7166 16.761 21.5198 6.0938 67.3635 24.0243 73.926 5.125 64.2894 51.8167 4.0459 76.6161 18.3266 79.9687 35.4042 93.9913 21.2177 72.4315 20.5644 60.8482 65.4255 21.1701 14.5248 62.3643 16.1426 57.288 3.7898 22.9982 48.7506 4.9501 10.3984 32.2204 25.4646 69.4331 38.9477 66.241 32.3401 4.5926 40.466 42.6498 81.9762 17.3365 45.7402 83.8477 41.9948 30.5056 10.2127 24.2315 23.2272 50.6822 64.1322 91.9496 56.8962 83.0025 51.0786 67.5558 53.4237 45.795 71.1132 21.6937 7.298 28.8998 63.8132 93.0446 44.6001 76.2074 61.0658 54.6476 40.6381 54.1075 92.312 44.7615 99.8655 65.8634 70.0536 26.2586 2.5431 81.9947 30.4397 80.4902 51.0074 84.6075 73.0077 7.0748 94.8996 22.6282 77.187 78.5007 46.72 4.5606 44.5991 33.6768 30.0227 19.3958 26.6379 99.9207 12.6944 4.2396 91.763 83.807 5.1941 94.8253 80.1405 83.6332 81.0413 48.4516 32.0128 11.3979 20.205 20.7022 62.3557 58.8262 12.8885 81.0228 55.0163 37.5168 66.2885 46.7993 58.6948 77.027 14.8919 3.038 52.7 59.7284 16.7577 76.403 74.4721 72.7741 12.9291 88.8075 37.3101 85.2829 27.7929 96.2468 75.5151 85.5607 89.4921 63.0129 79.8519 28.9232 29.8469 10.0774 82.4123 72.3727 56.4051 89.1134 49.0665 48.5761 89.0119 74.6715 63.1997 56.9252 96.5292 36.8493 6.2564 19.5197 26.2824 42.29 18.5262 30.352 95.0519 65.01 69.4895 32.8706 54.6481 7.4289 42.3235 38.3157 88.7878 55.8906 89.7134 12.4947 62.8058 33.9006 89.1509 94.7884 42.854 38.4498 46.3445 71.0165 86.5892 32.4992 21.9342 64.4515 99.1563 76.5911 35.3934 49.3859 69.7214 52.4367 81.2376 99.7008 39.1503 36.8138 21.8613 93.4291 72.2616 20.3986 79.482 56.9804 63.7603 79.2265 14.3871 26.4199 62.5144 61.0995 64.6661 92.858 80.6407 22.7011 10.1915 69.9967 5.3636 65.4472 35.3839 11.3506 33.0847 59.0305 62.0443 9.9214 43.6878 19.9543 30.7665 70.9138 69.9048 6.9724 76.9151 41.0922 97.4236 98.0835 28.0441 66.2028 42.7886 49.1945 48.7756 96.2155 87.0852 65.1957 9.0668 16.4902 92.39 95.0336 22.4826 41.8453 27.7139 45.1545 76.9103 60.854 6.0884 67.7157 3.6288 24.5066 93.516 61.173 45.8662 15.2814 99.588 83.3636 3.874 92.4276 71.203 23.3549 70.1452 94.5624 68.4973 46.2688 13.333 6.232 65.956 99.9364 52.1887 67.0631 28.8014 59.8692 92.1239 20.5998 50.8113 27.4304 66.6469 29.4532 61.584 74.2868 13.6657 23.8294 39.8276 16.5523 12.4079 15.5013 65.2082 74.0466 22.3757 25.9634 24.9143 20.0223 84.5605 64.2608 79.3655 23.6664 56.0853 40.1715 50.7561 75.215 47.7294 48.758 37.1457 90.9588 28.2059 10.0773 40.0168 40.9718 51.5201 42.5227 8.9957 46.3285 54.8874 91.1657 63.808 70.0342 66.2275 0.4295 17.7068 0.2415 14.592 43.2115 77.2684 95.1302 84.7693 63.0461 53.2843 27.769 6.6732 58.2537 91.2777 68.3111 60.5872 32.4369 70.0215 26.8982 88.827 14.8456 33.7817 28.803 48.6724 83.4158 93.3006 51.3494 79.1186 36.0734 95.3595 72.8627 41.0571 16.4152 46.2477 60.3591 23.7218 24.7688 72.1834 3.3363 44.885 36.5851 54.5724 1.792 38.4945 35.0872 11.2808 67.6383 60.0546 13.0828 53.7359 52.202 82.706 26.4587 71.6335 85.6881 38.131 87.7087 97.9941 59.4303 38.6421 74.7664 50.7104 34.7694 26.2724 89.903 55.1797 53.6892 89.28 35.689 92.9712 97.6745 21.407 69.0114 43.5744 42.8478 68.3336 78.0844 32.3721 8.5403 49.1008 9.9658 43.0494 5.6269 40.892 8.9056 56.2587 73.1499 65.9498 26.6879 5.7624 50.7424
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain X Times    ${output}    === [issueCommand_${component}] writing a command containing :    1
    Should Contain X Times    ${output}    device :    1
    Should Contain X Times    ${output}    property :    1
    Should Contain X Times    ${output}    action :    1
    Should Contain X Times    ${output}    value :    1
    Should Contain X Times    ${output}    xlut : 17.3208    1
    Should Contain X Times    ${output}    ylut : 9.1015    1
    Should Contain X Times    ${output}    zlut : 64.1322    1
    Should Contain X Times    ${output}    ulut : 29.8469    1
    Should Contain X Times    ${output}    vlut : 28.0441    1
    Should Contain X Times    ${output}    wlut : 17.7068    1
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( completed ok :)

Read Controller
    [Tags]    functional
    Switch Connection    Controller
    ${output}=    Read Until    result \ \ : Done : OK
    Log    ${output}
    Should Contain X Times    ${output}    xlut(90) = [17.3208, 83.2398, 72.9175, 55.3121, 24.7585, 86.7123, 14.1629, 81.0499, 49.0885, 86.4419, 89.3004, 23.894, 38.578, 83.7043, 33.2152, 64.9236, 16.0999, 84.2307, 99.2604, 70.5959, 51.7603, 50.4012, 92.6203, 82.0985, 69.8193, 95.4247, 77.5473, 12.0915, 46.8266, 77.8183, 71.2668, 45.8211, 15.031, 66.7607, 76.6744, 38.4482, 48.395, 78.2866, 4.6906, 19.4667, 74.9143, 8.5138, 62.1653, 70.2846, 59.5139, 64.5083, 61.6873, 99.9321, 23.476, 65.6669, 43.6496, 60.6963, 70.0741, 51.8392, 2.1613, 79.0846, 31.842, 30.3122, 64.5468, 80.4238, 59.6703, 78.8151, 37.3341, 17.0807, 4.3616, 88.6601, 70.2765, 56.9168, 20.2613, 14.1686, 5.998, 32.4589, 29.4466, 32.3024, 26.4043, 98.5576, 6.1194, 41.486, 37.9866, 87.6864, 30.7945, 85.8349, 74.1335, 62.7471, 12.7181, 85.6033, 39.5029, 80.896, 58.5655, 23.0016]    1
    Should Contain X Times    ${output}    ylut(90) = [9.1015, 41.4493, 33.1217, 17.5881, 61.7295, 53.497, 23.0508, 6.1769, 18.1974, 3.4576, 33.0948, 41.7244, 82.2768, 69.5558, 26.0059, 47.921, 97.8371, 14.212, 48.3568, 87.2718, 18.2938, 97.6663, 65.6437, 23.3094, 89.1216, 17.7987, 21.2614, 13.9578, 87.4225, 76.1962, 41.6554, 8.019, 91.3139, 38.4989, 88.1757, 92.977, 86.7484, 67.8801, 71.0754, 55.9533, 96.7166, 16.761, 21.5198, 6.0938, 67.3635, 24.0243, 73.926, 5.125, 64.2894, 51.8167, 4.0459, 76.6161, 18.3266, 79.9687, 35.4042, 93.9913, 21.2177, 72.4315, 20.5644, 60.8482, 65.4255, 21.1701, 14.5248, 62.3643, 16.1426, 57.288, 3.7898, 22.9982, 48.7506, 4.9501, 10.3984, 32.2204, 25.4646, 69.4331, 38.9477, 66.241, 32.3401, 4.5926, 40.466, 42.6498, 81.9762, 17.3365, 45.7402, 83.8477, 41.9948, 30.5056, 10.2127, 24.2315, 23.2272, 50.6822]    1
    Should Contain X Times    ${output}    zlut(90) = [64.1322, 91.9496, 56.8962, 83.0025, 51.0786, 67.5558, 53.4237, 45.795, 71.1132, 21.6937, 7.298, 28.8998, 63.8132, 93.0446, 44.6001, 76.2074, 61.0658, 54.6476, 40.6381, 54.1075, 92.312, 44.7615, 99.8655, 65.8634, 70.0536, 26.2586, 2.5431, 81.9947, 30.4397, 80.4902, 51.0074, 84.6075, 73.0077, 7.0748, 94.8996, 22.6282, 77.187, 78.5007, 46.72, 4.5606, 44.5991, 33.6768, 30.0227, 19.3958, 26.6379, 99.9207, 12.6944, 4.2396, 91.763, 83.807, 5.1941, 94.8253, 80.1405, 83.6332, 81.0413, 48.4516, 32.0128, 11.3979, 20.205, 20.7022, 62.3557, 58.8262, 12.8885, 81.0228, 55.0163, 37.5168, 66.2885, 46.7993, 58.6948, 77.027, 14.8919, 3.038, 52.7, 59.7284, 16.7577, 76.403, 74.4721, 72.7741, 12.9291, 88.8075, 37.3101, 85.2829, 27.7929, 96.2468, 75.5151, 85.5607, 89.4921, 63.0129, 79.8519, 28.9232]    1
    Should Contain X Times    ${output}    ulut(90) = [29.8469, 10.0774, 82.4123, 72.3727, 56.4051, 89.1134, 49.0665, 48.5761, 89.0119, 74.6715, 63.1997, 56.9252, 96.5292, 36.8493, 6.2564, 19.5197, 26.2824, 42.29, 18.5262, 30.352, 95.0519, 65.01, 69.4895, 32.8706, 54.6481, 7.4289, 42.3235, 38.3157, 88.7878, 55.8906, 89.7134, 12.4947, 62.8058, 33.9006, 89.1509, 94.7884, 42.854, 38.4498, 46.3445, 71.0165, 86.5892, 32.4992, 21.9342, 64.4515, 99.1563, 76.5911, 35.3934, 49.3859, 69.7214, 52.4367, 81.2376, 99.7008, 39.1503, 36.8138, 21.8613, 93.4291, 72.2616, 20.3986, 79.482, 56.9804, 63.7603, 79.2265, 14.3871, 26.4199, 62.5144, 61.0995, 64.6661, 92.858, 80.6407, 22.7011, 10.1915, 69.9967, 5.3636, 65.4472, 35.3839, 11.3506, 33.0847, 59.0305, 62.0443, 9.9214, 43.6878, 19.9543, 30.7665, 70.9138, 69.9048, 6.9724, 76.9151, 41.0922, 97.4236, 98.0835]    1
    Should Contain X Times    ${output}    vlut(90) = [28.0441, 66.2028, 42.7886, 49.1945, 48.7756, 96.2155, 87.0852, 65.1957, 9.0668, 16.4902, 92.39, 95.0336, 22.4826, 41.8453, 27.7139, 45.1545, 76.9103, 60.854, 6.0884, 67.7157, 3.6288, 24.5066, 93.516, 61.173, 45.8662, 15.2814, 99.588, 83.3636, 3.874, 92.4276, 71.203, 23.3549, 70.1452, 94.5624, 68.4973, 46.2688, 13.333, 6.232, 65.956, 99.9364, 52.1887, 67.0631, 28.8014, 59.8692, 92.1239, 20.5998, 50.8113, 27.4304, 66.6469, 29.4532, 61.584, 74.2868, 13.6657, 23.8294, 39.8276, 16.5523, 12.4079, 15.5013, 65.2082, 74.0466, 22.3757, 25.9634, 24.9143, 20.0223, 84.5605, 64.2608, 79.3655, 23.6664, 56.0853, 40.1715, 50.7561, 75.215, 47.7294, 48.758, 37.1457, 90.9588, 28.2059, 10.0773, 40.0168, 40.9718, 51.5201, 42.5227, 8.9957, 46.3285, 54.8874, 91.1657, 63.808, 70.0342, 66.2275, 0.4295]    1
    Should Contain X Times    ${output}    wlut(90) = [17.7068, 0.2415, 14.592, 43.2115, 77.2684, 95.1302, 84.7693, 63.0461, 53.2843, 27.769, 6.6732, 58.2537, 91.2777, 68.3111, 60.5872, 32.4369, 70.0215, 26.8982, 88.827, 14.8456, 33.7817, 28.803, 48.6724, 83.4158, 93.3006, 51.3494, 79.1186, 36.0734, 95.3595, 72.8627, 41.0571, 16.4152, 46.2477, 60.3591, 23.7218, 24.7688, 72.1834, 3.3363, 44.885, 36.5851, 54.5724, 1.792, 38.4945, 35.0872, 11.2808, 67.6383, 60.0546, 13.0828, 53.7359, 52.202, 82.706, 26.4587, 71.6335, 85.6881, 38.131, 87.7087, 97.9941, 59.4303, 38.6421, 74.7664, 50.7104, 34.7694, 26.2724, 89.903, 55.1797, 53.6892, 89.28, 35.689, 92.9712, 97.6745, 21.407, 69.0114, 43.5744, 42.8478, 68.3336, 78.0844, 32.3721, 8.5403, 49.1008, 9.9658, 43.0494, 5.6269, 40.892, 8.9056, 56.2587, 73.1499, 65.9498, 26.6879, 5.7624, 50.7424]    1
    Should Contain X Times    ${output}    === [ackCommand_configureLut] acknowledging a command with :    1
    Should Contain    ${output}    seqNum   :
    Should Contain    ${output}    ack      : 301
    Should Contain X Times    ${output}    error \ \ \ : 0    1
    Should Contain    ${output}    result   : Ack : OK
    Should Contain    ${output}    ack      : 303
    Should Contain    ${output}    result   : Done : OK
