*** Settings ***
Documentation    Hexapod_configureLut commander/controller tests.
Suite Setup    Log Many    ${Host}    ${subSystem}    ${component}    ${timeout}
Suite Teardown    Close All Connections
Library    SSHLibrary
Library    String
Resource    ../../Global_Vars.robot

*** Variables ***
${subSystem}    hexapod
${component}    configureLut
${timeout}    30s

*** Test Cases ***
Create Commander Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Commander    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}

Create Controller Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Controller    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}

Verify Component Commander and Controller
    [Tags]    smoke
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Commander_${component}.py
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Controller_${component}.py

Start Commander - Verify Missing Inputs Error
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain    ${output}   ERROR : Invalid or missing arguments :

Start Commander - Verify Timeout without Controller
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 96.5298 20.3518 24.9796 18.7354 69.8252 13.0928 15.6952 77.7293 37.5181 34.9592 87.985 10.7418 54.6071 70.4725 59.1797 46.0392 32.7245 75.2192 10.7107 24.844 39.8766 44.1965 36.4829 16.563 90.0926 79.0503 68.577 85.0615 81.5069 9.7153 58.0574 94.1806 5.2706 11.5886 27.6367 14.4131 96.1695 12.2452 39.6727 93.8545 41.6495 14.326 17.5305 7.5723 73.037 1.2885 22.4219 90.399 5.6995 56.6777 34.2799 60.2727 63.7934 8.0941 0.6613 50.727 87.4884 24.8869 96.896 69.5591 66.6051 16.7013 70.13 45.1494 53.1885 37.693 7.9565 91.5874 76.8784 47.7352 33.0589 49.0607 33.658 63.8289 5.235 70.7508 25.9219 69.6555 24.8 34.3613 81.6592 52.7154 7.1441 52.3179 92.9683 31.8608 95.7711 94.7034 6.8763 86.9533 14.3915 15.2803 40.2937 45.5426 70.0374 27.9366 89.2511 23.9683 89.6579 69.2466 5.3674 64.5932 71.1471 90.1235 1.7373 94.6007 96.9754 30.9926 37.8355 51.9974 32.0163 59.9338 36.8778 82.4261 94.2581 12.8287 20.3134 55.3705 62.9282 33.7884 89.003 88.4267 27.6388 10.0193 46.6168 99.1933 66.4068 82.1289 61.2465 28.1779 77.929 9.2235 7.7679 6.9368 9.2679 90.9187 33.2381 59.9968 11.1959 35.4854 38.4661 60.0536 62.2281 55.1612 38.0842 43.9266 60.499 4.9601 47.7885 12.1005 16.5949 92.2817 84.1817 77.0462 26.8019 19.2656 26.7904 24.6469 52.7251 99.2254 29.9057 43.5739 46.0309 6.6003 67.8909 34.8786 13.2489 65.0664 94.1008 69.9462 5.272 62.882 19.5292 20.8559 23.6311 29.5409 18.5982 35.6238 50.6038 60.4557 88.7717 6.8236 80.2626 49.2222 76.731 1.9336 60.1253 72.616 27.6916 74.0589 38.256 60.8554 28.7544 22.1171 47.5862 30.398 74.0233 82.2282 47.4947 90.0586 42.6155 98.2035 24.0621 52.1689 63.0885 92.3785 41.2935 11.044 43.7141 90.1066 39.9756 43.6983 10.9832 98.4132 68.8485 75.9894 3.3579 11.8857 16.6613 91.0847 57.3328 35.5397 41.9262 54.7705 32.741 5.7179 60.858 95.5618 23.9368 84.8168 81.6504 80.7832 18.3487 67.9721 80.5571 79.369 66.3151 38.6809 90.9276 12.0214 70.571 33.3364 12.8257 14.2954 60.5869 7.6942 88.6008 25.7676 62.5056 57.6481 39.7612 52.5691 61.0787 58.0038 8.4435 28.115 86.2935 38.9111 32.2623 81.1715 27.8792 16.302 26.2198 47.4572 39.7618 32.6451 90.0029 34.7339 22.464 45.846 13.5073 54.9948 42.3822 27.1434 26.9857 95.5787 69.6106 41.8086 96.06 58.1115 80.9932 73.7922 42.5699 70.4219 62.6507 25.4001 22.9948 70.6176 94.9993 39.7192 9.7035 41.9435 67.6774 79.7141 19.8863 56.1534 11.8478 11.4684 48.8538 70.629 52.0472 93.6542 49.1368 91.6495 55.9318 75.7484 74.9237 99.0993 61.833 55.3325 85.7796 25.0816 45.7235 4.816 90.6882 40.0155 94.8194 77.6139 19.734 15.282 20.7458 74.0584 91.8029 27.0271 12.2234 34.0798 47.8101 53.9041 98.6685 63.3935 69.1425 24.6193 37.1453 13.3933 71.3576 74.5802 6.7944 90.3531 89.3861 55.1447 9.6286 8.9008 46.6217 95.1774 50.7759 51.0635 29.5974 26.2518 60.9371 0.4675 7.2905 36.6337 8.7076 96.9616 48.5799 92.7446 68.1003 20.6216 18.5526 52.1946 57.746 79.9074 9.5941 63.9643 86.9555 21.8062 39.141 83.7728 29.8629 12.8497 90.414 64.5021 75.0771 25.4249 34.6349 34.2933 51.0829 17.048 55.6381 93.9492 19.8065 30.297 15.5871 72.8668 68.8106 26.9916 12.0073 29.5518 21.8121 15.5838 91.1205 31.2155 50.7126 16.5148 97.8414 18.4653 31.9006 6.9258 72.5397 22.6899 45.9307 17.4934 76.9148 5.7311 3.351 40.0958 55.0605 49.0943 65.3835 42.2365 78.8645 18.3559 86.2473 96.9447 16.1022 40.6857 67.9666 35.2279 61.604 17.1614 91.7262 64.9705 82.0914 72.9959 68.8823 89.8766 31.0669 28.1658 28.2316 25.818 29.1341 70.4576 78.3059 73.2207 65.6341 65.9271 61.9559 53.0762 60.3661 84.9645 83.4955 83.6805 11.5872 10.3368 50.6896 34.3566 47.878 36.2953 14.6773 19.7262 44.7597 14.3476 57.6657 68.1868 3.4891 13.1695 92.0166 11.0986 15.4895 15.4274 45.3731 43.7123 34.257 82.4755 4.6159 40.0316 24.83 65.4821 50.4097 52.8646 11.8392 39.1712 1.091 75.3755 77.3435 83.3711 24.2568 91.7648 56.5045 18.2517 42.6622 48.2872 99.0022 41.2721 59.8457 4.1875 40.2468 38.5111 70.2742 65.4467 79.4912 97.5146 76.3682 83.6334 1.6727 47.5894 78.7857 94.1758 20.7773 31.2879 19.623 0.0603 29.6491 6.7645 37.7287 79.1109 17.2024 37.8248 32.2216 62.6731 2.16 20.9467 89.1794 16.5421 52.0255 99.4767 43.289 80.0836 26.7748 94.2195 76.3661 57.2022 13.1328 59.2007 55.6423 12.4325 23.2437 39.1028 19.8162 30.6258 15.0842 17.9655 7.1508 39.9839 18.4623 45.387 34.0635 32.6542 34.0434 74.7026
    ${output}=    Read Until Prompt
    Log    ${output}
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( timed out :)

Start Controller
    [Tags]    functional
    Switch Connection    Controller
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Controller.
    ${input}=    Write    python ${subSystem}_Controller_${component}.py
    ${output}=    Read Until    controller ready
    Log    ${output}
    Should Contain    ${output}    ${subSystem}_${component} controller ready

Start Commander
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 96.5298 20.3518 24.9796 18.7354 69.8252 13.0928 15.6952 77.7293 37.5181 34.9592 87.985 10.7418 54.6071 70.4725 59.1797 46.0392 32.7245 75.2192 10.7107 24.844 39.8766 44.1965 36.4829 16.563 90.0926 79.0503 68.577 85.0615 81.5069 9.7153 58.0574 94.1806 5.2706 11.5886 27.6367 14.4131 96.1695 12.2452 39.6727 93.8545 41.6495 14.326 17.5305 7.5723 73.037 1.2885 22.4219 90.399 5.6995 56.6777 34.2799 60.2727 63.7934 8.0941 0.6613 50.727 87.4884 24.8869 96.896 69.5591 66.6051 16.7013 70.13 45.1494 53.1885 37.693 7.9565 91.5874 76.8784 47.7352 33.0589 49.0607 33.658 63.8289 5.235 70.7508 25.9219 69.6555 24.8 34.3613 81.6592 52.7154 7.1441 52.3179 92.9683 31.8608 95.7711 94.7034 6.8763 86.9533 14.3915 15.2803 40.2937 45.5426 70.0374 27.9366 89.2511 23.9683 89.6579 69.2466 5.3674 64.5932 71.1471 90.1235 1.7373 94.6007 96.9754 30.9926 37.8355 51.9974 32.0163 59.9338 36.8778 82.4261 94.2581 12.8287 20.3134 55.3705 62.9282 33.7884 89.003 88.4267 27.6388 10.0193 46.6168 99.1933 66.4068 82.1289 61.2465 28.1779 77.929 9.2235 7.7679 6.9368 9.2679 90.9187 33.2381 59.9968 11.1959 35.4854 38.4661 60.0536 62.2281 55.1612 38.0842 43.9266 60.499 4.9601 47.7885 12.1005 16.5949 92.2817 84.1817 77.0462 26.8019 19.2656 26.7904 24.6469 52.7251 99.2254 29.9057 43.5739 46.0309 6.6003 67.8909 34.8786 13.2489 65.0664 94.1008 69.9462 5.272 62.882 19.5292 20.8559 23.6311 29.5409 18.5982 35.6238 50.6038 60.4557 88.7717 6.8236 80.2626 49.2222 76.731 1.9336 60.1253 72.616 27.6916 74.0589 38.256 60.8554 28.7544 22.1171 47.5862 30.398 74.0233 82.2282 47.4947 90.0586 42.6155 98.2035 24.0621 52.1689 63.0885 92.3785 41.2935 11.044 43.7141 90.1066 39.9756 43.6983 10.9832 98.4132 68.8485 75.9894 3.3579 11.8857 16.6613 91.0847 57.3328 35.5397 41.9262 54.7705 32.741 5.7179 60.858 95.5618 23.9368 84.8168 81.6504 80.7832 18.3487 67.9721 80.5571 79.369 66.3151 38.6809 90.9276 12.0214 70.571 33.3364 12.8257 14.2954 60.5869 7.6942 88.6008 25.7676 62.5056 57.6481 39.7612 52.5691 61.0787 58.0038 8.4435 28.115 86.2935 38.9111 32.2623 81.1715 27.8792 16.302 26.2198 47.4572 39.7618 32.6451 90.0029 34.7339 22.464 45.846 13.5073 54.9948 42.3822 27.1434 26.9857 95.5787 69.6106 41.8086 96.06 58.1115 80.9932 73.7922 42.5699 70.4219 62.6507 25.4001 22.9948 70.6176 94.9993 39.7192 9.7035 41.9435 67.6774 79.7141 19.8863 56.1534 11.8478 11.4684 48.8538 70.629 52.0472 93.6542 49.1368 91.6495 55.9318 75.7484 74.9237 99.0993 61.833 55.3325 85.7796 25.0816 45.7235 4.816 90.6882 40.0155 94.8194 77.6139 19.734 15.282 20.7458 74.0584 91.8029 27.0271 12.2234 34.0798 47.8101 53.9041 98.6685 63.3935 69.1425 24.6193 37.1453 13.3933 71.3576 74.5802 6.7944 90.3531 89.3861 55.1447 9.6286 8.9008 46.6217 95.1774 50.7759 51.0635 29.5974 26.2518 60.9371 0.4675 7.2905 36.6337 8.7076 96.9616 48.5799 92.7446 68.1003 20.6216 18.5526 52.1946 57.746 79.9074 9.5941 63.9643 86.9555 21.8062 39.141 83.7728 29.8629 12.8497 90.414 64.5021 75.0771 25.4249 34.6349 34.2933 51.0829 17.048 55.6381 93.9492 19.8065 30.297 15.5871 72.8668 68.8106 26.9916 12.0073 29.5518 21.8121 15.5838 91.1205 31.2155 50.7126 16.5148 97.8414 18.4653 31.9006 6.9258 72.5397 22.6899 45.9307 17.4934 76.9148 5.7311 3.351 40.0958 55.0605 49.0943 65.3835 42.2365 78.8645 18.3559 86.2473 96.9447 16.1022 40.6857 67.9666 35.2279 61.604 17.1614 91.7262 64.9705 82.0914 72.9959 68.8823 89.8766 31.0669 28.1658 28.2316 25.818 29.1341 70.4576 78.3059 73.2207 65.6341 65.9271 61.9559 53.0762 60.3661 84.9645 83.4955 83.6805 11.5872 10.3368 50.6896 34.3566 47.878 36.2953 14.6773 19.7262 44.7597 14.3476 57.6657 68.1868 3.4891 13.1695 92.0166 11.0986 15.4895 15.4274 45.3731 43.7123 34.257 82.4755 4.6159 40.0316 24.83 65.4821 50.4097 52.8646 11.8392 39.1712 1.091 75.3755 77.3435 83.3711 24.2568 91.7648 56.5045 18.2517 42.6622 48.2872 99.0022 41.2721 59.8457 4.1875 40.2468 38.5111 70.2742 65.4467 79.4912 97.5146 76.3682 83.6334 1.6727 47.5894 78.7857 94.1758 20.7773 31.2879 19.623 0.0603 29.6491 6.7645 37.7287 79.1109 17.2024 37.8248 32.2216 62.6731 2.16 20.9467 89.1794 16.5421 52.0255 99.4767 43.289 80.0836 26.7748 94.2195 76.3661 57.2022 13.1328 59.2007 55.6423 12.4325 23.2437 39.1028 19.8162 30.6258 15.0842 17.9655 7.1508 39.9839 18.4623 45.387 34.0635 32.6542 34.0434 74.7026
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain X Times    ${output}    === [issueCommand_${component}] writing a command containing :    1
    Should Contain X Times    ${output}    device :    1
    Should Contain X Times    ${output}    property :    1
    Should Contain X Times    ${output}    action :    1
    Should Contain X Times    ${output}    value :    1
    Should Contain X Times    ${output}    xlut : 96.5298    1
    Should Contain X Times    ${output}    ylut : 14.3915    1
    Should Contain X Times    ${output}    zlut : 88.7717    1
    Should Contain X Times    ${output}    ulut : 13.5073    1
    Should Contain X Times    ${output}    vlut : 57.746    1
    Should Contain X Times    ${output}    wlut : 44.7597    1
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( completed ok :)

Read Controller
    [Tags]    functional
    Switch Connection    Controller
    ${output}=    Read Until    result \ \ : Done : OK
    Log    ${output}
    Should Contain X Times    ${output}    xlut(90) = [96.5298, 20.3518, 24.9796, 18.7354, 69.8252, 13.0928, 15.6952, 77.7293, 37.5181, 34.9592, 87.985, 10.7418, 54.6071, 70.4725, 59.1797, 46.0392, 32.7245, 75.2192, 10.7107, 24.844, 39.8766, 44.1965, 36.4829, 16.563, 90.0926, 79.0503, 68.577, 85.0615, 81.5069, 9.7153, 58.0574, 94.1806, 5.2706, 11.5886, 27.6367, 14.4131, 96.1695, 12.2452, 39.6727, 93.8545, 41.6495, 14.326, 17.5305, 7.5723, 73.037, 1.2885, 22.4219, 90.399, 5.6995, 56.6777, 34.2799, 60.2727, 63.7934, 8.0941, 0.6613, 50.727, 87.4884, 24.8869, 96.896, 69.5591, 66.6051, 16.7013, 70.13, 45.1494, 53.1885, 37.693, 7.9565, 91.5874, 76.8784, 47.7352, 33.0589, 49.0607, 33.658, 63.8289, 5.235, 70.7508, 25.9219, 69.6555, 24.8, 34.3613, 81.6592, 52.7154, 7.1441, 52.3179, 92.9683, 31.8608, 95.7711, 94.7034, 6.8763, 86.9533]    1
    Should Contain X Times    ${output}    ylut(90) = [14.3915, 15.2803, 40.2937, 45.5426, 70.0374, 27.9366, 89.2511, 23.9683, 89.6579, 69.2466, 5.3674, 64.5932, 71.1471, 90.1235, 1.7373, 94.6007, 96.9754, 30.9926, 37.8355, 51.9974, 32.0163, 59.9338, 36.8778, 82.4261, 94.2581, 12.8287, 20.3134, 55.3705, 62.9282, 33.7884, 89.003, 88.4267, 27.6388, 10.0193, 46.6168, 99.1933, 66.4068, 82.1289, 61.2465, 28.1779, 77.929, 9.2235, 7.7679, 6.9368, 9.2679, 90.9187, 33.2381, 59.9968, 11.1959, 35.4854, 38.4661, 60.0536, 62.2281, 55.1612, 38.0842, 43.9266, 60.499, 4.9601, 47.7885, 12.1005, 16.5949, 92.2817, 84.1817, 77.0462, 26.8019, 19.2656, 26.7904, 24.6469, 52.7251, 99.2254, 29.9057, 43.5739, 46.0309, 6.6003, 67.8909, 34.8786, 13.2489, 65.0664, 94.1008, 69.9462, 5.272, 62.882, 19.5292, 20.8559, 23.6311, 29.5409, 18.5982, 35.6238, 50.6038, 60.4557]    1
    Should Contain X Times    ${output}    zlut(90) = [88.7717, 6.8236, 80.2626, 49.2222, 76.731, 1.9336, 60.1253, 72.616, 27.6916, 74.0589, 38.256, 60.8554, 28.7544, 22.1171, 47.5862, 30.398, 74.0233, 82.2282, 47.4947, 90.0586, 42.6155, 98.2035, 24.0621, 52.1689, 63.0885, 92.3785, 41.2935, 11.044, 43.7141, 90.1066, 39.9756, 43.6983, 10.9832, 98.4132, 68.8485, 75.9894, 3.3579, 11.8857, 16.6613, 91.0847, 57.3328, 35.5397, 41.9262, 54.7705, 32.741, 5.7179, 60.858, 95.5618, 23.9368, 84.8168, 81.6504, 80.7832, 18.3487, 67.9721, 80.5571, 79.369, 66.3151, 38.6809, 90.9276, 12.0214, 70.571, 33.3364, 12.8257, 14.2954, 60.5869, 7.6942, 88.6008, 25.7676, 62.5056, 57.6481, 39.7612, 52.5691, 61.0787, 58.0038, 8.4435, 28.115, 86.2935, 38.9111, 32.2623, 81.1715, 27.8792, 16.302, 26.2198, 47.4572, 39.7618, 32.6451, 90.0029, 34.7339, 22.464, 45.846]    1
    Should Contain X Times    ${output}    ulut(90) = [13.5073, 54.9948, 42.3822, 27.1434, 26.9857, 95.5787, 69.6106, 41.8086, 96.06, 58.1115, 80.9932, 73.7922, 42.5699, 70.4219, 62.6507, 25.4001, 22.9948, 70.6176, 94.9993, 39.7192, 9.7035, 41.9435, 67.6774, 79.7141, 19.8863, 56.1534, 11.8478, 11.4684, 48.8538, 70.629, 52.0472, 93.6542, 49.1368, 91.6495, 55.9318, 75.7484, 74.9237, 99.0993, 61.833, 55.3325, 85.7796, 25.0816, 45.7235, 4.816, 90.6882, 40.0155, 94.8194, 77.6139, 19.734, 15.282, 20.7458, 74.0584, 91.8029, 27.0271, 12.2234, 34.0798, 47.8101, 53.9041, 98.6685, 63.3935, 69.1425, 24.6193, 37.1453, 13.3933, 71.3576, 74.5802, 6.7944, 90.3531, 89.3861, 55.1447, 9.6286, 8.9008, 46.6217, 95.1774, 50.7759, 51.0635, 29.5974, 26.2518, 60.9371, 0.4675, 7.2905, 36.6337, 8.7076, 96.9616, 48.5799, 92.7446, 68.1003, 20.6216, 18.5526, 52.1946]    1
    Should Contain X Times    ${output}    vlut(90) = [57.746, 79.9074, 9.5941, 63.9643, 86.9555, 21.8062, 39.141, 83.7728, 29.8629, 12.8497, 90.414, 64.5021, 75.0771, 25.4249, 34.6349, 34.2933, 51.0829, 17.048, 55.6381, 93.9492, 19.8065, 30.297, 15.5871, 72.8668, 68.8106, 26.9916, 12.0073, 29.5518, 21.8121, 15.5838, 91.1205, 31.2155, 50.7126, 16.5148, 97.8414, 18.4653, 31.9006, 6.9258, 72.5397, 22.6899, 45.9307, 17.4934, 76.9148, 5.7311, 3.351, 40.0958, 55.0605, 49.0943, 65.3835, 42.2365, 78.8645, 18.3559, 86.2473, 96.9447, 16.1022, 40.6857, 67.9666, 35.2279, 61.604, 17.1614, 91.7262, 64.9705, 82.0914, 72.9959, 68.8823, 89.8766, 31.0669, 28.1658, 28.2316, 25.818, 29.1341, 70.4576, 78.3059, 73.2207, 65.6341, 65.9271, 61.9559, 53.0762, 60.3661, 84.9645, 83.4955, 83.6805, 11.5872, 10.3368, 50.6896, 34.3566, 47.878, 36.2953, 14.6773, 19.7262]    1
    Should Contain X Times    ${output}    wlut(90) = [44.7597, 14.3476, 57.6657, 68.1868, 3.4891, 13.1695, 92.0166, 11.0986, 15.4895, 15.4274, 45.3731, 43.7123, 34.257, 82.4755, 4.6159, 40.0316, 24.83, 65.4821, 50.4097, 52.8646, 11.8392, 39.1712, 1.091, 75.3755, 77.3435, 83.3711, 24.2568, 91.7648, 56.5045, 18.2517, 42.6622, 48.2872, 99.0022, 41.2721, 59.8457, 4.1875, 40.2468, 38.5111, 70.2742, 65.4467, 79.4912, 97.5146, 76.3682, 83.6334, 1.6727, 47.5894, 78.7857, 94.1758, 20.7773, 31.2879, 19.623, 0.0603, 29.6491, 6.7645, 37.7287, 79.1109, 17.2024, 37.8248, 32.2216, 62.6731, 2.16, 20.9467, 89.1794, 16.5421, 52.0255, 99.4767, 43.289, 80.0836, 26.7748, 94.2195, 76.3661, 57.2022, 13.1328, 59.2007, 55.6423, 12.4325, 23.2437, 39.1028, 19.8162, 30.6258, 15.0842, 17.9655, 7.1508, 39.9839, 18.4623, 45.387, 34.0635, 32.6542, 34.0434, 74.7026]    1
    Should Contain X Times    ${output}    === [ackCommand_configureLut] acknowledging a command with :    1
    Should Contain    ${output}    seqNum   :
    Should Contain    ${output}    ack      : 301
    Should Contain X Times    ${output}    error \ \ \ : 0    1
    Should Contain    ${output}    result   : Ack : OK
    Should Contain    ${output}    ack      : 303
    Should Contain    ${output}    result   : Done : OK
