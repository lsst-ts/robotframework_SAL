*** Settings ***
Documentation    Hexapod_configureLut commander/controller tests.
Suite Setup    Log Many    ${Host}    ${subSystem}    ${component}    ${timeout}
Suite Teardown    Close All Connections
Library    SSHLibrary
Library    String
Resource    ../../Global_Vars.robot

*** Variables ***
${subSystem}    hexapod
${component}    configureLut
${timeout}    30s

*** Test Cases ***
Create Commander Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Commander    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}

Create Controller Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Controller    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}

Verify Component Commander and Controller
    [Tags]    smoke
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Commander_${component}.py
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Controller_${component}.py

Start Commander - Verify Missing Inputs Error
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain    ${output}   ERROR : Invalid or missing arguments :

Start Commander - Verify Timeout without Controller
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 66.2867 25.1316 23.243 77.7566 27.632 86.3803 8.739 8.0766 4.5655 59.8088 43.1513 27.0811 80.6872 68.5464 12.6084 52.1365 69.1483 44.0375 8.1527 15.0329 94.8504 93.9344 57.6233 99.1723 34.5265 7.8282 55.2666 22.7106 32.6725 69.3068 6.4024 76.3613 44.1444 90.9716 8.8054 87.7606 72.8766 68.6901 18.3544 56.1899 24.4836 55.5589 12.0274 83.876 32.6012 7.6617 87.9765 27.6657 35.8378 41.7158 17.0195 48.9863 43.3212 57.2002 20.1435 70.4793 71.4141 53.7852 45.5264 42.5521 79.2034 90.9154 45.9677 75.2217 23.9289 6.5685 33.7208 55.1195 82.1127 72.2664 10.1386 81.0942 32.4504 67.9394 38.305 29.8685 41.9714 70.9207 1.6888 51.5913 80.1127 87.9801 2.6212 18.8966 88.0285 5.6003 79.6718 73.4179 94.2981 11.4192 34.1827 86.5058 19.4973 28.1508 77.2897 44.7869 81.0943 58.252 17.1579 52.7557 42.9946 22.6479 38.8705 7.1242 53.7294 37.9054 11.6793 17.3055 55.7494 57.2997 20.8636 60.6634 79.2984 22.7711 34.2671 36.9303 22.9368 51.5359 43.5895 35.2027 11.2411 91.3377 28.4201 30.85 92.6175 45.8572 30.0435 24.872 67.5148 48.1645 58.1748 86.8334 42.4896 66.8159 75.7801 29.3282 42.3587 42.0425 50.7644 0.6654 29.2106 57.1282 1.0848 36.9555 25.077 4.3566 18.7383 13.1632 0.1199 76.9446 83.7377 0.6715 17.1917 57.3426 46.2406 41.8256 91.5121 69.615 48.1518 69.6736 46.6109 79.8536 92.9681 91.3266 90.7124 37.4036 77.1272 14.9192 50.9308 18.0887 60.2792 39.8036 15.1806 99.9782 60.1072 90.9193 59.6356 82.5058 93.8118 41.4291 89.994 34.3216 91.1587 93.6058 4.38 8.3202 29.0482 74.452 58.3267 22.9362 60.3807 3.5882 27.5061 74.3341 13.7559 98.3637 32.9294 91.4241 72.9899 53.436 96.788 4.0261 70.4028 29.8478 52.5394 42.8963 74.5497 98.662 9.7753 7.9175 73.3343 18.5899 58.217 58.9559 46.2289 41.1149 91.1711 24.5328 84.3399 44.048 39.2506 6.5849 47.9074 5.4511 86.2531 61.4828 21.0564 92.6768 13.8988 77.9952 59.5262 83.8841 38.2922 18.0364 18.4993 56.3696 92.8277 92.0765 51.0936 34.1679 73.0347 10.514 63.4051 17.9682 63.027 45.6147 21.1549 19.6126 94.1329 1.7953 0.0875 48.8743 99.7219 49.2368 94.1112 94.5362 98.087 44.4748 82.0245 66.0821 71.0324 28.0554 6.7681 8.3345 24.0641 59.4326 90.1594 95.4308 74.9198 58.4922 40.4211 30.215 24.0152 84.5699 70.0155 23.2461 10.7924 63.1791 81.0723 3.0096 53.8652 57.3227 83.673 92.0343 52.9403 84.4542 59.8345 55.3237 97.4335 35.8393 78.441 24.7105 99.7164 63.8841 61.535 61.1174 49.1656 99.6699 61.9125 72.2398 95.1505 12.109 18.6134 35.6411 84.3668 31.1665 85.4333 41.3876 61.0084 14.4282 42.7683 36.4184 57.8189 54.5892 44.8299 78.7398 6.3841 99.3554 41.7525 49.7856 30.8938 59.9856 55.7252 91.6893 91.1828 99.1076 89.8116 99.5242 50.9597 46.8829 12.004 15.2174 86.8299 68.0828 67.4376 63.7402 63.0313 69.2539 23.7985 87.4582 44.5277 26.3516 46.0592 73.0406 82.2714 21.3308 90.1 13.746 28.0427 23.7853 54.984 47.3483 72.47 60.0119 15.4397 79.9218 4.0373 79.6225 26.0281 90.2246 39.0918 57.2205 96.2034 18.8398 86.5981 47.8471 93.7008 62.4195 28.8384 25.9125 15.2112 83.4513 40.8364 86.3323 56.9543 49.3064 49.3212 79.2327 6.865 68.754 4.802 59.6165 42.8219 46.0948 76.738 52.0029 37.5469 47.0832 26.3673 47.8808 33.9541 51.8805 0.0383 96.8703 16.683 67.2882 15.8648 74.253 45.0368 41.4697 7.5526 2.273 74.6318 62.4953 40.9312 60.9418 37.1811 30.0719 16.1418 54.3469 79.7413 83.9991 7.6486 34.4318 74.3532 65.4923 53.058 25.6382 72.5412 74.0804 49.0524 68.0425 40.5862 33.009 48.0273 37.7897 73.9446 76.9291 70.2501 55.9279 96.0536 63.199 13.9983 32.4058 47.9011 44.3509 16.8022 72.4098 93.9923 60.3729 41.0329 52.81 11.5601 31.7656 84.2352 87.0953 20.3133 3.9421 88.805 47.2533 89.1739 91.4042 40.7868 6.0813 28.9376 83.0478 43.3997 0.3565 21.0398 91.2023 97.4015 20.7687 14.4765 72.3362 43.8581 35.4885 54.7863 72.2643 70.9114 11.3133 1.2464 12.8391 30.8137 39.3648 32.2182 5.3946 90.0681 87.1494 14.7637 27.0697 23.9044 38.6737 20.3866 67.9708 17.9817 56.4605 1.6831 70.5164 96.832 17.1547 78.5619 23.866 40.8661 37.9016 13.6045 13.5423 69.819 88.0266 92.2161 67.4666 68.7975 40.9915 69.6083 32.4817 48.8383 10.885 10.228 53.1656 28.1814 83.5214 0.3445 44.1593 3.599 72.8261 50.6295 78.5115 76.5097 27.6326 86.7153 97.3682 55.2862 31.2068 20.0742 24.7919 14.0822 22.3402 55.2875 92.4139 34.4204 2.032 13.8416 57.2244 66.6853 89.4034 56.4874 99.4628 23.3452 60.2076 86.4353 99.4552
    ${output}=    Read Until Prompt
    Log    ${output}
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( timed out :)

Start Controller
    [Tags]    functional
    Switch Connection    Controller
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Controller.
    ${input}=    Write    python ${subSystem}_Controller_${component}.py
    ${output}=    Read Until    controller ready
    Log    ${output}
    Should Contain    ${output}    ${subSystem}_${component} controller ready

Start Commander
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 66.2867 25.1316 23.243 77.7566 27.632 86.3803 8.739 8.0766 4.5655 59.8088 43.1513 27.0811 80.6872 68.5464 12.6084 52.1365 69.1483 44.0375 8.1527 15.0329 94.8504 93.9344 57.6233 99.1723 34.5265 7.8282 55.2666 22.7106 32.6725 69.3068 6.4024 76.3613 44.1444 90.9716 8.8054 87.7606 72.8766 68.6901 18.3544 56.1899 24.4836 55.5589 12.0274 83.876 32.6012 7.6617 87.9765 27.6657 35.8378 41.7158 17.0195 48.9863 43.3212 57.2002 20.1435 70.4793 71.4141 53.7852 45.5264 42.5521 79.2034 90.9154 45.9677 75.2217 23.9289 6.5685 33.7208 55.1195 82.1127 72.2664 10.1386 81.0942 32.4504 67.9394 38.305 29.8685 41.9714 70.9207 1.6888 51.5913 80.1127 87.9801 2.6212 18.8966 88.0285 5.6003 79.6718 73.4179 94.2981 11.4192 34.1827 86.5058 19.4973 28.1508 77.2897 44.7869 81.0943 58.252 17.1579 52.7557 42.9946 22.6479 38.8705 7.1242 53.7294 37.9054 11.6793 17.3055 55.7494 57.2997 20.8636 60.6634 79.2984 22.7711 34.2671 36.9303 22.9368 51.5359 43.5895 35.2027 11.2411 91.3377 28.4201 30.85 92.6175 45.8572 30.0435 24.872 67.5148 48.1645 58.1748 86.8334 42.4896 66.8159 75.7801 29.3282 42.3587 42.0425 50.7644 0.6654 29.2106 57.1282 1.0848 36.9555 25.077 4.3566 18.7383 13.1632 0.1199 76.9446 83.7377 0.6715 17.1917 57.3426 46.2406 41.8256 91.5121 69.615 48.1518 69.6736 46.6109 79.8536 92.9681 91.3266 90.7124 37.4036 77.1272 14.9192 50.9308 18.0887 60.2792 39.8036 15.1806 99.9782 60.1072 90.9193 59.6356 82.5058 93.8118 41.4291 89.994 34.3216 91.1587 93.6058 4.38 8.3202 29.0482 74.452 58.3267 22.9362 60.3807 3.5882 27.5061 74.3341 13.7559 98.3637 32.9294 91.4241 72.9899 53.436 96.788 4.0261 70.4028 29.8478 52.5394 42.8963 74.5497 98.662 9.7753 7.9175 73.3343 18.5899 58.217 58.9559 46.2289 41.1149 91.1711 24.5328 84.3399 44.048 39.2506 6.5849 47.9074 5.4511 86.2531 61.4828 21.0564 92.6768 13.8988 77.9952 59.5262 83.8841 38.2922 18.0364 18.4993 56.3696 92.8277 92.0765 51.0936 34.1679 73.0347 10.514 63.4051 17.9682 63.027 45.6147 21.1549 19.6126 94.1329 1.7953 0.0875 48.8743 99.7219 49.2368 94.1112 94.5362 98.087 44.4748 82.0245 66.0821 71.0324 28.0554 6.7681 8.3345 24.0641 59.4326 90.1594 95.4308 74.9198 58.4922 40.4211 30.215 24.0152 84.5699 70.0155 23.2461 10.7924 63.1791 81.0723 3.0096 53.8652 57.3227 83.673 92.0343 52.9403 84.4542 59.8345 55.3237 97.4335 35.8393 78.441 24.7105 99.7164 63.8841 61.535 61.1174 49.1656 99.6699 61.9125 72.2398 95.1505 12.109 18.6134 35.6411 84.3668 31.1665 85.4333 41.3876 61.0084 14.4282 42.7683 36.4184 57.8189 54.5892 44.8299 78.7398 6.3841 99.3554 41.7525 49.7856 30.8938 59.9856 55.7252 91.6893 91.1828 99.1076 89.8116 99.5242 50.9597 46.8829 12.004 15.2174 86.8299 68.0828 67.4376 63.7402 63.0313 69.2539 23.7985 87.4582 44.5277 26.3516 46.0592 73.0406 82.2714 21.3308 90.1 13.746 28.0427 23.7853 54.984 47.3483 72.47 60.0119 15.4397 79.9218 4.0373 79.6225 26.0281 90.2246 39.0918 57.2205 96.2034 18.8398 86.5981 47.8471 93.7008 62.4195 28.8384 25.9125 15.2112 83.4513 40.8364 86.3323 56.9543 49.3064 49.3212 79.2327 6.865 68.754 4.802 59.6165 42.8219 46.0948 76.738 52.0029 37.5469 47.0832 26.3673 47.8808 33.9541 51.8805 0.0383 96.8703 16.683 67.2882 15.8648 74.253 45.0368 41.4697 7.5526 2.273 74.6318 62.4953 40.9312 60.9418 37.1811 30.0719 16.1418 54.3469 79.7413 83.9991 7.6486 34.4318 74.3532 65.4923 53.058 25.6382 72.5412 74.0804 49.0524 68.0425 40.5862 33.009 48.0273 37.7897 73.9446 76.9291 70.2501 55.9279 96.0536 63.199 13.9983 32.4058 47.9011 44.3509 16.8022 72.4098 93.9923 60.3729 41.0329 52.81 11.5601 31.7656 84.2352 87.0953 20.3133 3.9421 88.805 47.2533 89.1739 91.4042 40.7868 6.0813 28.9376 83.0478 43.3997 0.3565 21.0398 91.2023 97.4015 20.7687 14.4765 72.3362 43.8581 35.4885 54.7863 72.2643 70.9114 11.3133 1.2464 12.8391 30.8137 39.3648 32.2182 5.3946 90.0681 87.1494 14.7637 27.0697 23.9044 38.6737 20.3866 67.9708 17.9817 56.4605 1.6831 70.5164 96.832 17.1547 78.5619 23.866 40.8661 37.9016 13.6045 13.5423 69.819 88.0266 92.2161 67.4666 68.7975 40.9915 69.6083 32.4817 48.8383 10.885 10.228 53.1656 28.1814 83.5214 0.3445 44.1593 3.599 72.8261 50.6295 78.5115 76.5097 27.6326 86.7153 97.3682 55.2862 31.2068 20.0742 24.7919 14.0822 22.3402 55.2875 92.4139 34.4204 2.032 13.8416 57.2244 66.6853 89.4034 56.4874 99.4628 23.3452 60.2076 86.4353 99.4552
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain X Times    ${output}    === [issueCommand_${component}] writing a command containing :    1
    Should Contain X Times    ${output}    device :    1
    Should Contain X Times    ${output}    property :    1
    Should Contain X Times    ${output}    action :    1
    Should Contain X Times    ${output}    value :    1
    Should Contain X Times    ${output}    xlut : 66.2867    1
    Should Contain X Times    ${output}    ylut : 34.1827    1
    Should Contain X Times    ${output}    zlut : 89.994    1
    Should Contain X Times    ${output}    ulut : 40.4211    1
    Should Contain X Times    ${output}    vlut : 39.0918    1
    Should Contain X Times    ${output}    wlut : 89.1739    1
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( completed ok :)

Read Controller
    [Tags]    functional
    Switch Connection    Controller
    ${output}=    Read Until    result \ \ : Done : OK
    Log    ${output}
    Should Contain X Times    ${output}    xlut(90) = [66.2867, 25.1316, 23.243, 77.7566, 27.632, 86.3803, 8.739, 8.0766, 4.5655, 59.8088, 43.1513, 27.0811, 80.6872, 68.5464, 12.6084, 52.1365, 69.1483, 44.0375, 8.1527, 15.0329, 94.8504, 93.9344, 57.6233, 99.1723, 34.5265, 7.8282, 55.2666, 22.7106, 32.6725, 69.3068, 6.4024, 76.3613, 44.1444, 90.9716, 8.8054, 87.7606, 72.8766, 68.6901, 18.3544, 56.1899, 24.4836, 55.5589, 12.0274, 83.876, 32.6012, 7.6617, 87.9765, 27.6657, 35.8378, 41.7158, 17.0195, 48.9863, 43.3212, 57.2002, 20.1435, 70.4793, 71.4141, 53.7852, 45.5264, 42.5521, 79.2034, 90.9154, 45.9677, 75.2217, 23.9289, 6.5685, 33.7208, 55.1195, 82.1127, 72.2664, 10.1386, 81.0942, 32.4504, 67.9394, 38.305, 29.8685, 41.9714, 70.9207, 1.6888, 51.5913, 80.1127, 87.9801, 2.6212, 18.8966, 88.0285, 5.6003, 79.6718, 73.4179, 94.2981, 11.4192]    1
    Should Contain X Times    ${output}    ylut(90) = [34.1827, 86.5058, 19.4973, 28.1508, 77.2897, 44.7869, 81.0943, 58.252, 17.1579, 52.7557, 42.9946, 22.6479, 38.8705, 7.1242, 53.7294, 37.9054, 11.6793, 17.3055, 55.7494, 57.2997, 20.8636, 60.6634, 79.2984, 22.7711, 34.2671, 36.9303, 22.9368, 51.5359, 43.5895, 35.2027, 11.2411, 91.3377, 28.4201, 30.85, 92.6175, 45.8572, 30.0435, 24.872, 67.5148, 48.1645, 58.1748, 86.8334, 42.4896, 66.8159, 75.7801, 29.3282, 42.3587, 42.0425, 50.7644, 0.6654, 29.2106, 57.1282, 1.0848, 36.9555, 25.077, 4.3566, 18.7383, 13.1632, 0.1199, 76.9446, 83.7377, 0.6715, 17.1917, 57.3426, 46.2406, 41.8256, 91.5121, 69.615, 48.1518, 69.6736, 46.6109, 79.8536, 92.9681, 91.3266, 90.7124, 37.4036, 77.1272, 14.9192, 50.9308, 18.0887, 60.2792, 39.8036, 15.1806, 99.9782, 60.1072, 90.9193, 59.6356, 82.5058, 93.8118, 41.4291]    1
    Should Contain X Times    ${output}    zlut(90) = [89.994, 34.3216, 91.1587, 93.6058, 4.38, 8.3202, 29.0482, 74.452, 58.3267, 22.9362, 60.3807, 3.5882, 27.5061, 74.3341, 13.7559, 98.3637, 32.9294, 91.4241, 72.9899, 53.436, 96.788, 4.0261, 70.4028, 29.8478, 52.5394, 42.8963, 74.5497, 98.662, 9.7753, 7.9175, 73.3343, 18.5899, 58.217, 58.9559, 46.2289, 41.1149, 91.1711, 24.5328, 84.3399, 44.048, 39.2506, 6.5849, 47.9074, 5.4511, 86.2531, 61.4828, 21.0564, 92.6768, 13.8988, 77.9952, 59.5262, 83.8841, 38.2922, 18.0364, 18.4993, 56.3696, 92.8277, 92.0765, 51.0936, 34.1679, 73.0347, 10.514, 63.4051, 17.9682, 63.027, 45.6147, 21.1549, 19.6126, 94.1329, 1.7953, 0.0875, 48.8743, 99.7219, 49.2368, 94.1112, 94.5362, 98.087, 44.4748, 82.0245, 66.0821, 71.0324, 28.0554, 6.7681, 8.3345, 24.0641, 59.4326, 90.1594, 95.4308, 74.9198, 58.4922]    1
    Should Contain X Times    ${output}    ulut(90) = [40.4211, 30.215, 24.0152, 84.5699, 70.0155, 23.2461, 10.7924, 63.1791, 81.0723, 3.0096, 53.8652, 57.3227, 83.673, 92.0343, 52.9403, 84.4542, 59.8345, 55.3237, 97.4335, 35.8393, 78.441, 24.7105, 99.7164, 63.8841, 61.535, 61.1174, 49.1656, 99.6699, 61.9125, 72.2398, 95.1505, 12.109, 18.6134, 35.6411, 84.3668, 31.1665, 85.4333, 41.3876, 61.0084, 14.4282, 42.7683, 36.4184, 57.8189, 54.5892, 44.8299, 78.7398, 6.3841, 99.3554, 41.7525, 49.7856, 30.8938, 59.9856, 55.7252, 91.6893, 91.1828, 99.1076, 89.8116, 99.5242, 50.9597, 46.8829, 12.004, 15.2174, 86.8299, 68.0828, 67.4376, 63.7402, 63.0313, 69.2539, 23.7985, 87.4582, 44.5277, 26.3516, 46.0592, 73.0406, 82.2714, 21.3308, 90.1, 13.746, 28.0427, 23.7853, 54.984, 47.3483, 72.47, 60.0119, 15.4397, 79.9218, 4.0373, 79.6225, 26.0281, 90.2246]    1
    Should Contain X Times    ${output}    vlut(90) = [39.0918, 57.2205, 96.2034, 18.8398, 86.5981, 47.8471, 93.7008, 62.4195, 28.8384, 25.9125, 15.2112, 83.4513, 40.8364, 86.3323, 56.9543, 49.3064, 49.3212, 79.2327, 6.865, 68.754, 4.802, 59.6165, 42.8219, 46.0948, 76.738, 52.0029, 37.5469, 47.0832, 26.3673, 47.8808, 33.9541, 51.8805, 0.0383, 96.8703, 16.683, 67.2882, 15.8648, 74.253, 45.0368, 41.4697, 7.5526, 2.273, 74.6318, 62.4953, 40.9312, 60.9418, 37.1811, 30.0719, 16.1418, 54.3469, 79.7413, 83.9991, 7.6486, 34.4318, 74.3532, 65.4923, 53.058, 25.6382, 72.5412, 74.0804, 49.0524, 68.0425, 40.5862, 33.009, 48.0273, 37.7897, 73.9446, 76.9291, 70.2501, 55.9279, 96.0536, 63.199, 13.9983, 32.4058, 47.9011, 44.3509, 16.8022, 72.4098, 93.9923, 60.3729, 41.0329, 52.81, 11.5601, 31.7656, 84.2352, 87.0953, 20.3133, 3.9421, 88.805, 47.2533]    1
    Should Contain X Times    ${output}    wlut(90) = [89.1739, 91.4042, 40.7868, 6.0813, 28.9376, 83.0478, 43.3997, 0.3565, 21.0398, 91.2023, 97.4015, 20.7687, 14.4765, 72.3362, 43.8581, 35.4885, 54.7863, 72.2643, 70.9114, 11.3133, 1.2464, 12.8391, 30.8137, 39.3648, 32.2182, 5.3946, 90.0681, 87.1494, 14.7637, 27.0697, 23.9044, 38.6737, 20.3866, 67.9708, 17.9817, 56.4605, 1.6831, 70.5164, 96.832, 17.1547, 78.5619, 23.866, 40.8661, 37.9016, 13.6045, 13.5423, 69.819, 88.0266, 92.2161, 67.4666, 68.7975, 40.9915, 69.6083, 32.4817, 48.8383, 10.885, 10.228, 53.1656, 28.1814, 83.5214, 0.3445, 44.1593, 3.599, 72.8261, 50.6295, 78.5115, 76.5097, 27.6326, 86.7153, 97.3682, 55.2862, 31.2068, 20.0742, 24.7919, 14.0822, 22.3402, 55.2875, 92.4139, 34.4204, 2.032, 13.8416, 57.2244, 66.6853, 89.4034, 56.4874, 99.4628, 23.3452, 60.2076, 86.4353, 99.4552]    1
    Should Contain X Times    ${output}    === [ackCommand_configureLut] acknowledging a command with :    1
    Should Contain    ${output}    seqNum   :
    Should Contain    ${output}    ack      : 301
    Should Contain X Times    ${output}    error \ \ \ : 0    1
    Should Contain    ${output}    result   : Ack : OK
    Should Contain    ${output}    ack      : 303
    Should Contain    ${output}    result   : Done : OK
