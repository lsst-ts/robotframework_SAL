*** Settings ***
Documentation    Hexapod_configureLut commander/controller tests.
Suite Setup    Log Many    ${Host}    ${subSystem}    ${component}    ${timeout}
Suite Teardown    Close All Connections
Library    SSHLibrary
Library    String
Resource    ../../Global_Vars.robot

*** Variables ***
${subSystem}    hexapod
${component}    configureLut
${timeout}    30s

*** Test Cases ***
Create Commander Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Commander    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}

Create Controller Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Controller    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}

Verify Component Commander and Controller
    [Tags]    smoke
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Commander_${component}.py
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Controller_${component}.py

Start Commander - Verify Missing Inputs Error
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain    ${output}   ERROR : Invalid or missing arguments :

Start Commander - Verify Timeout without Controller
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 65.1675 63.1276 47.3297 17.6286 6.7639 31.6325 97.4807 62.1908 39.3863 8.4463 30.7129 26.5827 24.3527 10.4178 24.2633 24.2205 46.4907 20.2021 6.0586 71.9307 51.7069 14.9304 96.028 9.5283 80.8303 64.883 51.3466 32.2006 53.0351 24.4104 41.8732 61.1638 98.2206 80.9663 92.5485 56.4541 41.6733 49.0258 65.691 27.0413 55.429 9.4145 46.5426 41.6668 96.9439 32.5948 0.5627 4.2653 65.304 33.5422 37.9005 74.9816 90.8113 49.6849 80.0248 43.2631 82.4347 84.1291 67.9785 88.9156 56.4674 20.5752 12.1537 60.7126 2.7637 95.0635 64.844 29.87 60.6434 42.067 42.6147 56.308 17.2808 62.5733 99.2663 84.6232 10.1674 88.8612 35.6711 79.2992 74.853 24.6734 67.8739 93.1461 28.9423 24.9209 53.1308 43.9537 20.2784 35.6032 19.9186 55.642 33.2747 96.4308 36.0292 25.5619 67.1925 88.7875 58.1292 77.9173 67.5276 6.6649 27.37 23.5079 32.234 40.6827 19.0994 70.9431 95.753 66.7843 32.1973 77.7815 14.6956 94.0758 50.7478 84.3561 49.1422 68.3529 54.0799 21.2836 88.7572 12.732 78.5548 4.5432 54.4063 34.0127 23.9014 57.6977 92.6569 53.8615 64.982 97.999 55.2477 38.5351 15.2588 68.961 56.1702 87.0428 26.0754 47.1473 95.5469 66.7659 16.9661 79.5528 5.5731 44.6935 72.9124 85.322 70.39 73.9306 98.1904 29.0833 54.2004 81.9086 65.7776 71.4933 79.6482 51.5863 37.6219 75.6231 51.7672 5.2495 42.2354 85.9012 64.9241 85.8531 24.2551 71.2716 79.94 40.4922 37.5649 25.4688 93.656 4.5885 77.4988 41.0152 96.7153 97.118 63.2619 73.973 11.9243 39.9045 0.68 83.6392 52.629 66.0292 95.1055 79.3688 25.7584 18.7521 19.2676 46.3443 64.2356 45.6538 31.2031 24.3881 23.5347 23.8708 36.628 22.1019 0.236 7.7509 1.6166 39.3625 31.5499 69.2853 41.1558 82.3001 54.5801 83.4473 2.3896 72.4092 71.5591 82.5389 94.6144 74.1371 66.5664 12.4053 43.0938 53.8545 34.0028 2.4276 84.5293 59.5771 43.0612 69.7401 76.92 44.9715 68.2408 83.9331 10.7018 2.1107 31.7889 21.562 34.216 86.7389 20.4972 83.5344 30.9176 44.7369 75.9077 76.6298 82.8434 34.768 37.5641 45.6857 8.9582 83.5008 36.7667 46.6559 57.1379 73.7608 40.0785 52.4182 92.3112 24.5646 3.9995 57.025 83.0123 91.3345 82.2696 84.8519 33.0654 14.5513 77.0549 29.7634 99.4213 31.5121 36.4106 58.5923 22.9559 23.8955 98.4049 84.1969 41.0944 76.9557 87.9084 68.4839 93.3351 45.5775 7.9942 15.478 12.2424 74.2439 62.8348 54.8374 0.7693 49.2614 44.8571 39.3336 5.88 62.5736 98.9008 2.2716 71.9791 97.8992 17.823 71.0343 0.4552 27.8222 58.2213 96.9255 75.1692 76.7267 81.6461 97.2187 27.9233 28.6616 31.0341 82.4436 58.9428 53.7336 69.4479 40.7081 10.9602 54.941 45.22 0.8047 41.7221 19.9299 11.4806 97.528 51.8067 59.6615 43.4748 6.4923 71.2486 92.992 47.3556 6.0778 35.5268 75.2269 99.22 47.1929 75.3509 95.6421 59.7992 94.6372 75.7675 82.2141 7.9554 9.7288 5.7693 84.9732 59.639 19.9725 5.9268 15.7617 32.4678 17.801 30.7286 31.6185 67.8076 58.059 53.1739 3.9856 28.931 95.7017 40.4229 82.6995 58.5614 39.3281 54.537 6.0895 99.8331 20.5103 30.1896 97.3477 47.1573 60.0489 30.0235 74.1116 81.7573 3.951 98.2084 35.6168 39.2782 69.2242 89.7122 81.3412 85.6596 76.3649 54.2946 34.0144 63.0706 97.7326 2.0155 93.735 20.8171 36.9971 57.5995 21.1555 76.258 14.9464 4.4779 90.8519 11.7519 19.0572 25.0849 50.068 57.247 5.8041 42.0167 71.7021 97.5157 29.4886 32.0057 18.6525 64.4547 32.6045 9.9526 69.275 97.1345 21.3321 28.9748 20.6022 26.6752 42.4531 72.8761 85.7925 53.9005 29.9877 80.5088 63.9703 25.4801 87.8512 27.5318 26.9913 2.0108 93.3017 70.065 44.046 47.3919 78.7079 96.0127 96.5653 68.9518 87.3795 81.9924 85.8869 84.2606 36.9347 25.9897 49.2532 22.5304 76.4377 67.0388 17.0031 4.6433 28.9367 67.2637 62.3289 54.0811 65.2027 70.3522 52.7647 6.5744 7.3772 27.1647 84.958 13.0931 81.7396 4.2698 59.7835 18.0218 43.7971 13.762 47.3434 44.9225 15.713 80.8729 38.9041 72.9253 15.1354 47.7203 62.529 62.9992 36.3699 33.8094 6.9118 54.8382 16.6466 38.062 50.0322 17.0863 32.1765 50.8451 91.0865 71.1829 17.8174 54.7189 18.8881 96.1545 80.7965 30.0627 51.2037 79.0966 67.5524 77.914 64.097 74.3223 6.541 66.4518 42.1671 84.4911 65.5766 85.4033 46.1681 69.2051 1.6922 19.2476 48.4875 17.8007 94.6615 33.5088 72.7567 76.5233 14.3617 64.5123 53.4981 27.355 17.3258 11.0109 55.9681 63.4233 51.6243 4.1809 88.9256 10.3581 51.2675 41.5106 43.4078 92.6508 77.8753 0.2338 80.9363 51.2182 56.5361 85.3116 67.1397
    ${output}=    Read Until Prompt
    Log    ${output}
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( timed out :)

Start Controller
    [Tags]    functional
    Switch Connection    Controller
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Controller.
    ${input}=    Write    python ${subSystem}_Controller_${component}.py
    ${output}=    Read Until    controller ready
    Log    ${output}
    Should Contain    ${output}    ${subSystem}_${component} controller ready

Start Commander
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 65.1675 63.1276 47.3297 17.6286 6.7639 31.6325 97.4807 62.1908 39.3863 8.4463 30.7129 26.5827 24.3527 10.4178 24.2633 24.2205 46.4907 20.2021 6.0586 71.9307 51.7069 14.9304 96.028 9.5283 80.8303 64.883 51.3466 32.2006 53.0351 24.4104 41.8732 61.1638 98.2206 80.9663 92.5485 56.4541 41.6733 49.0258 65.691 27.0413 55.429 9.4145 46.5426 41.6668 96.9439 32.5948 0.5627 4.2653 65.304 33.5422 37.9005 74.9816 90.8113 49.6849 80.0248 43.2631 82.4347 84.1291 67.9785 88.9156 56.4674 20.5752 12.1537 60.7126 2.7637 95.0635 64.844 29.87 60.6434 42.067 42.6147 56.308 17.2808 62.5733 99.2663 84.6232 10.1674 88.8612 35.6711 79.2992 74.853 24.6734 67.8739 93.1461 28.9423 24.9209 53.1308 43.9537 20.2784 35.6032 19.9186 55.642 33.2747 96.4308 36.0292 25.5619 67.1925 88.7875 58.1292 77.9173 67.5276 6.6649 27.37 23.5079 32.234 40.6827 19.0994 70.9431 95.753 66.7843 32.1973 77.7815 14.6956 94.0758 50.7478 84.3561 49.1422 68.3529 54.0799 21.2836 88.7572 12.732 78.5548 4.5432 54.4063 34.0127 23.9014 57.6977 92.6569 53.8615 64.982 97.999 55.2477 38.5351 15.2588 68.961 56.1702 87.0428 26.0754 47.1473 95.5469 66.7659 16.9661 79.5528 5.5731 44.6935 72.9124 85.322 70.39 73.9306 98.1904 29.0833 54.2004 81.9086 65.7776 71.4933 79.6482 51.5863 37.6219 75.6231 51.7672 5.2495 42.2354 85.9012 64.9241 85.8531 24.2551 71.2716 79.94 40.4922 37.5649 25.4688 93.656 4.5885 77.4988 41.0152 96.7153 97.118 63.2619 73.973 11.9243 39.9045 0.68 83.6392 52.629 66.0292 95.1055 79.3688 25.7584 18.7521 19.2676 46.3443 64.2356 45.6538 31.2031 24.3881 23.5347 23.8708 36.628 22.1019 0.236 7.7509 1.6166 39.3625 31.5499 69.2853 41.1558 82.3001 54.5801 83.4473 2.3896 72.4092 71.5591 82.5389 94.6144 74.1371 66.5664 12.4053 43.0938 53.8545 34.0028 2.4276 84.5293 59.5771 43.0612 69.7401 76.92 44.9715 68.2408 83.9331 10.7018 2.1107 31.7889 21.562 34.216 86.7389 20.4972 83.5344 30.9176 44.7369 75.9077 76.6298 82.8434 34.768 37.5641 45.6857 8.9582 83.5008 36.7667 46.6559 57.1379 73.7608 40.0785 52.4182 92.3112 24.5646 3.9995 57.025 83.0123 91.3345 82.2696 84.8519 33.0654 14.5513 77.0549 29.7634 99.4213 31.5121 36.4106 58.5923 22.9559 23.8955 98.4049 84.1969 41.0944 76.9557 87.9084 68.4839 93.3351 45.5775 7.9942 15.478 12.2424 74.2439 62.8348 54.8374 0.7693 49.2614 44.8571 39.3336 5.88 62.5736 98.9008 2.2716 71.9791 97.8992 17.823 71.0343 0.4552 27.8222 58.2213 96.9255 75.1692 76.7267 81.6461 97.2187 27.9233 28.6616 31.0341 82.4436 58.9428 53.7336 69.4479 40.7081 10.9602 54.941 45.22 0.8047 41.7221 19.9299 11.4806 97.528 51.8067 59.6615 43.4748 6.4923 71.2486 92.992 47.3556 6.0778 35.5268 75.2269 99.22 47.1929 75.3509 95.6421 59.7992 94.6372 75.7675 82.2141 7.9554 9.7288 5.7693 84.9732 59.639 19.9725 5.9268 15.7617 32.4678 17.801 30.7286 31.6185 67.8076 58.059 53.1739 3.9856 28.931 95.7017 40.4229 82.6995 58.5614 39.3281 54.537 6.0895 99.8331 20.5103 30.1896 97.3477 47.1573 60.0489 30.0235 74.1116 81.7573 3.951 98.2084 35.6168 39.2782 69.2242 89.7122 81.3412 85.6596 76.3649 54.2946 34.0144 63.0706 97.7326 2.0155 93.735 20.8171 36.9971 57.5995 21.1555 76.258 14.9464 4.4779 90.8519 11.7519 19.0572 25.0849 50.068 57.247 5.8041 42.0167 71.7021 97.5157 29.4886 32.0057 18.6525 64.4547 32.6045 9.9526 69.275 97.1345 21.3321 28.9748 20.6022 26.6752 42.4531 72.8761 85.7925 53.9005 29.9877 80.5088 63.9703 25.4801 87.8512 27.5318 26.9913 2.0108 93.3017 70.065 44.046 47.3919 78.7079 96.0127 96.5653 68.9518 87.3795 81.9924 85.8869 84.2606 36.9347 25.9897 49.2532 22.5304 76.4377 67.0388 17.0031 4.6433 28.9367 67.2637 62.3289 54.0811 65.2027 70.3522 52.7647 6.5744 7.3772 27.1647 84.958 13.0931 81.7396 4.2698 59.7835 18.0218 43.7971 13.762 47.3434 44.9225 15.713 80.8729 38.9041 72.9253 15.1354 47.7203 62.529 62.9992 36.3699 33.8094 6.9118 54.8382 16.6466 38.062 50.0322 17.0863 32.1765 50.8451 91.0865 71.1829 17.8174 54.7189 18.8881 96.1545 80.7965 30.0627 51.2037 79.0966 67.5524 77.914 64.097 74.3223 6.541 66.4518 42.1671 84.4911 65.5766 85.4033 46.1681 69.2051 1.6922 19.2476 48.4875 17.8007 94.6615 33.5088 72.7567 76.5233 14.3617 64.5123 53.4981 27.355 17.3258 11.0109 55.9681 63.4233 51.6243 4.1809 88.9256 10.3581 51.2675 41.5106 43.4078 92.6508 77.8753 0.2338 80.9363 51.2182 56.5361 85.3116 67.1397
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain X Times    ${output}    === [issueCommand_${component}] writing a command containing :    1
    Should Contain X Times    ${output}    device :    1
    Should Contain X Times    ${output}    property :    1
    Should Contain X Times    ${output}    action :    1
    Should Contain X Times    ${output}    value :    1
    Should Contain X Times    ${output}    xlut : 65.1675    1
    Should Contain X Times    ${output}    ylut : 19.9186    1
    Should Contain X Times    ${output}    zlut : 11.9243    1
    Should Contain X Times    ${output}    ulut : 22.9559    1
    Should Contain X Times    ${output}    vlut : 58.5614    1
    Should Contain X Times    ${output}    wlut : 67.2637    1
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( completed ok :)

Read Controller
    [Tags]    functional
    Switch Connection    Controller
    ${output}=    Read Until    result \ \ : Done : OK
    Log    ${output}
    Should Contain X Times    ${output}    xlut(90) = [65.1675, 63.1276, 47.3297, 17.6286, 6.7639, 31.6325, 97.4807, 62.1908, 39.3863, 8.4463, 30.7129, 26.5827, 24.3527, 10.4178, 24.2633, 24.2205, 46.4907, 20.2021, 6.0586, 71.9307, 51.7069, 14.9304, 96.028, 9.5283, 80.8303, 64.883, 51.3466, 32.2006, 53.0351, 24.4104, 41.8732, 61.1638, 98.2206, 80.9663, 92.5485, 56.4541, 41.6733, 49.0258, 65.691, 27.0413, 55.429, 9.4145, 46.5426, 41.6668, 96.9439, 32.5948, 0.5627, 4.2653, 65.304, 33.5422, 37.9005, 74.9816, 90.8113, 49.6849, 80.0248, 43.2631, 82.4347, 84.1291, 67.9785, 88.9156, 56.4674, 20.5752, 12.1537, 60.7126, 2.7637, 95.0635, 64.844, 29.87, 60.6434, 42.067, 42.6147, 56.308, 17.2808, 62.5733, 99.2663, 84.6232, 10.1674, 88.8612, 35.6711, 79.2992, 74.853, 24.6734, 67.8739, 93.1461, 28.9423, 24.9209, 53.1308, 43.9537, 20.2784, 35.6032]    1
    Should Contain X Times    ${output}    ylut(90) = [19.9186, 55.642, 33.2747, 96.4308, 36.0292, 25.5619, 67.1925, 88.7875, 58.1292, 77.9173, 67.5276, 6.6649, 27.37, 23.5079, 32.234, 40.6827, 19.0994, 70.9431, 95.753, 66.7843, 32.1973, 77.7815, 14.6956, 94.0758, 50.7478, 84.3561, 49.1422, 68.3529, 54.0799, 21.2836, 88.7572, 12.732, 78.5548, 4.5432, 54.4063, 34.0127, 23.9014, 57.6977, 92.6569, 53.8615, 64.982, 97.999, 55.2477, 38.5351, 15.2588, 68.961, 56.1702, 87.0428, 26.0754, 47.1473, 95.5469, 66.7659, 16.9661, 79.5528, 5.5731, 44.6935, 72.9124, 85.322, 70.39, 73.9306, 98.1904, 29.0833, 54.2004, 81.9086, 65.7776, 71.4933, 79.6482, 51.5863, 37.6219, 75.6231, 51.7672, 5.2495, 42.2354, 85.9012, 64.9241, 85.8531, 24.2551, 71.2716, 79.94, 40.4922, 37.5649, 25.4688, 93.656, 4.5885, 77.4988, 41.0152, 96.7153, 97.118, 63.2619, 73.973]    1
    Should Contain X Times    ${output}    zlut(90) = [11.9243, 39.9045, 0.68, 83.6392, 52.629, 66.0292, 95.1055, 79.3688, 25.7584, 18.7521, 19.2676, 46.3443, 64.2356, 45.6538, 31.2031, 24.3881, 23.5347, 23.8708, 36.628, 22.1019, 0.236, 7.7509, 1.6166, 39.3625, 31.5499, 69.2853, 41.1558, 82.3001, 54.5801, 83.4473, 2.3896, 72.4092, 71.5591, 82.5389, 94.6144, 74.1371, 66.5664, 12.4053, 43.0938, 53.8545, 34.0028, 2.4276, 84.5293, 59.5771, 43.0612, 69.7401, 76.92, 44.9715, 68.2408, 83.9331, 10.7018, 2.1107, 31.7889, 21.562, 34.216, 86.7389, 20.4972, 83.5344, 30.9176, 44.7369, 75.9077, 76.6298, 82.8434, 34.768, 37.5641, 45.6857, 8.9582, 83.5008, 36.7667, 46.6559, 57.1379, 73.7608, 40.0785, 52.4182, 92.3112, 24.5646, 3.9995, 57.025, 83.0123, 91.3345, 82.2696, 84.8519, 33.0654, 14.5513, 77.0549, 29.7634, 99.4213, 31.5121, 36.4106, 58.5923]    1
    Should Contain X Times    ${output}    ulut(90) = [22.9559, 23.8955, 98.4049, 84.1969, 41.0944, 76.9557, 87.9084, 68.4839, 93.3351, 45.5775, 7.9942, 15.478, 12.2424, 74.2439, 62.8348, 54.8374, 0.7693, 49.2614, 44.8571, 39.3336, 5.88, 62.5736, 98.9008, 2.2716, 71.9791, 97.8992, 17.823, 71.0343, 0.4552, 27.8222, 58.2213, 96.9255, 75.1692, 76.7267, 81.6461, 97.2187, 27.9233, 28.6616, 31.0341, 82.4436, 58.9428, 53.7336, 69.4479, 40.7081, 10.9602, 54.941, 45.22, 0.8047, 41.7221, 19.9299, 11.4806, 97.528, 51.8067, 59.6615, 43.4748, 6.4923, 71.2486, 92.992, 47.3556, 6.0778, 35.5268, 75.2269, 99.22, 47.1929, 75.3509, 95.6421, 59.7992, 94.6372, 75.7675, 82.2141, 7.9554, 9.7288, 5.7693, 84.9732, 59.639, 19.9725, 5.9268, 15.7617, 32.4678, 17.801, 30.7286, 31.6185, 67.8076, 58.059, 53.1739, 3.9856, 28.931, 95.7017, 40.4229, 82.6995]    1
    Should Contain X Times    ${output}    vlut(90) = [58.5614, 39.3281, 54.537, 6.0895, 99.8331, 20.5103, 30.1896, 97.3477, 47.1573, 60.0489, 30.0235, 74.1116, 81.7573, 3.951, 98.2084, 35.6168, 39.2782, 69.2242, 89.7122, 81.3412, 85.6596, 76.3649, 54.2946, 34.0144, 63.0706, 97.7326, 2.0155, 93.735, 20.8171, 36.9971, 57.5995, 21.1555, 76.258, 14.9464, 4.4779, 90.8519, 11.7519, 19.0572, 25.0849, 50.068, 57.247, 5.8041, 42.0167, 71.7021, 97.5157, 29.4886, 32.0057, 18.6525, 64.4547, 32.6045, 9.9526, 69.275, 97.1345, 21.3321, 28.9748, 20.6022, 26.6752, 42.4531, 72.8761, 85.7925, 53.9005, 29.9877, 80.5088, 63.9703, 25.4801, 87.8512, 27.5318, 26.9913, 2.0108, 93.3017, 70.065, 44.046, 47.3919, 78.7079, 96.0127, 96.5653, 68.9518, 87.3795, 81.9924, 85.8869, 84.2606, 36.9347, 25.9897, 49.2532, 22.5304, 76.4377, 67.0388, 17.0031, 4.6433, 28.9367]    1
    Should Contain X Times    ${output}    wlut(90) = [67.2637, 62.3289, 54.0811, 65.2027, 70.3522, 52.7647, 6.5744, 7.3772, 27.1647, 84.958, 13.0931, 81.7396, 4.2698, 59.7835, 18.0218, 43.7971, 13.762, 47.3434, 44.9225, 15.713, 80.8729, 38.9041, 72.9253, 15.1354, 47.7203, 62.529, 62.9992, 36.3699, 33.8094, 6.9118, 54.8382, 16.6466, 38.062, 50.0322, 17.0863, 32.1765, 50.8451, 91.0865, 71.1829, 17.8174, 54.7189, 18.8881, 96.1545, 80.7965, 30.0627, 51.2037, 79.0966, 67.5524, 77.914, 64.097, 74.3223, 6.541, 66.4518, 42.1671, 84.4911, 65.5766, 85.4033, 46.1681, 69.2051, 1.6922, 19.2476, 48.4875, 17.8007, 94.6615, 33.5088, 72.7567, 76.5233, 14.3617, 64.5123, 53.4981, 27.355, 17.3258, 11.0109, 55.9681, 63.4233, 51.6243, 4.1809, 88.9256, 10.3581, 51.2675, 41.5106, 43.4078, 92.6508, 77.8753, 0.2338, 80.9363, 51.2182, 56.5361, 85.3116, 67.1397]    1
    Should Contain X Times    ${output}    === [ackCommand_configureLut] acknowledging a command with :    1
    Should Contain    ${output}    seqNum   :
    Should Contain    ${output}    ack      : 301
    Should Contain X Times    ${output}    error \ \ \ : 0    1
    Should Contain    ${output}    result   : Ack : OK
    Should Contain    ${output}    ack      : 303
    Should Contain    ${output}    result   : Done : OK
