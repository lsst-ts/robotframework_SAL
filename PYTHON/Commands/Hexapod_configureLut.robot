*** Settings ***
Documentation    Hexapod_configureLut commander/controller tests.
Suite Setup    Log Many    ${Host}    ${subSystem}    ${component}    ${timeout}
Suite Teardown    Close All Connections
Library    SSHLibrary
Library    String
Resource    ../../Global_Vars.robot

*** Variables ***
${subSystem}    hexapod
${component}    configureLut
${timeout}    30s

*** Test Cases ***
Create Commander Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Commander    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}
    Directory Should Exist    ${SALWorkDir}/${subSystem}

Create Controller Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Controller    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}
    Directory Should Exist    ${SALWorkDir}/${subSystem}

Verify Component Commander and Controller
    [Tags]    smoke
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Commander_${component}.py
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Controller_${component}.py

Start Commander - Verify Missing Inputs Error
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain    ${output}   ERROR : Invalid or missing arguments :

Start Commander - Verify Timeout without Controller
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 84.579 40.2397 59.2744 64.8301 22.5341 20.1588 54.6882 73.3248 22.0334 86.7647 61.5028 88.5833 72.2453 9.4777 87.9396 84.6787 58.0563 77.1151 87.5927 88.5244 15.8625 78.9062 97.7854 24.7632 36.3489 13.0512 49.5841 74.4966 21.4768 88.4072 93.5899 18.4502 40.7274 37.4337 88.6146 36.8786 51.8618 33.4304 7.6604 22.723 88.5267 68.8715 53.8779 75.6515 65.6365 98.1157 28.4183 34.327 47.2138 40.37 95.6831 64.9143 85.7016 80.5053 87.3889 33.0796 73.8888 19.6404 90.1238 53.7008 36.4351 2.4228 56.4343 58.6958 58.9925 86.5639 32.0135 61.0548 1.1965 51.0479 5.1877 48.8914 5.2905 95.0008 72.0811 16.959 86.0236 46.1383 9.81 34.4564 72.5141 7.1087 12.3782 32.4015 94.0694 55.1603 54.8064 43.9036 19.5738 44.3154 53.9607 99.1238 91.2375 25.7523 58.0404 90.7052 26.1134 86.1655 63.1486 99.6494 4.8305 67.1332 93.0295 71.9306 51.5261 26.9825 47.0531 40.7867 57.076 42.0283 93.2827 59.646 26.4068 17.9661 83.8881 52.8556 14.0097 96.4564 54.3247 44.1099 8.4432 41.1973 8.7351 11.4808 18.3962 28.6467 65.2628 37.7384 16.7097 86.2916 5.2936 19.4378 78.0521 41.668 50.724 35.5308 5.0391 70.8235 85.7004 81.5202 7.2609 8.7325 93.4723 82.7663 68.1383 16.3576 15.152 85.0954 83.5243 69.4335 62.5383 22.0519 42.2595 71.7812 72.7658 26.4028 43.6731 42.8484 30.9261 81.9092 18.3826 76.6085 48.0172 80.4844 70.8244 53.3463 69.4335 90.7505 43.6743 59.2894 59.8339 28.4221 96.1782 57.2697 66.8806 36.692 10.6818 52.1451 85.2565 60.2169 23.6485 32.5931 90.3688 36.1843 41.7905 49.3378 69.842 25.0103 51.3021 50.829 61.8369 62.1519 42.3262 64.4187 44.2045 6.8019 88.2835 17.0509 85.8946 16.8005 53.2809 45.4299 80.6441 87.2888 29.7584 61.1165 87.156 86.4868 59.8463 98.0583 81.7132 88.865 53.3474 83.8978 81.916 15.4328 89.8358 72.4082 49.7483 61.4167 46.1453 90.9324 12.5409 37.3861 15.6554 72.8782 93.6027 10.9945 44.3886 67.3624 37.9406 68.9314 35.6955 83.3202 3.2286 28.5527 37.6066 47.6106 35.2469 83.9211 99.174 23.0123 33.5336 92.6911 18.4664 44.572 27.4144 63.2105 48.0552 60.3716 33.5021 34.887 38.6672 72.8699 71.7816 56.2916 93.9743 66.9309 28.5588 48.8237 72.6993 90.8351 21.7494 20.552 40.2611 0.8953 14.6717 56.7981 35.854 2.4764 54.8021 61.4861 94.5163 71.7538 7.2736 59.7278 24.903 39.264 27.096 2.3014 16.6711 9.2665 14.7524 74.3583 86.8529 22.844 18.7745 66.6127 94.0237 79.4369 25.2387 95.1376 39.9093 15.8112 38.1262 24.5797 39.0528 55.9814 14.5797 91.9936 87.2972 9.2278 2.0764 3.8564 49.59 14.1518 34.6796 92.9783 47.5688 72.87 18.0713 80.3007 73.9889 51.7032 65.3115 6.2285 26.8515 82.1786 9.4209 43.7601 35.4323 33.3844 90.7086 59.7582 64.6451 70.365 29.4925 56.633 11.118 13.6002 70.5724 88.6467 98.5867 50.1259 92.1402 30.7584 51.5014 37.8727 93.9383 47.6343 81.7994 93.5839 60.9711 79.5021 8.661 53.4741 20.1207 24.9643 37.2458 93.2636 75.575 51.9465 81.442 88.7292 86.2507 35.4088 28.3116 30.3396 11.7391 19.6469 64.8738 37.1134 66.4994 92.4929 81.0944 40.9795 15.6347 70.7236 12.6218 83.316 51.1221 50.333 92.4907 95.6728 83.8445 2.38 84.6939 84.58 92.1577 48.204 33.0926 23.5201 59.0299 48.9754 12.9603 46.7519 14.5634 28.9638 3.6663 6.8734 82.801 81.2559 1.8854 66.21 98.5107 21.5779 27.7907 40.2775 73.2476 51.1773 29.9613 1.8628 81.1869 55.7549 11.7029 91.7825 93.8467 64.5719 85.7675 67.1673 38.8747 81.014 76.1328 71.1891 30.9527 48.6051 33.9267 26.0481 60.3097 27.9396 41.2621 29.6598 71.3948 31.7235 31.0341 38.1439 86.0497 53.0935 68.8376 42.1736 85.6133 20.9244 1.3827 9.6825 85.9062 36.0672 18.9539 68.3497 90.7908 7.5081 46.4287 0.8954 29.339 11.7243 35.2365 61.5313 79.0446 21.1865 11.489 54.6685 12.167 97.3978 1.0862 46.39 8.803 47.1427 18.7227 18.6456 56.5236 0.3184 76.4986 89.7953 61.5339 88.303 21.8727 64.8589 25.2556 19.3073 59.5407 25.2747 4.9207 69.9883 89.2167 84.4419 30.7385 30.619 22.9621 15.7603 82.5602 26.4539 78.942 34.7706 10.5957 45.0329 87.7153 81.397 80.6401 45.9246 70.738 19.7593 29.0487 38.7363 60.8114 0.8631 60.6931 27.4643 9.4986 88.9818 30.6247 93.7958 16.5553 56.3108 12.1613 85.3352 48.3551 93.7573 27.635 81.0917 76.9662 54.094 0.568 47.751 46.4858 31.2248 35.5013 29.1914 15.2957 53.3584 25.7655 74.1502 39.763 51.7633 59.403 96.9069 95.9258 60.1146 95.5721 32.0161 32.1011 43.7262 83.9113 23.6324 84.8776 84.3852 6.4576 38.2458 91.9938 11.4861 81.7738 14.0945
    ${output}=    Read Until Prompt
    Log    ${output}
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( timed out :)

Start Controller
    [Tags]    functional
    Switch Connection    Controller
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Controller.
    ${input}=    Write    python ${subSystem}_Controller_${component}.py
    ${output}=    Read Until    controller ready
    Log    ${output}
    Should Contain    ${output}    ${subSystem}_${component} controller ready

Start Commander
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 84.579 40.2397 59.2744 64.8301 22.5341 20.1588 54.6882 73.3248 22.0334 86.7647 61.5028 88.5833 72.2453 9.4777 87.9396 84.6787 58.0563 77.1151 87.5927 88.5244 15.8625 78.9062 97.7854 24.7632 36.3489 13.0512 49.5841 74.4966 21.4768 88.4072 93.5899 18.4502 40.7274 37.4337 88.6146 36.8786 51.8618 33.4304 7.6604 22.723 88.5267 68.8715 53.8779 75.6515 65.6365 98.1157 28.4183 34.327 47.2138 40.37 95.6831 64.9143 85.7016 80.5053 87.3889 33.0796 73.8888 19.6404 90.1238 53.7008 36.4351 2.4228 56.4343 58.6958 58.9925 86.5639 32.0135 61.0548 1.1965 51.0479 5.1877 48.8914 5.2905 95.0008 72.0811 16.959 86.0236 46.1383 9.81 34.4564 72.5141 7.1087 12.3782 32.4015 94.0694 55.1603 54.8064 43.9036 19.5738 44.3154 53.9607 99.1238 91.2375 25.7523 58.0404 90.7052 26.1134 86.1655 63.1486 99.6494 4.8305 67.1332 93.0295 71.9306 51.5261 26.9825 47.0531 40.7867 57.076 42.0283 93.2827 59.646 26.4068 17.9661 83.8881 52.8556 14.0097 96.4564 54.3247 44.1099 8.4432 41.1973 8.7351 11.4808 18.3962 28.6467 65.2628 37.7384 16.7097 86.2916 5.2936 19.4378 78.0521 41.668 50.724 35.5308 5.0391 70.8235 85.7004 81.5202 7.2609 8.7325 93.4723 82.7663 68.1383 16.3576 15.152 85.0954 83.5243 69.4335 62.5383 22.0519 42.2595 71.7812 72.7658 26.4028 43.6731 42.8484 30.9261 81.9092 18.3826 76.6085 48.0172 80.4844 70.8244 53.3463 69.4335 90.7505 43.6743 59.2894 59.8339 28.4221 96.1782 57.2697 66.8806 36.692 10.6818 52.1451 85.2565 60.2169 23.6485 32.5931 90.3688 36.1843 41.7905 49.3378 69.842 25.0103 51.3021 50.829 61.8369 62.1519 42.3262 64.4187 44.2045 6.8019 88.2835 17.0509 85.8946 16.8005 53.2809 45.4299 80.6441 87.2888 29.7584 61.1165 87.156 86.4868 59.8463 98.0583 81.7132 88.865 53.3474 83.8978 81.916 15.4328 89.8358 72.4082 49.7483 61.4167 46.1453 90.9324 12.5409 37.3861 15.6554 72.8782 93.6027 10.9945 44.3886 67.3624 37.9406 68.9314 35.6955 83.3202 3.2286 28.5527 37.6066 47.6106 35.2469 83.9211 99.174 23.0123 33.5336 92.6911 18.4664 44.572 27.4144 63.2105 48.0552 60.3716 33.5021 34.887 38.6672 72.8699 71.7816 56.2916 93.9743 66.9309 28.5588 48.8237 72.6993 90.8351 21.7494 20.552 40.2611 0.8953 14.6717 56.7981 35.854 2.4764 54.8021 61.4861 94.5163 71.7538 7.2736 59.7278 24.903 39.264 27.096 2.3014 16.6711 9.2665 14.7524 74.3583 86.8529 22.844 18.7745 66.6127 94.0237 79.4369 25.2387 95.1376 39.9093 15.8112 38.1262 24.5797 39.0528 55.9814 14.5797 91.9936 87.2972 9.2278 2.0764 3.8564 49.59 14.1518 34.6796 92.9783 47.5688 72.87 18.0713 80.3007 73.9889 51.7032 65.3115 6.2285 26.8515 82.1786 9.4209 43.7601 35.4323 33.3844 90.7086 59.7582 64.6451 70.365 29.4925 56.633 11.118 13.6002 70.5724 88.6467 98.5867 50.1259 92.1402 30.7584 51.5014 37.8727 93.9383 47.6343 81.7994 93.5839 60.9711 79.5021 8.661 53.4741 20.1207 24.9643 37.2458 93.2636 75.575 51.9465 81.442 88.7292 86.2507 35.4088 28.3116 30.3396 11.7391 19.6469 64.8738 37.1134 66.4994 92.4929 81.0944 40.9795 15.6347 70.7236 12.6218 83.316 51.1221 50.333 92.4907 95.6728 83.8445 2.38 84.6939 84.58 92.1577 48.204 33.0926 23.5201 59.0299 48.9754 12.9603 46.7519 14.5634 28.9638 3.6663 6.8734 82.801 81.2559 1.8854 66.21 98.5107 21.5779 27.7907 40.2775 73.2476 51.1773 29.9613 1.8628 81.1869 55.7549 11.7029 91.7825 93.8467 64.5719 85.7675 67.1673 38.8747 81.014 76.1328 71.1891 30.9527 48.6051 33.9267 26.0481 60.3097 27.9396 41.2621 29.6598 71.3948 31.7235 31.0341 38.1439 86.0497 53.0935 68.8376 42.1736 85.6133 20.9244 1.3827 9.6825 85.9062 36.0672 18.9539 68.3497 90.7908 7.5081 46.4287 0.8954 29.339 11.7243 35.2365 61.5313 79.0446 21.1865 11.489 54.6685 12.167 97.3978 1.0862 46.39 8.803 47.1427 18.7227 18.6456 56.5236 0.3184 76.4986 89.7953 61.5339 88.303 21.8727 64.8589 25.2556 19.3073 59.5407 25.2747 4.9207 69.9883 89.2167 84.4419 30.7385 30.619 22.9621 15.7603 82.5602 26.4539 78.942 34.7706 10.5957 45.0329 87.7153 81.397 80.6401 45.9246 70.738 19.7593 29.0487 38.7363 60.8114 0.8631 60.6931 27.4643 9.4986 88.9818 30.6247 93.7958 16.5553 56.3108 12.1613 85.3352 48.3551 93.7573 27.635 81.0917 76.9662 54.094 0.568 47.751 46.4858 31.2248 35.5013 29.1914 15.2957 53.3584 25.7655 74.1502 39.763 51.7633 59.403 96.9069 95.9258 60.1146 95.5721 32.0161 32.1011 43.7262 83.9113 23.6324 84.8776 84.3852 6.4576 38.2458 91.9938 11.4861 81.7738 14.0945
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain X Times    ${output}    === [issueCommand_${component}] writing a command containing :    1
    Should Contain X Times    ${output}    device :    1
    Should Contain X Times    ${output}    property :    1
    Should Contain X Times    ${output}    action :    1
    Should Contain X Times    ${output}    value :    1
    Should Contain X Times    ${output}    xlut : 84.579    1
    Should Contain X Times    ${output}    ylut : 53.9607    1
    Should Contain X Times    ${output}    zlut : 23.6485    1
    Should Contain X Times    ${output}    ulut : 54.8021    1
    Should Contain X Times    ${output}    vlut : 64.8738    1
    Should Contain X Times    ${output}    wlut : 12.167    1
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( completed ok :)

Read Controller
    [Tags]    functional
    Switch Connection    Controller
    ${output}=    Read Until    result \ \ : Done : OK
    Log    ${output}
    Should Contain X Times    ${output}    xlut(90) = [84.579, 40.2397, 59.2744, 64.8301, 22.5341, 20.1588, 54.6882, 73.3248, 22.0334, 86.7647, 61.5028, 88.5833, 72.2453, 9.4777, 87.9396, 84.6787, 58.0563, 77.1151, 87.5927, 88.5244, 15.8625, 78.9062, 97.7854, 24.7632, 36.3489, 13.0512, 49.5841, 74.4966, 21.4768, 88.4072, 93.5899, 18.4502, 40.7274, 37.4337, 88.6146, 36.8786, 51.8618, 33.4304, 7.6604, 22.723, 88.5267, 68.8715, 53.8779, 75.6515, 65.6365, 98.1157, 28.4183, 34.327, 47.2138, 40.37, 95.6831, 64.9143, 85.7016, 80.5053, 87.3889, 33.0796, 73.8888, 19.6404, 90.1238, 53.7008, 36.4351, 2.4228, 56.4343, 58.6958, 58.9925, 86.5639, 32.0135, 61.0548, 1.1965, 51.0479, 5.1877, 48.8914, 5.2905, 95.0008, 72.0811, 16.959, 86.0236, 46.1383, 9.81, 34.4564, 72.5141, 7.1087, 12.3782, 32.4015, 94.0694, 55.1603, 54.8064, 43.9036, 19.5738, 44.3154]    1
    Should Contain X Times    ${output}    ylut(90) = [53.9607, 99.1238, 91.2375, 25.7523, 58.0404, 90.7052, 26.1134, 86.1655, 63.1486, 99.6494, 4.8305, 67.1332, 93.0295, 71.9306, 51.5261, 26.9825, 47.0531, 40.7867, 57.076, 42.0283, 93.2827, 59.646, 26.4068, 17.9661, 83.8881, 52.8556, 14.0097, 96.4564, 54.3247, 44.1099, 8.4432, 41.1973, 8.7351, 11.4808, 18.3962, 28.6467, 65.2628, 37.7384, 16.7097, 86.2916, 5.2936, 19.4378, 78.0521, 41.668, 50.724, 35.5308, 5.0391, 70.8235, 85.7004, 81.5202, 7.2609, 8.7325, 93.4723, 82.7663, 68.1383, 16.3576, 15.152, 85.0954, 83.5243, 69.4335, 62.5383, 22.0519, 42.2595, 71.7812, 72.7658, 26.4028, 43.6731, 42.8484, 30.9261, 81.9092, 18.3826, 76.6085, 48.0172, 80.4844, 70.8244, 53.3463, 69.4335, 90.7505, 43.6743, 59.2894, 59.8339, 28.4221, 96.1782, 57.2697, 66.8806, 36.692, 10.6818, 52.1451, 85.2565, 60.2169]    1
    Should Contain X Times    ${output}    zlut(90) = [23.6485, 32.5931, 90.3688, 36.1843, 41.7905, 49.3378, 69.842, 25.0103, 51.3021, 50.829, 61.8369, 62.1519, 42.3262, 64.4187, 44.2045, 6.8019, 88.2835, 17.0509, 85.8946, 16.8005, 53.2809, 45.4299, 80.6441, 87.2888, 29.7584, 61.1165, 87.156, 86.4868, 59.8463, 98.0583, 81.7132, 88.865, 53.3474, 83.8978, 81.916, 15.4328, 89.8358, 72.4082, 49.7483, 61.4167, 46.1453, 90.9324, 12.5409, 37.3861, 15.6554, 72.8782, 93.6027, 10.9945, 44.3886, 67.3624, 37.9406, 68.9314, 35.6955, 83.3202, 3.2286, 28.5527, 37.6066, 47.6106, 35.2469, 83.9211, 99.174, 23.0123, 33.5336, 92.6911, 18.4664, 44.572, 27.4144, 63.2105, 48.0552, 60.3716, 33.5021, 34.887, 38.6672, 72.8699, 71.7816, 56.2916, 93.9743, 66.9309, 28.5588, 48.8237, 72.6993, 90.8351, 21.7494, 20.552, 40.2611, 0.8953, 14.6717, 56.7981, 35.854, 2.4764]    1
    Should Contain X Times    ${output}    ulut(90) = [54.8021, 61.4861, 94.5163, 71.7538, 7.2736, 59.7278, 24.903, 39.264, 27.096, 2.3014, 16.6711, 9.2665, 14.7524, 74.3583, 86.8529, 22.844, 18.7745, 66.6127, 94.0237, 79.4369, 25.2387, 95.1376, 39.9093, 15.8112, 38.1262, 24.5797, 39.0528, 55.9814, 14.5797, 91.9936, 87.2972, 9.2278, 2.0764, 3.8564, 49.59, 14.1518, 34.6796, 92.9783, 47.5688, 72.87, 18.0713, 80.3007, 73.9889, 51.7032, 65.3115, 6.2285, 26.8515, 82.1786, 9.4209, 43.7601, 35.4323, 33.3844, 90.7086, 59.7582, 64.6451, 70.365, 29.4925, 56.633, 11.118, 13.6002, 70.5724, 88.6467, 98.5867, 50.1259, 92.1402, 30.7584, 51.5014, 37.8727, 93.9383, 47.6343, 81.7994, 93.5839, 60.9711, 79.5021, 8.661, 53.4741, 20.1207, 24.9643, 37.2458, 93.2636, 75.575, 51.9465, 81.442, 88.7292, 86.2507, 35.4088, 28.3116, 30.3396, 11.7391, 19.6469]    1
    Should Contain X Times    ${output}    vlut(90) = [64.8738, 37.1134, 66.4994, 92.4929, 81.0944, 40.9795, 15.6347, 70.7236, 12.6218, 83.316, 51.1221, 50.333, 92.4907, 95.6728, 83.8445, 2.38, 84.6939, 84.58, 92.1577, 48.204, 33.0926, 23.5201, 59.0299, 48.9754, 12.9603, 46.7519, 14.5634, 28.9638, 3.6663, 6.8734, 82.801, 81.2559, 1.8854, 66.21, 98.5107, 21.5779, 27.7907, 40.2775, 73.2476, 51.1773, 29.9613, 1.8628, 81.1869, 55.7549, 11.7029, 91.7825, 93.8467, 64.5719, 85.7675, 67.1673, 38.8747, 81.014, 76.1328, 71.1891, 30.9527, 48.6051, 33.9267, 26.0481, 60.3097, 27.9396, 41.2621, 29.6598, 71.3948, 31.7235, 31.0341, 38.1439, 86.0497, 53.0935, 68.8376, 42.1736, 85.6133, 20.9244, 1.3827, 9.6825, 85.9062, 36.0672, 18.9539, 68.3497, 90.7908, 7.5081, 46.4287, 0.8954, 29.339, 11.7243, 35.2365, 61.5313, 79.0446, 21.1865, 11.489, 54.6685]    1
    Should Contain X Times    ${output}    wlut(90) = [12.167, 97.3978, 1.0862, 46.39, 8.803, 47.1427, 18.7227, 18.6456, 56.5236, 0.3184, 76.4986, 89.7953, 61.5339, 88.303, 21.8727, 64.8589, 25.2556, 19.3073, 59.5407, 25.2747, 4.9207, 69.9883, 89.2167, 84.4419, 30.7385, 30.619, 22.9621, 15.7603, 82.5602, 26.4539, 78.942, 34.7706, 10.5957, 45.0329, 87.7153, 81.397, 80.6401, 45.9246, 70.738, 19.7593, 29.0487, 38.7363, 60.8114, 0.8631, 60.6931, 27.4643, 9.4986, 88.9818, 30.6247, 93.7958, 16.5553, 56.3108, 12.1613, 85.3352, 48.3551, 93.7573, 27.635, 81.0917, 76.9662, 54.094, 0.568, 47.751, 46.4858, 31.2248, 35.5013, 29.1914, 15.2957, 53.3584, 25.7655, 74.1502, 39.763, 51.7633, 59.403, 96.9069, 95.9258, 60.1146, 95.5721, 32.0161, 32.1011, 43.7262, 83.9113, 23.6324, 84.8776, 84.3852, 6.4576, 38.2458, 91.9938, 11.4861, 81.7738, 14.0945]    1
    Should Contain X Times    ${output}    === [ackCommand_configureLut] acknowledging a command with :    1
    Should Contain    ${output}    seqNum   :
    Should Contain    ${output}    ack      : 301
    Should Contain X Times    ${output}    error \ \ \ : 0    1
    Should Contain    ${output}    result   : Ack : OK
    Should Contain    ${output}    ack      : 303
    Should Contain    ${output}    result   : Done : OK
