*** Settings ***
Documentation    Hexapod_configureLut commander/controller tests.
Force Tags    python
Suite Setup    Log Many    ${Host}    ${subSystem}    ${component}    ${timeout}
Suite Teardown    Close All Connections
Library    SSHLibrary
Library    String
Resource    ../../Global_Vars.robot

*** Variables ***
${subSystem}    hexapod
${component}    configureLut
${timeout}    30s

*** Test Cases ***
Create Commander Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Commander    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}

Create Controller Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Controller    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}

Verify Component Commander and Controller
    [Tags]    smoke
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Commander_${component}.py
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Controller_${component}.py

Start Commander - Verify Missing Inputs Error
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain    ${output}   ERROR : Invalid or missing arguments :

Start Commander - Verify Timeout without Controller
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 0.0423 48.8779 25.5538 51.3611 54.5762 68.1192 22.3693 63.5051 74.1591 66.1569 27.424 9.9196 15.5274 87.7264 55.8598 61.9307 69.566 48.8109 31.7783 98.7791 14.0823 87.6035 28.0456 27.9922 29.9548 21.7941 9.4312 74.398 1.5336 99.5184 91.045 73.2798 62.0675 73.3906 12.832 82.343 89.4937 10.6021 7.8899 20.7053 11.5603 46.6243 77.4749 84.915 14.5969 77.589 83.4922 29.8501 95.7601 22.5334 45.6361 51.9237 23.3504 12.4519 56.6892 27.6 13.9641 52.3413 57.6306 63.211 89.1954 75.4885 57.9911 89.3903 71.4195 39.453 74.0252 51.3055 43.2652 3.4144 78.4374 68.2121 92.7365 60.6015 61.6345 27.8004 29.8851 34.4968 21.6186 36.7717 1.9407 13.8661 3.859 25.5757 52.7665 78.5489 85.6508 99.5375 17.4705 88.9452 83.899 4.5498 12.9751 98.4169 98.3673 88.9619 24.0905 87.7032 23.5612 98.6049 19.0147 29.0939 8.8177 35.5424 39.1051 88.5323 51.7897 70.0325 75.2892 12.7031 38.9183 32.291 91.0449 15.8302 75.8986 23.4443 34.074 39.9285 99.0114 45.2375 56.667 18.9032 33.9747 95.1707 90.719 1.9135 48.5732 96.0865 34.4424 7.9187 42.2472 78.0044 57.4656 63.1928 87.4795 24.1707 98.3982 32.7013 6.4277 41.4388 90.3024 85.956 6.7062 57.1223 49.6005 78.688 72.8029 47.063 16.1184 73.4732 89.0444 49.4093 94.6955 37.8874 53.8147 46.9382 39.9816 19.2039 24.6992 98.1457 70.0125 33.3301 99.1188 29.8907 18.4775 11.8898 0.3216 26.0748 26.5788 96.94 20.2606 32.9708 69.5648 32.2879 56.3125 72.537 60.8409 4.9406 13.4927 30.8456 87.8348 29.9716 71.9592 67.8343 67.1048 57.0612 40.2016 37.614 39.887 84.8379 11.1742 20.7547 41.7422 54.4549 56.6626 10.9333 49.4647 26.145 48.183 32.6345 58.1651 88.1124 65.497 51.798 45.0574 87.6058 41.1987 82.5937 6.2019 88.4054 84.0438 91.8836 76.1098 28.9988 38.8947 30.0465 41.6365 33.1777 35.8108 39.7977 67.648 29.8342 14.4708 53.5141 48.5923 22.8933 37.3656 30.9105 15.8146 44.5192 89.1437 54.8128 5.0717 96.0841 10.6668 32.8845 90.9519 82.1556 65.8748 69.3525 74.2191 58.5856 25.3305 62.2235 70.0801 83.1049 36.3925 44.8451 15.8867 44.1334 35.5911 87.2412 37.8101 81.1234 82.8572 25.7475 32.5135 61.3933 31.1209 3.5501 46.6098 35.4149 22.9031 76.3517 20.2292 19.7677 95.2196 25.1287 8.6649 55.4868 36.4886 43.0077 27.4163 19.125 93.8077 35.7127 32.8702 2.3266 90.3009 77.6826 32.2526 67.5833 43.1913 37.8559 89.1581 3.5038 60.2335 95.7203 56.6448 39.8488 80.389 28.3025 99.7838 88.8037 82.4962 36.3307 21.9061 47.6302 95.0212 52.6356 30.6746 86.5093 92.1527 95.7935 30.6293 56.0025 74.8097 29.1072 42.9722 54.014 69.5789 16.2924 62.486 50.3713 73.9993 93.3217 31.822 71.6406 76.4631 41.7658 95.1311 32.3647 86.0462 19.4593 2.8224 42.811 64.4906 73.8713 59.8084 33.3395 84.6524 69.2925 42.675 90.7487 43.0345 36.4836 83.4873 23.8957 89.121 90.7618 77.6493 6.0172 18.9192 1.5545 38.7759 34.1203 52.2035 61.6893 84.5864 15.9328 43.7803 78.5927 58.4897 95.9856 49.3243 96.9552 61.8803 17.4116 6.0502 59.376 25.2404 3.3823 50.3882 51.4773 34.067 7.5797 60.6597 13.1485 40.4544 85.8583 59.82 10.2527 84.515 74.8069 74.4231 25.9018 30.4157 11.4828 7.9189 94.195 37.7889 41.3618 13.4601 57.2899 2.1067 86.8833 23.3435 20.6711 98.9012 20.4962 36.1929 60.2317 47.0358 98.6356 9.9941 83.8116 19.2358 88.7141 99.8281 69.6631 53.8303 35.1462 20.3453 50.7822 92.5243 37.435 72.2143 46.34 95.9627 15.6399 7.7924 69.4702 16.4849 90.4887 29.3648 47.2912 98.8336 51.1432 13.7325 70.8857 8.6429 10.9515 10.1592 0.2288 48.2991 97.7095 79.6244 54.9823 6.8502 0.7038 60.8611 88.0793 65.2284 88.3627 79.8851 44.6774 85.2847 29.0718 58.9186 33.7359 80.4413 28.1683 26.6587 55.1484 75.2224 81.3966 84.8301 17.7401 64.9537 49.7546 7.736 86.364 4.7881 70.5989 93.2433 62.7218 60.2222 68.7927 19.4283 29.9946 40.4496 6.1169 6.3453 56.4884 4.2025 21.3047 18.1753 54.1954 32.2612 56.0746 29.2325 64.8989 67.2683 89.8089 25.3927 59.1137 2.5501 40.3318 97.4038 3.4773 73.4334 37.8631 62.9354 92.0485 55.5117 36.5502 81.3561 17.9812 13.7059 59.6526 73.9146 94.7289 75.0237 87.5413 47.6392 57.3845 72.95 2.5282 85.5625 8.0344 76.7163 83.8904 73.6611 27.1188 9.8104 40.7064 77.3801 23.9718 19.3379 61.8672 71.0049 78.6822 94.5011 91.1766 76.4807 44.0641 87.7382 62.8726 8.553 62.4207 72.8873 56.5605 45.8905 74.4612 83.0768 17.1503 85.0631 15.3191 77.6239 95.4536 17.2508 68.7508 43.948 94.3474 23.7913 61.2688 8.0446 87.9801 58.3047 12.1447
    ${output}=    Read Until Prompt
    Log    ${output}
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( timed out :)

Start Controller
    [Tags]    functional
    Switch Connection    Controller
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Controller.
    ${input}=    Write    python ${subSystem}_Controller_${component}.py
    ${output}=    Read Until    controller ready
    Log    ${output}
    Should Contain    ${output}    ${subSystem}_${component} controller ready

Start Commander
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 0.0423 48.8779 25.5538 51.3611 54.5762 68.1192 22.3693 63.5051 74.1591 66.1569 27.424 9.9196 15.5274 87.7264 55.8598 61.9307 69.566 48.8109 31.7783 98.7791 14.0823 87.6035 28.0456 27.9922 29.9548 21.7941 9.4312 74.398 1.5336 99.5184 91.045 73.2798 62.0675 73.3906 12.832 82.343 89.4937 10.6021 7.8899 20.7053 11.5603 46.6243 77.4749 84.915 14.5969 77.589 83.4922 29.8501 95.7601 22.5334 45.6361 51.9237 23.3504 12.4519 56.6892 27.6 13.9641 52.3413 57.6306 63.211 89.1954 75.4885 57.9911 89.3903 71.4195 39.453 74.0252 51.3055 43.2652 3.4144 78.4374 68.2121 92.7365 60.6015 61.6345 27.8004 29.8851 34.4968 21.6186 36.7717 1.9407 13.8661 3.859 25.5757 52.7665 78.5489 85.6508 99.5375 17.4705 88.9452 83.899 4.5498 12.9751 98.4169 98.3673 88.9619 24.0905 87.7032 23.5612 98.6049 19.0147 29.0939 8.8177 35.5424 39.1051 88.5323 51.7897 70.0325 75.2892 12.7031 38.9183 32.291 91.0449 15.8302 75.8986 23.4443 34.074 39.9285 99.0114 45.2375 56.667 18.9032 33.9747 95.1707 90.719 1.9135 48.5732 96.0865 34.4424 7.9187 42.2472 78.0044 57.4656 63.1928 87.4795 24.1707 98.3982 32.7013 6.4277 41.4388 90.3024 85.956 6.7062 57.1223 49.6005 78.688 72.8029 47.063 16.1184 73.4732 89.0444 49.4093 94.6955 37.8874 53.8147 46.9382 39.9816 19.2039 24.6992 98.1457 70.0125 33.3301 99.1188 29.8907 18.4775 11.8898 0.3216 26.0748 26.5788 96.94 20.2606 32.9708 69.5648 32.2879 56.3125 72.537 60.8409 4.9406 13.4927 30.8456 87.8348 29.9716 71.9592 67.8343 67.1048 57.0612 40.2016 37.614 39.887 84.8379 11.1742 20.7547 41.7422 54.4549 56.6626 10.9333 49.4647 26.145 48.183 32.6345 58.1651 88.1124 65.497 51.798 45.0574 87.6058 41.1987 82.5937 6.2019 88.4054 84.0438 91.8836 76.1098 28.9988 38.8947 30.0465 41.6365 33.1777 35.8108 39.7977 67.648 29.8342 14.4708 53.5141 48.5923 22.8933 37.3656 30.9105 15.8146 44.5192 89.1437 54.8128 5.0717 96.0841 10.6668 32.8845 90.9519 82.1556 65.8748 69.3525 74.2191 58.5856 25.3305 62.2235 70.0801 83.1049 36.3925 44.8451 15.8867 44.1334 35.5911 87.2412 37.8101 81.1234 82.8572 25.7475 32.5135 61.3933 31.1209 3.5501 46.6098 35.4149 22.9031 76.3517 20.2292 19.7677 95.2196 25.1287 8.6649 55.4868 36.4886 43.0077 27.4163 19.125 93.8077 35.7127 32.8702 2.3266 90.3009 77.6826 32.2526 67.5833 43.1913 37.8559 89.1581 3.5038 60.2335 95.7203 56.6448 39.8488 80.389 28.3025 99.7838 88.8037 82.4962 36.3307 21.9061 47.6302 95.0212 52.6356 30.6746 86.5093 92.1527 95.7935 30.6293 56.0025 74.8097 29.1072 42.9722 54.014 69.5789 16.2924 62.486 50.3713 73.9993 93.3217 31.822 71.6406 76.4631 41.7658 95.1311 32.3647 86.0462 19.4593 2.8224 42.811 64.4906 73.8713 59.8084 33.3395 84.6524 69.2925 42.675 90.7487 43.0345 36.4836 83.4873 23.8957 89.121 90.7618 77.6493 6.0172 18.9192 1.5545 38.7759 34.1203 52.2035 61.6893 84.5864 15.9328 43.7803 78.5927 58.4897 95.9856 49.3243 96.9552 61.8803 17.4116 6.0502 59.376 25.2404 3.3823 50.3882 51.4773 34.067 7.5797 60.6597 13.1485 40.4544 85.8583 59.82 10.2527 84.515 74.8069 74.4231 25.9018 30.4157 11.4828 7.9189 94.195 37.7889 41.3618 13.4601 57.2899 2.1067 86.8833 23.3435 20.6711 98.9012 20.4962 36.1929 60.2317 47.0358 98.6356 9.9941 83.8116 19.2358 88.7141 99.8281 69.6631 53.8303 35.1462 20.3453 50.7822 92.5243 37.435 72.2143 46.34 95.9627 15.6399 7.7924 69.4702 16.4849 90.4887 29.3648 47.2912 98.8336 51.1432 13.7325 70.8857 8.6429 10.9515 10.1592 0.2288 48.2991 97.7095 79.6244 54.9823 6.8502 0.7038 60.8611 88.0793 65.2284 88.3627 79.8851 44.6774 85.2847 29.0718 58.9186 33.7359 80.4413 28.1683 26.6587 55.1484 75.2224 81.3966 84.8301 17.7401 64.9537 49.7546 7.736 86.364 4.7881 70.5989 93.2433 62.7218 60.2222 68.7927 19.4283 29.9946 40.4496 6.1169 6.3453 56.4884 4.2025 21.3047 18.1753 54.1954 32.2612 56.0746 29.2325 64.8989 67.2683 89.8089 25.3927 59.1137 2.5501 40.3318 97.4038 3.4773 73.4334 37.8631 62.9354 92.0485 55.5117 36.5502 81.3561 17.9812 13.7059 59.6526 73.9146 94.7289 75.0237 87.5413 47.6392 57.3845 72.95 2.5282 85.5625 8.0344 76.7163 83.8904 73.6611 27.1188 9.8104 40.7064 77.3801 23.9718 19.3379 61.8672 71.0049 78.6822 94.5011 91.1766 76.4807 44.0641 87.7382 62.8726 8.553 62.4207 72.8873 56.5605 45.8905 74.4612 83.0768 17.1503 85.0631 15.3191 77.6239 95.4536 17.2508 68.7508 43.948 94.3474 23.7913 61.2688 8.0446 87.9801 58.3047 12.1447
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain X Times    ${output}    === [issueCommand_${component}] writing a command containing :    1
    Should Contain X Times    ${output}    device :    1
    Should Contain X Times    ${output}    property :    1
    Should Contain X Times    ${output}    action :    1
    Should Contain X Times    ${output}    value :    1
    Should Contain X Times    ${output}    xlut : 0.0423    1
    Should Contain X Times    ${output}    ylut : 83.899    1
    Should Contain X Times    ${output}    zlut : 87.8348    1
    Should Contain X Times    ${output}    ulut : 36.4886    1
    Should Contain X Times    ${output}    vlut : 25.2404    1
    Should Contain X Times    ${output}    wlut : 7.736    1
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( completed ok :)

Read Controller
    [Tags]    functional
    Switch Connection    Controller
    ${output}=    Read Until    result \ \ : Done : OK
    Log    ${output}
    Should Contain X Times    ${output}    xlut(90) = [0.0423, 48.8779, 25.5538, 51.3611, 54.5762, 68.1192, 22.3693, 63.5051, 74.1591, 66.1569, 27.424, 9.9196, 15.5274, 87.7264, 55.8598, 61.9307, 69.566, 48.8109, 31.7783, 98.7791, 14.0823, 87.6035, 28.0456, 27.9922, 29.9548, 21.7941, 9.4312, 74.398, 1.5336, 99.5184, 91.045, 73.2798, 62.0675, 73.3906, 12.832, 82.343, 89.4937, 10.6021, 7.8899, 20.7053, 11.5603, 46.6243, 77.4749, 84.915, 14.5969, 77.589, 83.4922, 29.8501, 95.7601, 22.5334, 45.6361, 51.9237, 23.3504, 12.4519, 56.6892, 27.6, 13.9641, 52.3413, 57.6306, 63.211, 89.1954, 75.4885, 57.9911, 89.3903, 71.4195, 39.453, 74.0252, 51.3055, 43.2652, 3.4144, 78.4374, 68.2121, 92.7365, 60.6015, 61.6345, 27.8004, 29.8851, 34.4968, 21.6186, 36.7717, 1.9407, 13.8661, 3.859, 25.5757, 52.7665, 78.5489, 85.6508, 99.5375, 17.4705, 88.9452]    1
    Should Contain X Times    ${output}    ylut(90) = [83.899, 4.5498, 12.9751, 98.4169, 98.3673, 88.9619, 24.0905, 87.7032, 23.5612, 98.6049, 19.0147, 29.0939, 8.8177, 35.5424, 39.1051, 88.5323, 51.7897, 70.0325, 75.2892, 12.7031, 38.9183, 32.291, 91.0449, 15.8302, 75.8986, 23.4443, 34.074, 39.9285, 99.0114, 45.2375, 56.667, 18.9032, 33.9747, 95.1707, 90.719, 1.9135, 48.5732, 96.0865, 34.4424, 7.9187, 42.2472, 78.0044, 57.4656, 63.1928, 87.4795, 24.1707, 98.3982, 32.7013, 6.4277, 41.4388, 90.3024, 85.956, 6.7062, 57.1223, 49.6005, 78.688, 72.8029, 47.063, 16.1184, 73.4732, 89.0444, 49.4093, 94.6955, 37.8874, 53.8147, 46.9382, 39.9816, 19.2039, 24.6992, 98.1457, 70.0125, 33.3301, 99.1188, 29.8907, 18.4775, 11.8898, 0.3216, 26.0748, 26.5788, 96.94, 20.2606, 32.9708, 69.5648, 32.2879, 56.3125, 72.537, 60.8409, 4.9406, 13.4927, 30.8456]    1
    Should Contain X Times    ${output}    zlut(90) = [87.8348, 29.9716, 71.9592, 67.8343, 67.1048, 57.0612, 40.2016, 37.614, 39.887, 84.8379, 11.1742, 20.7547, 41.7422, 54.4549, 56.6626, 10.9333, 49.4647, 26.145, 48.183, 32.6345, 58.1651, 88.1124, 65.497, 51.798, 45.0574, 87.6058, 41.1987, 82.5937, 6.2019, 88.4054, 84.0438, 91.8836, 76.1098, 28.9988, 38.8947, 30.0465, 41.6365, 33.1777, 35.8108, 39.7977, 67.648, 29.8342, 14.4708, 53.5141, 48.5923, 22.8933, 37.3656, 30.9105, 15.8146, 44.5192, 89.1437, 54.8128, 5.0717, 96.0841, 10.6668, 32.8845, 90.9519, 82.1556, 65.8748, 69.3525, 74.2191, 58.5856, 25.3305, 62.2235, 70.0801, 83.1049, 36.3925, 44.8451, 15.8867, 44.1334, 35.5911, 87.2412, 37.8101, 81.1234, 82.8572, 25.7475, 32.5135, 61.3933, 31.1209, 3.5501, 46.6098, 35.4149, 22.9031, 76.3517, 20.2292, 19.7677, 95.2196, 25.1287, 8.6649, 55.4868]    1
    Should Contain X Times    ${output}    ulut(90) = [36.4886, 43.0077, 27.4163, 19.125, 93.8077, 35.7127, 32.8702, 2.3266, 90.3009, 77.6826, 32.2526, 67.5833, 43.1913, 37.8559, 89.1581, 3.5038, 60.2335, 95.7203, 56.6448, 39.8488, 80.389, 28.3025, 99.7838, 88.8037, 82.4962, 36.3307, 21.9061, 47.6302, 95.0212, 52.6356, 30.6746, 86.5093, 92.1527, 95.7935, 30.6293, 56.0025, 74.8097, 29.1072, 42.9722, 54.014, 69.5789, 16.2924, 62.486, 50.3713, 73.9993, 93.3217, 31.822, 71.6406, 76.4631, 41.7658, 95.1311, 32.3647, 86.0462, 19.4593, 2.8224, 42.811, 64.4906, 73.8713, 59.8084, 33.3395, 84.6524, 69.2925, 42.675, 90.7487, 43.0345, 36.4836, 83.4873, 23.8957, 89.121, 90.7618, 77.6493, 6.0172, 18.9192, 1.5545, 38.7759, 34.1203, 52.2035, 61.6893, 84.5864, 15.9328, 43.7803, 78.5927, 58.4897, 95.9856, 49.3243, 96.9552, 61.8803, 17.4116, 6.0502, 59.376]    1
    Should Contain X Times    ${output}    vlut(90) = [25.2404, 3.3823, 50.3882, 51.4773, 34.067, 7.5797, 60.6597, 13.1485, 40.4544, 85.8583, 59.82, 10.2527, 84.515, 74.8069, 74.4231, 25.9018, 30.4157, 11.4828, 7.9189, 94.195, 37.7889, 41.3618, 13.4601, 57.2899, 2.1067, 86.8833, 23.3435, 20.6711, 98.9012, 20.4962, 36.1929, 60.2317, 47.0358, 98.6356, 9.9941, 83.8116, 19.2358, 88.7141, 99.8281, 69.6631, 53.8303, 35.1462, 20.3453, 50.7822, 92.5243, 37.435, 72.2143, 46.34, 95.9627, 15.6399, 7.7924, 69.4702, 16.4849, 90.4887, 29.3648, 47.2912, 98.8336, 51.1432, 13.7325, 70.8857, 8.6429, 10.9515, 10.1592, 0.2288, 48.2991, 97.7095, 79.6244, 54.9823, 6.8502, 0.7038, 60.8611, 88.0793, 65.2284, 88.3627, 79.8851, 44.6774, 85.2847, 29.0718, 58.9186, 33.7359, 80.4413, 28.1683, 26.6587, 55.1484, 75.2224, 81.3966, 84.8301, 17.7401, 64.9537, 49.7546]    1
    Should Contain X Times    ${output}    wlut(90) = [7.736, 86.364, 4.7881, 70.5989, 93.2433, 62.7218, 60.2222, 68.7927, 19.4283, 29.9946, 40.4496, 6.1169, 6.3453, 56.4884, 4.2025, 21.3047, 18.1753, 54.1954, 32.2612, 56.0746, 29.2325, 64.8989, 67.2683, 89.8089, 25.3927, 59.1137, 2.5501, 40.3318, 97.4038, 3.4773, 73.4334, 37.8631, 62.9354, 92.0485, 55.5117, 36.5502, 81.3561, 17.9812, 13.7059, 59.6526, 73.9146, 94.7289, 75.0237, 87.5413, 47.6392, 57.3845, 72.95, 2.5282, 85.5625, 8.0344, 76.7163, 83.8904, 73.6611, 27.1188, 9.8104, 40.7064, 77.3801, 23.9718, 19.3379, 61.8672, 71.0049, 78.6822, 94.5011, 91.1766, 76.4807, 44.0641, 87.7382, 62.8726, 8.553, 62.4207, 72.8873, 56.5605, 45.8905, 74.4612, 83.0768, 17.1503, 85.0631, 15.3191, 77.6239, 95.4536, 17.2508, 68.7508, 43.948, 94.3474, 23.7913, 61.2688, 8.0446, 87.9801, 58.3047, 12.1447]    1
    Should Contain X Times    ${output}    === [ackCommand_configureLut] acknowledging a command with :    1
    Should Contain    ${output}    seqNum   :
    Should Contain    ${output}    ack      : 301
    Should Contain X Times    ${output}    error \ \ \ : 0    1
    Should Contain    ${output}    result   : Ack : OK
    Should Contain    ${output}    ack      : 303
    Should Contain    ${output}    result   : Done : OK
