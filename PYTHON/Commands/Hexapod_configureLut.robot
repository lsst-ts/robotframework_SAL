*** Settings ***
Documentation    Hexapod_configureLut commander/controller tests.
Force Tags    python
Suite Setup    Log Many    ${Host}    ${subSystem}    ${component}    ${timeout}
Suite Teardown    Close All Connections
Library    SSHLibrary
Library    String
Resource    ../../Global_Vars.robot

*** Variables ***
${subSystem}    hexapod
${component}    configureLut
${timeout}    30s

*** Test Cases ***
Create Commander Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Commander    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}

Create Controller Session
    [Documentation]    Connect to the SAL host.
    [Tags]    smoke
    Comment    Connect to host.
    Open Connection    host=${Host}    alias=Controller    timeout=${timeout}    prompt=${Prompt}
    Comment    Login.
    Log    ${ContInt}
    Login With Public Key    ${UserName}    keyfile=${KeyFile}    password=${PassWord}
    Directory Should Exist    ${SALInstall}
    Directory Should Exist    ${SALHome}

Verify Component Commander and Controller
    [Tags]    smoke
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Commander_${component}.py
    File Should Exist    ${SALWorkDir}/${subSystem}/python/${subSystem}_Controller_${component}.py

Start Commander - Verify Missing Inputs Error
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain    ${output}   ERROR : Invalid or missing arguments :

Start Commander - Verify Timeout without Controller
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 47.6879 50.3719 98.4909 75.3308 26.6868 39.0643 17.43 72.3082 86.095 78.0194 40.3707 85.4317 38.5726 34.3298 71.5664 99.0947 14.0025 28.1035 23.793 46.5245 18.7469 91.8977 18.6839 46.58 37.1371 76.0423 56.3239 67.2705 74.4809 16.3183 73.2264 69.9582 53.5023 32.6658 44.7006 71.1767 82.1057 40.9514 30.5763 23.0801 87.0137 83.7875 71.3406 87.369 21.1903 39.6109 66.9827 27.6031 87.4306 78.0514 85.0431 14.4829 28.709 18.1677 32.8716 69.518 27.3549 87.9966 81.1906 33.5973 63.9986 85.8288 92.9083 34.5738 82.9556 49.0413 40.2676 33.818 71.009 90.6337 14.3772 37.9796 63.7054 41.7224 53.1411 81.6681 25.3031 20.7756 47.4218 32.1279 89.5913 96.2497 55.6453 50.5764 83.6386 55.3311 19.9444 54.0157 9.9447 15.9428 28.7807 58.3499 53.4482 43.2068 56.8029 1.024 87.8498 19.3657 3.1848 42.5262 34.3062 91.4577 71.0491 20.3899 47.4137 43.5296 54.094 27.2425 54.057 31.8781 21.1337 33.6637 0.4791 60.9606 10.3831 52.1479 85.5942 1.9825 78.1098 42.9216 25.354 79.723 75.3469 55.934 1.5684 60.605 53.4454 1.9916 77.7363 86.0311 55.5819 5.7703 82.2142 37.992 25.7995 38.0401 19.1538 35.0616 79.5611 36.0969 56.9721 48.8605 40.5018 7.4904 45.2898 28.8826 89.4216 88.2754 44.4116 83.6532 17.8708 62.9153 68.2942 11.9241 53.0894 36.2218 11.0227 97.4275 64.4243 86.3132 87.2272 47.9401 3.8308 38.9595 50.413 5.4895 69.3194 62.9322 27.2058 97.3943 15.8106 13.5174 63.0182 83.5526 18.9289 39.5909 74.062 86.1135 51.2843 69.0594 67.1446 89.8417 44.7134 90.831 34.5172 92.8847 11.6746 7.6685 59.8035 35.9092 10.5624 13.9207 62.9735 90.0075 62.1689 69.5008 11.5029 98.3586 65.1089 63.7008 30.0848 43.6843 94.7815 9.2933 14.0589 37.9485 75.8844 12.9896 25.5099 44.0802 35.4588 47.2718 64.16 3.6941 16.0118 20.7399 63.66 24.401 76.1718 96.3712 54.3999 48.6334 40.202 23.543 52.4717 89.7816 31.6834 44.1832 57.7029 28.4721 72.5959 13.182 55.6659 98.2667 44.5906 62.8278 68.3072 35.0634 8.1105 63.8804 56.1393 23.7419 20.8054 83.3655 83.8865 44.0361 99.901 69.6637 0.1577 56.4419 91.4131 75.9988 96.9314 86.8052 7.5513 15.1133 64.4553 39.3427 40.3693 63.0579 98.8946 65.2038 32.1217 50.8056 2.5195 92.9904 5.2967 88.8056 7.409 88.6291 80.0857 89.5691 86.3128 74.5238 98.4139 74.0522 97.3861 99.9379 10.225 69.8425 81.2394 12.0827 72.1272 21.6247 62.3103 16.0102 25.9755 80.058 85.1145 29.7215 1.4669 96.8194 26.1493 65.1851 71.0677 71.4809 78.8824 83.6438 49.7629 90.036 62.6277 22.5471 89.1298 99.7583 41.3108 7.4753 78.4924 68.1084 5.1681 1.8957 96.6262 85.8078 4.7768 48.1854 81.8852 31.4465 59.0335 45.9493 48.8475 20.5806 73.6692 18.9444 28.0226 46.4782 5.6909 83.1178 29.4462 76.3636 24.6 5.508 81.3036 71.0173 15.3183 71.2048 72.0044 45.6094 50.1561 12.4714 24.68 10.9261 1.672 48.633 66.6481 8.0328 95.0485 33.9445 98.4662 81.8117 32.106 41.0119 6.9597 77.3366 33.6098 71.3818 33.77 33.4634 29.5207 84.4376 12.2638 96.5845 18.4706 98.7408 27.1176 63.5617 94.4944 66.8653 60.5515 17.0796 80.8906 28.4821 10.096 63.7098 89.6776 2.9103 34.6424 88.4179 7.7273 54.1571 47.5608 63.2045 19.2586 9.9515 54.0027 90.186 37.4657 75.8312 51.4977 84.7876 16.0211 81.8542 92.2476 45.1754 99.3162 99.7197 95.9394 92.7122 94.9023 5.6079 91.6369 49.3059 85.0393 33.8534 72.6144 99.8445 85.8444 82.862 64.8461 32.3464 35.2873 7.1554 31.153 1.6506 27.6036 86.0438 98.7498 73.2371 23.8666 35.8687 31.6193 44.5575 37.034 89.8864 19.4928 27.195 32.0666 87.1229 70.699 40.425 57.1147 30.6694 57.5434 75.4014 98.5527 21.435 99.65 45.6484 4.9788 91.9415 98.0225 24.5525 97.55 64.3383 16.9784 20.4712 88.1071 50.441 18.2745 54.0028 56.7343 53.0914 96.4882 39.8047 55.275 19.9188 32.4489 20.0234 66.0736 53.9824 21.592 26.0583 52.683 1.4446 23.4005 65.2033 5.2343 94.7837 50.0618 80.1203 2.6496 26.817 39.7284 59.2003 83.0785 65.5468 63.6052 82.6849 80.9369 42.5444 82.0659 76.4068 7.1141 60.6007 91.1444 14.701 65.1369 60.7228 97.5522 8.2271 5.103 18.3386 26.1137 38.9197 52.7062 77.104 88.762 98.5758 6.0055 12.2751 51.3576 13.9762 70.7019 80.9097 49.5919 85.1844 96.6626 89.4109 47.5256 27.8781 79.4011 24.1857 65.2843 28.677 8.073 77.384 28.8662 27.5085 27.3302 76.4902 39.1842 37.0493 83.1914 11.8118 2.7501 64.0567 90.7318 30.1634 40.9663 5.2089 21.609 89.1704 47.1793 35.8594 16.8447 41.0273 72.7379 8.1543 45.251 53.851 61.7209 33.5566
    ${output}=    Read Until Prompt
    Log    ${output}
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( timed out :)

Start Controller
    [Tags]    functional
    Switch Connection    Controller
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Controller.
    ${input}=    Write    python ${subSystem}_Controller_${component}.py
    ${output}=    Read Until    controller ready
    Log    ${output}
    Should Contain    ${output}    ${subSystem}_${component} controller ready

Start Commander
    [Tags]    functional
    Switch Connection    Commander
    Comment    Move to working directory.
    Write    cd ${SALWorkDir}/${subSystem}/python
    Comment    Start Commander.
    ${input}=    Write    python ${subSystem}_Commander_${component}.py 47.6879 50.3719 98.4909 75.3308 26.6868 39.0643 17.43 72.3082 86.095 78.0194 40.3707 85.4317 38.5726 34.3298 71.5664 99.0947 14.0025 28.1035 23.793 46.5245 18.7469 91.8977 18.6839 46.58 37.1371 76.0423 56.3239 67.2705 74.4809 16.3183 73.2264 69.9582 53.5023 32.6658 44.7006 71.1767 82.1057 40.9514 30.5763 23.0801 87.0137 83.7875 71.3406 87.369 21.1903 39.6109 66.9827 27.6031 87.4306 78.0514 85.0431 14.4829 28.709 18.1677 32.8716 69.518 27.3549 87.9966 81.1906 33.5973 63.9986 85.8288 92.9083 34.5738 82.9556 49.0413 40.2676 33.818 71.009 90.6337 14.3772 37.9796 63.7054 41.7224 53.1411 81.6681 25.3031 20.7756 47.4218 32.1279 89.5913 96.2497 55.6453 50.5764 83.6386 55.3311 19.9444 54.0157 9.9447 15.9428 28.7807 58.3499 53.4482 43.2068 56.8029 1.024 87.8498 19.3657 3.1848 42.5262 34.3062 91.4577 71.0491 20.3899 47.4137 43.5296 54.094 27.2425 54.057 31.8781 21.1337 33.6637 0.4791 60.9606 10.3831 52.1479 85.5942 1.9825 78.1098 42.9216 25.354 79.723 75.3469 55.934 1.5684 60.605 53.4454 1.9916 77.7363 86.0311 55.5819 5.7703 82.2142 37.992 25.7995 38.0401 19.1538 35.0616 79.5611 36.0969 56.9721 48.8605 40.5018 7.4904 45.2898 28.8826 89.4216 88.2754 44.4116 83.6532 17.8708 62.9153 68.2942 11.9241 53.0894 36.2218 11.0227 97.4275 64.4243 86.3132 87.2272 47.9401 3.8308 38.9595 50.413 5.4895 69.3194 62.9322 27.2058 97.3943 15.8106 13.5174 63.0182 83.5526 18.9289 39.5909 74.062 86.1135 51.2843 69.0594 67.1446 89.8417 44.7134 90.831 34.5172 92.8847 11.6746 7.6685 59.8035 35.9092 10.5624 13.9207 62.9735 90.0075 62.1689 69.5008 11.5029 98.3586 65.1089 63.7008 30.0848 43.6843 94.7815 9.2933 14.0589 37.9485 75.8844 12.9896 25.5099 44.0802 35.4588 47.2718 64.16 3.6941 16.0118 20.7399 63.66 24.401 76.1718 96.3712 54.3999 48.6334 40.202 23.543 52.4717 89.7816 31.6834 44.1832 57.7029 28.4721 72.5959 13.182 55.6659 98.2667 44.5906 62.8278 68.3072 35.0634 8.1105 63.8804 56.1393 23.7419 20.8054 83.3655 83.8865 44.0361 99.901 69.6637 0.1577 56.4419 91.4131 75.9988 96.9314 86.8052 7.5513 15.1133 64.4553 39.3427 40.3693 63.0579 98.8946 65.2038 32.1217 50.8056 2.5195 92.9904 5.2967 88.8056 7.409 88.6291 80.0857 89.5691 86.3128 74.5238 98.4139 74.0522 97.3861 99.9379 10.225 69.8425 81.2394 12.0827 72.1272 21.6247 62.3103 16.0102 25.9755 80.058 85.1145 29.7215 1.4669 96.8194 26.1493 65.1851 71.0677 71.4809 78.8824 83.6438 49.7629 90.036 62.6277 22.5471 89.1298 99.7583 41.3108 7.4753 78.4924 68.1084 5.1681 1.8957 96.6262 85.8078 4.7768 48.1854 81.8852 31.4465 59.0335 45.9493 48.8475 20.5806 73.6692 18.9444 28.0226 46.4782 5.6909 83.1178 29.4462 76.3636 24.6 5.508 81.3036 71.0173 15.3183 71.2048 72.0044 45.6094 50.1561 12.4714 24.68 10.9261 1.672 48.633 66.6481 8.0328 95.0485 33.9445 98.4662 81.8117 32.106 41.0119 6.9597 77.3366 33.6098 71.3818 33.77 33.4634 29.5207 84.4376 12.2638 96.5845 18.4706 98.7408 27.1176 63.5617 94.4944 66.8653 60.5515 17.0796 80.8906 28.4821 10.096 63.7098 89.6776 2.9103 34.6424 88.4179 7.7273 54.1571 47.5608 63.2045 19.2586 9.9515 54.0027 90.186 37.4657 75.8312 51.4977 84.7876 16.0211 81.8542 92.2476 45.1754 99.3162 99.7197 95.9394 92.7122 94.9023 5.6079 91.6369 49.3059 85.0393 33.8534 72.6144 99.8445 85.8444 82.862 64.8461 32.3464 35.2873 7.1554 31.153 1.6506 27.6036 86.0438 98.7498 73.2371 23.8666 35.8687 31.6193 44.5575 37.034 89.8864 19.4928 27.195 32.0666 87.1229 70.699 40.425 57.1147 30.6694 57.5434 75.4014 98.5527 21.435 99.65 45.6484 4.9788 91.9415 98.0225 24.5525 97.55 64.3383 16.9784 20.4712 88.1071 50.441 18.2745 54.0028 56.7343 53.0914 96.4882 39.8047 55.275 19.9188 32.4489 20.0234 66.0736 53.9824 21.592 26.0583 52.683 1.4446 23.4005 65.2033 5.2343 94.7837 50.0618 80.1203 2.6496 26.817 39.7284 59.2003 83.0785 65.5468 63.6052 82.6849 80.9369 42.5444 82.0659 76.4068 7.1141 60.6007 91.1444 14.701 65.1369 60.7228 97.5522 8.2271 5.103 18.3386 26.1137 38.9197 52.7062 77.104 88.762 98.5758 6.0055 12.2751 51.3576 13.9762 70.7019 80.9097 49.5919 85.1844 96.6626 89.4109 47.5256 27.8781 79.4011 24.1857 65.2843 28.677 8.073 77.384 28.8662 27.5085 27.3302 76.4902 39.1842 37.0493 83.1914 11.8118 2.7501 64.0567 90.7318 30.1634 40.9663 5.2089 21.609 89.1704 47.1793 35.8594 16.8447 41.0273 72.7379 8.1543 45.251 53.851 61.7209 33.5566
    ${output}=    Read Until Prompt
    Log    ${output}
    Should Contain X Times    ${output}    === [issueCommand_${component}] writing a command containing :    1
    Should Contain X Times    ${output}    device :    1
    Should Contain X Times    ${output}    property :    1
    Should Contain X Times    ${output}    action :    1
    Should Contain X Times    ${output}    value :    1
    Should Contain X Times    ${output}    xlut : 47.6879    1
    Should Contain X Times    ${output}    ylut : 28.7807    1
    Should Contain X Times    ${output}    zlut : 67.1446    1
    Should Contain X Times    ${output}    ulut : 80.0857    1
    Should Contain X Times    ${output}    vlut : 18.4706    1
    Should Contain X Times    ${output}    wlut : 96.4882    1
    ${CmdComplete}=    Get Line    ${output}    -2
    Should Match Regexp    ${CmdComplete}    (=== \\[waitForCompletion_${component}\\] command )[0-9]+( completed ok :)

Read Controller
    [Tags]    functional
    Switch Connection    Controller
    ${output}=    Read Until    result \ \ : Done : OK
    Log    ${output}
    Should Contain X Times    ${output}    xlut(90) = [47.6879, 50.3719, 98.4909, 75.3308, 26.6868, 39.0643, 17.43, 72.3082, 86.095, 78.0194, 40.3707, 85.4317, 38.5726, 34.3298, 71.5664, 99.0947, 14.0025, 28.1035, 23.793, 46.5245, 18.7469, 91.8977, 18.6839, 46.58, 37.1371, 76.0423, 56.3239, 67.2705, 74.4809, 16.3183, 73.2264, 69.9582, 53.5023, 32.6658, 44.7006, 71.1767, 82.1057, 40.9514, 30.5763, 23.0801, 87.0137, 83.7875, 71.3406, 87.369, 21.1903, 39.6109, 66.9827, 27.6031, 87.4306, 78.0514, 85.0431, 14.4829, 28.709, 18.1677, 32.8716, 69.518, 27.3549, 87.9966, 81.1906, 33.5973, 63.9986, 85.8288, 92.9083, 34.5738, 82.9556, 49.0413, 40.2676, 33.818, 71.009, 90.6337, 14.3772, 37.9796, 63.7054, 41.7224, 53.1411, 81.6681, 25.3031, 20.7756, 47.4218, 32.1279, 89.5913, 96.2497, 55.6453, 50.5764, 83.6386, 55.3311, 19.9444, 54.0157, 9.9447, 15.9428]    1
    Should Contain X Times    ${output}    ylut(90) = [28.7807, 58.3499, 53.4482, 43.2068, 56.8029, 1.024, 87.8498, 19.3657, 3.1848, 42.5262, 34.3062, 91.4577, 71.0491, 20.3899, 47.4137, 43.5296, 54.094, 27.2425, 54.057, 31.8781, 21.1337, 33.6637, 0.4791, 60.9606, 10.3831, 52.1479, 85.5942, 1.9825, 78.1098, 42.9216, 25.354, 79.723, 75.3469, 55.934, 1.5684, 60.605, 53.4454, 1.9916, 77.7363, 86.0311, 55.5819, 5.7703, 82.2142, 37.992, 25.7995, 38.0401, 19.1538, 35.0616, 79.5611, 36.0969, 56.9721, 48.8605, 40.5018, 7.4904, 45.2898, 28.8826, 89.4216, 88.2754, 44.4116, 83.6532, 17.8708, 62.9153, 68.2942, 11.9241, 53.0894, 36.2218, 11.0227, 97.4275, 64.4243, 86.3132, 87.2272, 47.9401, 3.8308, 38.9595, 50.413, 5.4895, 69.3194, 62.9322, 27.2058, 97.3943, 15.8106, 13.5174, 63.0182, 83.5526, 18.9289, 39.5909, 74.062, 86.1135, 51.2843, 69.0594]    1
    Should Contain X Times    ${output}    zlut(90) = [67.1446, 89.8417, 44.7134, 90.831, 34.5172, 92.8847, 11.6746, 7.6685, 59.8035, 35.9092, 10.5624, 13.9207, 62.9735, 90.0075, 62.1689, 69.5008, 11.5029, 98.3586, 65.1089, 63.7008, 30.0848, 43.6843, 94.7815, 9.2933, 14.0589, 37.9485, 75.8844, 12.9896, 25.5099, 44.0802, 35.4588, 47.2718, 64.16, 3.6941, 16.0118, 20.7399, 63.66, 24.401, 76.1718, 96.3712, 54.3999, 48.6334, 40.202, 23.543, 52.4717, 89.7816, 31.6834, 44.1832, 57.7029, 28.4721, 72.5959, 13.182, 55.6659, 98.2667, 44.5906, 62.8278, 68.3072, 35.0634, 8.1105, 63.8804, 56.1393, 23.7419, 20.8054, 83.3655, 83.8865, 44.0361, 99.901, 69.6637, 0.1577, 56.4419, 91.4131, 75.9988, 96.9314, 86.8052, 7.5513, 15.1133, 64.4553, 39.3427, 40.3693, 63.0579, 98.8946, 65.2038, 32.1217, 50.8056, 2.5195, 92.9904, 5.2967, 88.8056, 7.409, 88.6291]    1
    Should Contain X Times    ${output}    ulut(90) = [80.0857, 89.5691, 86.3128, 74.5238, 98.4139, 74.0522, 97.3861, 99.9379, 10.225, 69.8425, 81.2394, 12.0827, 72.1272, 21.6247, 62.3103, 16.0102, 25.9755, 80.058, 85.1145, 29.7215, 1.4669, 96.8194, 26.1493, 65.1851, 71.0677, 71.4809, 78.8824, 83.6438, 49.7629, 90.036, 62.6277, 22.5471, 89.1298, 99.7583, 41.3108, 7.4753, 78.4924, 68.1084, 5.1681, 1.8957, 96.6262, 85.8078, 4.7768, 48.1854, 81.8852, 31.4465, 59.0335, 45.9493, 48.8475, 20.5806, 73.6692, 18.9444, 28.0226, 46.4782, 5.6909, 83.1178, 29.4462, 76.3636, 24.6, 5.508, 81.3036, 71.0173, 15.3183, 71.2048, 72.0044, 45.6094, 50.1561, 12.4714, 24.68, 10.9261, 1.672, 48.633, 66.6481, 8.0328, 95.0485, 33.9445, 98.4662, 81.8117, 32.106, 41.0119, 6.9597, 77.3366, 33.6098, 71.3818, 33.77, 33.4634, 29.5207, 84.4376, 12.2638, 96.5845]    1
    Should Contain X Times    ${output}    vlut(90) = [18.4706, 98.7408, 27.1176, 63.5617, 94.4944, 66.8653, 60.5515, 17.0796, 80.8906, 28.4821, 10.096, 63.7098, 89.6776, 2.9103, 34.6424, 88.4179, 7.7273, 54.1571, 47.5608, 63.2045, 19.2586, 9.9515, 54.0027, 90.186, 37.4657, 75.8312, 51.4977, 84.7876, 16.0211, 81.8542, 92.2476, 45.1754, 99.3162, 99.7197, 95.9394, 92.7122, 94.9023, 5.6079, 91.6369, 49.3059, 85.0393, 33.8534, 72.6144, 99.8445, 85.8444, 82.862, 64.8461, 32.3464, 35.2873, 7.1554, 31.153, 1.6506, 27.6036, 86.0438, 98.7498, 73.2371, 23.8666, 35.8687, 31.6193, 44.5575, 37.034, 89.8864, 19.4928, 27.195, 32.0666, 87.1229, 70.699, 40.425, 57.1147, 30.6694, 57.5434, 75.4014, 98.5527, 21.435, 99.65, 45.6484, 4.9788, 91.9415, 98.0225, 24.5525, 97.55, 64.3383, 16.9784, 20.4712, 88.1071, 50.441, 18.2745, 54.0028, 56.7343, 53.0914]    1
    Should Contain X Times    ${output}    wlut(90) = [96.4882, 39.8047, 55.275, 19.9188, 32.4489, 20.0234, 66.0736, 53.9824, 21.592, 26.0583, 52.683, 1.4446, 23.4005, 65.2033, 5.2343, 94.7837, 50.0618, 80.1203, 2.6496, 26.817, 39.7284, 59.2003, 83.0785, 65.5468, 63.6052, 82.6849, 80.9369, 42.5444, 82.0659, 76.4068, 7.1141, 60.6007, 91.1444, 14.701, 65.1369, 60.7228, 97.5522, 8.2271, 5.103, 18.3386, 26.1137, 38.9197, 52.7062, 77.104, 88.762, 98.5758, 6.0055, 12.2751, 51.3576, 13.9762, 70.7019, 80.9097, 49.5919, 85.1844, 96.6626, 89.4109, 47.5256, 27.8781, 79.4011, 24.1857, 65.2843, 28.677, 8.073, 77.384, 28.8662, 27.5085, 27.3302, 76.4902, 39.1842, 37.0493, 83.1914, 11.8118, 2.7501, 64.0567, 90.7318, 30.1634, 40.9663, 5.2089, 21.609, 89.1704, 47.1793, 35.8594, 16.8447, 41.0273, 72.7379, 8.1543, 45.251, 53.851, 61.7209, 33.5566]    1
    Should Contain X Times    ${output}    === [ackCommand_configureLut] acknowledging a command with :    1
    Should Contain    ${output}    seqNum   :
    Should Contain    ${output}    ack      : 301
    Should Contain X Times    ${output}    error \ \ \ : 0    1
    Should Contain    ${output}    result   : Ack : OK
    Should Contain    ${output}    ack      : 303
    Should Contain    ${output}    result   : Done : OK
